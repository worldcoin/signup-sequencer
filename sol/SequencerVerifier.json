{
    "abi": [
      {
        "inputs": [
          {
            "internalType": "uint256[8]",
            "name": "proof",
            "type": "uint256[8]"
          },
          {
            "internalType": "uint256[1]",
            "name": "input",
            "type": "uint256[1]"
          }
        ],
        "name": "verifyProof",
        "outputs": [],
        "stateMutability": "pure",
        "type": "function"
      }
    ],
    "bytecode": {
      "object": "0x608060405234801561001057600080fd5b5061016c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631b81f82914610030575b600080fd5b61004361003e3660046100cf565b610045565b005b61005160028335610114565b15801561008b575080356100897f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000016020850135610114565b145b6100cb5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210283937b7b360991b604482015260640160405180910390fd5b5050565b6000806101208084860312156100e457600080fd5b6101008401858111156100f657600080fd5b84935085828601111561010857600080fd5b80925050509250929050565b60008261013157634e487b7160e01b600052601260045260246000fd5b50069056fea264697066735822122052365dd6994a4a98e85f037d39e5b835d33e286586b1fb45ae2719472036bdad64736f6c63430008150033",
      "sourceMap": "305:385:1:-:0;;;;;;;;;;;;;;;;;;;",
      "linkReferences": {}
    },
    "deployedBytecode": {
      "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80631b81f82914610030575b600080fd5b61004361003e3660046100cf565b610045565b005b61005160028335610114565b15801561008b575080356100897f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000016020850135610114565b145b6100cb5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210283937b7b360991b604482015260640160405180910390fd5b5050565b6000806101208084860312156100e457600080fd5b6101008401858111156100f657600080fd5b84935085828601111561010857600080fd5b80925050509250929050565b60008261013157634e487b7160e01b600052601260045260246000fd5b50069056fea264697066735822122052365dd6994a4a98e85f037d39e5b835d33e286586b1fb45ae2719472036bdad64736f6c63430008150033",
      "sourceMap": "305:385:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;494:194;;;;;;:::i;:::-;;:::i;:::-;;;601:12;612:1;601:8;;:12;:::i;:::-;:17;:62;;;;-1:-1:-1;655:8:1;;622:29;410:77;655:8;622;;;:29;:::i;:::-;:41;601:62;593:88;;;;-1:-1:-1;;;593:88:1;;985:2:2;593:88:1;;;967:21:2;1024:2;1004:18;;;997:30;-1:-1:-1;;;1043:18:2;;;1036:43;1096:18;;593:88:1;;;;;;;;494:194;;:::o;14:418:2:-;132:6;140;171:3;215:2;203:9;194:7;190:23;186:32;183:52;;;231:1;228;221:12;183:52;269:3;258:9;254:19;292:7;288:2;285:15;282:35;;;313:1;310;303:12;282:35;336:9;326:19;;380:7;375:2;364:9;360:18;357:31;354:51;;;401:1;398;391:12;354:51;424:2;414:12;;;;14:418;;;;;:::o;569:209::-;601:1;627;617:132;;671:10;666:3;662:20;659:1;652:31;706:4;703:1;696:15;734:4;731:1;724:15;617:132;-1:-1:-1;763:9:2;;569:209::o",
      "linkReferences": {}
    },
    "methodIdentifiers": {
      "verifyProof(uint256[8],uint256[1])": "1b81f829"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[8]\",\"name\":\"proof\",\"type\":\"uint256[8]\"},{\"internalType\":\"uint256[1]\",\"name\":\"input\",\"type\":\"uint256[1]\"}],\"name\":\"verifyProof\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Worldcoin\",\"kind\":\"dev\",\"methods\":{\"verifyProof(uint256[8],uint256[1])\":{\"params\":{\"input\":\"the public input field elements in the scalar field Fr. Elements must be reduced.\",\"proof\":\"the points (A, B, C) in EIP-197 format matching the output of compressProof.\"}}},\"title\":\"Sequencer Verifier\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"verifyProof(uint256[8],uint256[1])\":{\"notice\":\"Verify an uncompressed Groth16 proof.Reverts with InvalidProof if the proof is invalid or with PublicInputNotInField the public input is not reduced.There is no return value. If the function does not revert, the proof was succesfully verified.\"}},\"notice\":\"A verifier that matches the success conditions used by the mock prover service in the         signup sequencer.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/mock/SequencerVerifier.sol\":\"SequencerVerifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@zk-kit/=lib/zk-kit/packages/\",\":contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":semaphore/=lib/semaphore/packages/contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":zk-kit/=lib/zk-kit/\"]},\"sources\":{\"src/interfaces/ITreeVerifier.sol\":{\"keccak256\":\"0x0f4c39de6e476791f28510b61c3fb781468d1ecfd88ab15c1bdcb730e90fbd4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4facca90510d2efbb44a3ddeace04da1d5396b914b9e5d93f55d5253605c20a4\",\"dweb:/ipfs/QmSg8fYNFXLUse5xmBaayeTsk7QuuHaVLuXmJXZ4E3Mvuw\"]},\"src/test/mock/SequencerVerifier.sol\":{\"keccak256\":\"0x71e8ade7845e87c5dd546f1e6967f8a6310c5a9c9fab555055be16cc825909b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42f3940b559b390ce9ccb59b5cdba910bee15f3d931df9bb2b6251395bfad7df\",\"dweb:/ipfs/QmdD68CshbDRCzKYtxFveHDdHHKH96sDZJVxGNoEsVJq26\"]}},\"version\":1}",
    "metadata": {
      "compiler": {
        "version": "0.8.21+commit.d9974bed"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "uint256[8]",
                "name": "proof",
                "type": "uint256[8]"
              },
              {
                "internalType": "uint256[1]",
                "name": "input",
                "type": "uint256[1]"
              }
            ],
            "stateMutability": "pure",
            "type": "function",
            "name": "verifyProof"
          }
        ],
        "devdoc": {
          "kind": "dev",
          "methods": {
            "verifyProof(uint256[8],uint256[1])": {
              "params": {
                "input": "the public input field elements in the scalar field Fr. Elements must be reduced.",
                "proof": "the points (A, B, C) in EIP-197 format matching the output of compressProof."
              }
            }
          },
          "version": 1
        },
        "userdoc": {
          "kind": "user",
          "methods": {
            "verifyProof(uint256[8],uint256[1])": {
              "notice": "Verify an uncompressed Groth16 proof.Reverts with InvalidProof if the proof is invalid or with PublicInputNotInField the public input is not reduced.There is no return value. If the function does not revert, the proof was succesfully verified."
            }
          },
          "version": 1
        }
      },
      "settings": {
        "remappings": [
          "@zk-kit/=lib/zk-kit/packages/",
          "contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
          "ds-test/=lib/ds-test/src/",
          "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
          "forge-std/=lib/forge-std/src/",
          "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
          "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
          "openzeppelin/=lib/openzeppelin-contracts/contracts/",
          "semaphore/=lib/semaphore/packages/contracts/contracts/",
          "solmate/=lib/solmate/src/",
          "zk-kit/=lib/zk-kit/"
        ],
        "optimizer": {
          "enabled": true,
          "runs": 200
        },
        "metadata": {
          "bytecodeHash": "ipfs"
        },
        "compilationTarget": {
          "src/test/mock/SequencerVerifier.sol": "SequencerVerifier"
        },
        "libraries": {}
      },
      "sources": {
        "src/interfaces/ITreeVerifier.sol": {
          "keccak256": "0x0f4c39de6e476791f28510b61c3fb781468d1ecfd88ab15c1bdcb730e90fbd4f",
          "urls": [
            "bzz-raw://4facca90510d2efbb44a3ddeace04da1d5396b914b9e5d93f55d5253605c20a4",
            "dweb:/ipfs/QmSg8fYNFXLUse5xmBaayeTsk7QuuHaVLuXmJXZ4E3Mvuw"
          ],
          "license": "MIT"
        },
        "src/test/mock/SequencerVerifier.sol": {
          "keccak256": "0x71e8ade7845e87c5dd546f1e6967f8a6310c5a9c9fab555055be16cc825909b0",
          "urls": [
            "bzz-raw://42f3940b559b390ce9ccb59b5cdba910bee15f3d931df9bb2b6251395bfad7df",
            "dweb:/ipfs/QmdD68CshbDRCzKYtxFveHDdHHKH96sDZJVxGNoEsVJq26"
          ],
          "license": "MIT"
        }
      },
      "version": 1
    },
    "ast": {
      "absolutePath": "src/test/mock/SequencerVerifier.sol",
      "id": 60,
      "exportedSymbols": {
        "ITreeVerifier": [
          15
        ],
        "SequencerVerifier": [
          59
        ]
      },
      "nodeType": "SourceUnit",
      "src": "32:659:1",
      "nodes": [
        {
          "id": 17,
          "nodeType": "PragmaDirective",
          "src": "32:24:1",
          "nodes": [],
          "literals": [
            "solidity",
            "^",
            "0.8",
            ".21"
          ]
        },
        {
          "id": 19,
          "nodeType": "ImportDirective",
          "src": "58:65:1",
          "nodes": [],
          "absolutePath": "src/interfaces/ITreeVerifier.sol",
          "file": "../../interfaces/ITreeVerifier.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 60,
          "sourceUnit": 16,
          "symbolAliases": [
            {
              "foreign": {
                "id": 18,
                "name": "ITreeVerifier",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 15,
                "src": "66:13:1",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 59,
          "nodeType": "ContractDefinition",
          "src": "305:385:1",
          "nodes": [
            {
              "id": 25,
              "nodeType": "VariableDeclaration",
              "src": "355:132:1",
              "nodes": [],
              "constant": true,
              "mutability": "constant",
              "name": "SNARK_SCALAR_FIELD",
              "nameLocation": "381:18:1",
              "scope": 59,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 23,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "355:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "3231383838323432383731383339323735323232323436343035373435323537323735303838353438333634343030343136303334333433363938323034313836353735383038343935363137",
                "id": 24,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "410:77:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_21888242871839275222246405745257275088548364400416034343698204186575808495617_by_1",
                  "typeString": "int_const 2188...(69 digits omitted)...5617"
                },
                "value": "21888242871839275222246405745257275088548364400416034343698204186575808495617"
              },
              "visibility": "internal"
            },
            {
              "id": 58,
              "nodeType": "FunctionDefinition",
              "src": "494:194:1",
              "nodes": [],
              "body": {
                "id": 57,
                "nodeType": "Block",
                "src": "583:105:1",
                "nodes": [],
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 43,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 41,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 37,
                                  "name": "proof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29,
                                  "src": "601:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                                    "typeString": "uint256[8] calldata"
                                  }
                                },
                                "id": 39,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 38,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "607:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "601:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 40,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "612:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "601:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 42,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "617:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "601:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 52,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 48,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 44,
                                  "name": "proof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29,
                                  "src": "622:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                                    "typeString": "uint256[8] calldata"
                                  }
                                },
                                "id": 46,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 45,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "628:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "622:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "id": 47,
                                "name": "SNARK_SCALAR_FIELD",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "633:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "622:29:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 49,
                                "name": "input",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33,
                                "src": "655:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$1_calldata_ptr",
                                  "typeString": "uint256[1] calldata"
                                }
                              },
                              "id": 51,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 50,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "661:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "655:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "622:41:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "601:62:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "496e76616c69642050726f6f66",
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "665:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d95d531e7ef85c3e7467db7c164ce0d8b7b23d0a5a166a2fc91faa2aab5ab486",
                            "typeString": "literal_string \"Invalid Proof\""
                          },
                          "value": "Invalid Proof"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_d95d531e7ef85c3e7467db7c164ce0d8b7b23d0a5a166a2fc91faa2aab5ab486",
                            "typeString": "literal_string \"Invalid Proof\""
                          }
                        ],
                        "id": 36,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "593:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "593:88:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 56,
                    "nodeType": "ExpressionStatement",
                    "src": "593:88:1"
                  }
                ]
              },
              "baseFunctions": [
                14
              ],
              "functionSelector": "1b81f829",
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "verifyProof",
              "nameLocation": "503:11:1",
              "parameters": {
                "id": 34,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 29,
                    "mutability": "mutable",
                    "name": "proof",
                    "nameLocation": "535:5:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 58,
                    "src": "515:25:1",
                    "stateVariable": false,
                    "storageLocation": "calldata",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                      "typeString": "uint256[8]"
                    },
                    "typeName": {
                      "baseType": {
                        "id": 26,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "515:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 28,
                      "length": {
                        "hexValue": "38",
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "523:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "515:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
                        "typeString": "uint256[8]"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 33,
                    "mutability": "mutable",
                    "name": "input",
                    "nameLocation": "562:5:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 58,
                    "src": "542:25:1",
                    "stateVariable": false,
                    "storageLocation": "calldata",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$1_calldata_ptr",
                      "typeString": "uint256[1]"
                    },
                    "typeName": {
                      "baseType": {
                        "id": 30,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "542:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 32,
                      "length": {
                        "hexValue": "31",
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "550:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "542:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$1_storage_ptr",
                        "typeString": "uint256[1]"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "514:54:1"
              },
              "returnParameters": {
                "id": 35,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "583:0:1"
              },
              "scope": 59,
              "stateMutability": "pure",
              "virtual": false,
              "visibility": "external"
            }
          ],
          "abstract": false,
          "baseContracts": [
            {
              "baseName": {
                "id": 21,
                "name": "ITreeVerifier",
                "nameLocations": [
                  "335:13:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 15,
                "src": "335:13:1"
              },
              "id": 22,
              "nodeType": "InheritanceSpecifier",
              "src": "335:13:1"
            }
          ],
          "canonicalName": "SequencerVerifier",
          "contractDependencies": [],
          "contractKind": "contract",
          "documentation": {
            "id": 20,
            "nodeType": "StructuredDocumentation",
            "src": "125:180:1",
            "text": "@title Sequencer Verifier\n @author Worldcoin\n @notice A verifier that matches the success conditions used by the mock prover service in the\n         signup sequencer."
          },
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            59,
            15
          ],
          "name": "SequencerVerifier",
          "nameLocation": "314:17:1",
          "scope": 60,
          "usedErrors": [],
          "usedEvents": []
        }
      ],
      "license": "MIT"
    },
    "id": 1
  }
