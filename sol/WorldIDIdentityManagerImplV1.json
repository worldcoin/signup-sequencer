{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CannotRenounceOwnership",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpiredRoot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ImplementationNotInitialized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "InvalidCommitment",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidStateBridgeAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidVerifier",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidVerifierLUT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MismatchedInputLengths",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonExistentRoot",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "providedRoot",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "latestRoot",
          "type": "uint256"
        }
      ],
      "name": "NotLatestRoot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProofValidationFailure",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StateBridgeAlreadyDisabled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StateBridgeAlreadyEnabled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum WorldIDIdentityManagerImplV1.UnreducedElementType",
          "name": "elementType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "element",
          "type": "uint256"
        }
      ],
      "name": "UnreducedElement",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "depth",
          "type": "uint8"
        }
      ],
      "name": "UnsupportedTreeDepth",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "enum WorldIDIdentityManagerImplV1.Dependency",
          "name": "kind",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "DependencyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldOperator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "IdentityOperatorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "oldExpiryTime",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newExpiryTime",
          "type": "uint256"
        }
      ],
      "name": "RootHistoryExpirySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bool",
          "name": "isEnabled",
          "type": "bool"
        }
      ],
      "name": "StateBridgeStateChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "preRoot",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "enum WorldIDIdentityManagerImplV1.TreeChange",
          "name": "kind",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "postRoot",
          "type": "uint256"
        }
      ],
      "name": "TreeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_treeDepth",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialRoot",
          "type": "uint256"
        }
      ],
      "name": "WorldIDIdentityManagerImplInitialized",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NO_SUCH_ROOT",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "supersededTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bool",
              "name": "isValid",
              "type": "bool"
            }
          ],
          "internalType": "struct WorldIDIdentityManagerImplV1.RootInfo",
          "name": "rootInfo",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "startIndex",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "preRoot",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "postRoot",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "identityCommitments",
          "type": "uint256[]"
        }
      ],
      "name": "calculateIdentityRegistrationInputHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegisterIdentitiesVerifierLookupTableAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRootHistoryExpiry",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSemaphoreVerifierAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTreeDepth",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "identityOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_treeDepth",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "initialRoot",
          "type": "uint256"
        },
        {
          "internalType": "contract VerifierLookupTable",
          "name": "_batchInsertionVerifiers",
          "type": "address"
        },
        {
          "internalType": "contract VerifierLookupTable",
          "name": "_batchUpdateVerifiers",
          "type": "address"
        },
        {
          "internalType": "contract ISemaphoreVerifier",
          "name": "_semaphoreVerifier",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "root",
          "type": "uint256"
        }
      ],
      "name": "queryRoot",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "supersededTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bool",
              "name": "isValid",
              "type": "bool"
            }
          ],
          "internalType": "struct WorldIDIdentityManagerImplV1.RootInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[8]",
          "name": "insertionProof",
          "type": "uint256[8]"
        },
        {
          "internalType": "uint256",
          "name": "preRoot",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "startIndex",
          "type": "uint32"
        },
        {
          "internalType": "uint256[]",
          "name": "identityCommitments",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "postRoot",
          "type": "uint256"
        }
      ],
      "name": "registerIdentities",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "root",
          "type": "uint256"
        }
      ],
      "name": "requireValidRoot",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newIdentityOperator",
          "type": "address"
        }
      ],
      "name": "setIdentityOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract VerifierLookupTable",
          "name": "newTable",
          "type": "address"
        }
      ],
      "name": "setRegisterIdentitiesVerifierLookupTable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newExpiryTime",
          "type": "uint256"
        }
      ],
      "name": "setRootHistoryExpiry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISemaphoreVerifier",
          "name": "newVerifier",
          "type": "address"
        }
      ],
      "name": "setSemaphoreVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "root",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "signalHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nullifierHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "externalNullifierHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[8]",
          "name": "proof",
          "type": "uint256[8]"
        }
      ],
      "name": "verifyProof",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e8565b600054610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e6576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805161299f62000200600039600081816104ad015281816104f6015281816105fb0152818161063b015281816109060152818161094601528181610a2201528181610a6201528181610b6c01528181610bac01528181610e9301528181610ed30152818161102901528181611069015281816110f501528181611135015281816111b1015281816112fb0152818161133b015281816113fe0152818161143e015281816114d501528181611515015281816115ab015281816115eb015281816116cb0152818161170b0152818161182201528181611862015281816118ef0152818161192f015281816119c501528181611a0501528181611a9901528181611ad901528181611cbf0152611cff015261299f6000f3fe6080604052600436106101665760003560e01c806379ba5097116100d1578063c70aa7271161008a578063f134b6ca11610064578063f134b6ca14610439578063f2038f951461044e578063f2358e1d14610463578063f2fde38b1461048357600080fd5b8063c70aa727146103e6578063d7b0fef114610406578063e30c39781461041b57600080fd5b806379ba5097146103235780638c76a909146103385780638da5cb5b146103585780638e5cdd501461038a5780638fc22e9f146103b1578063a7bba582146103c657600080fd5b80633f7c178d116101235780633f7c178d1461022d57806343f974cb1461027f5780634f1ef286146102a257806352d1902d146102b5578063561f204b146102ca578063715018a61461030e57600080fd5b80630e3a12f31461016b5780632217b2111461018d5780632f059fca146101ad578063354ca120146101cd5780633659cfe6146101ed57806338c870651461020d575b600080fd5b34801561017757600080fd5b5061018b6101863660046122bc565b6104a3565b005b34801561019957600080fd5b5061018b6101a836600461234b565b6105f1565b3480156101b957600080fd5b5061018b6101c83660046122bc565b6108fc565b3480156101d957600080fd5b5061018b6101e83660046123c8565b610a18565b3480156101f957600080fd5b5061018b6102083660046122bc565b610b62565b34801561021957600080fd5b5061018b610228366004612413565b610c2a565b34801561023957600080fd5b5061024d610248366004612481565b610e6c565b60408051825181526020808401516001600160801b031690820152918101511515908201526060015b60405180910390f35b34801561028b57600080fd5b5061029461101d565b604051908152602001610276565b61018b6102b03660046124dd565b6110eb565b3480156102c157600080fd5b506102946111a4565b3480156102d657600080fd5b50604080516060808201835260008083526020808401829052928401819052835191820184528082529181018290529182015261024d565b34801561031a57600080fd5b5061018b611257565b34801561032f57600080fd5b5061018b611278565b34801561034457600080fd5b50610294610353366004612589565b6112ef565b34801561036457600080fd5b506033546001600160a01b03165b6040516001600160a01b039091168152602001610276565b34801561039657600080fd5b5061039f6113f2565b60405160ff9091168152602001610276565b3480156103bd57600080fd5b506103726114c9565b3480156103d257600080fd5b506103726103e13660046122bc565b61159f565b3480156103f257600080fd5b5061018b610401366004612481565b6116c1565b34801561041257600080fd5b50610294611816565b34801561042757600080fd5b506065546001600160a01b0316610372565b34801561044557600080fd5b506103726118e3565b34801561045a57600080fd5b506103726119b9565b34801561046f57600080fd5b5061018b61047e366004612481565b611a8f565b34801561048f57600080fd5b5061018b61049e3660046122bc565b611bcc565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104f45760405162461bcd60e51b81526004016104eb906125f1565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610526611c3d565b6001600160a01b03161461054c5760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff1661056f57604051630103019560e11b815260040160405180910390fd5b610577611c59565b6001600160a01b03811661059e5760405163baa3de5f60e01b815260040160405180910390fd5b61013380546001600160a01b038381166001600160a01b03198316811790935516908160035b6040517fd194b8423e9cb3c7cbebbbc3fe7f79dc2cbe0b40e03270d975abff491504c7b190600090a45050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106395760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661066b611c3d565b6001600160a01b0316146106915760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff166106b457604051630103019560e11b815260040160405180910390fd5b61012d546001600160a01b031633146106e25760405163472511eb60e11b81523360048201526024016104eb565b61012e5485146107145761012e5460405163542fced960e11b81526104eb918791600401918252602082015260400190565b600061072385878487876112ef565b905060006107517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183612689565b61013154604051638a283fc360e01b8152600481018790529192506000916001600160a01b0390911690638a283fc390602401602060405180830381865afa1580156107a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c591906126ab565b604080516020810182528481529051631b81f82960e01b81529192506001600160a01b03831691631b81f82991610801918d91906004016126c8565b600060405180830381600087803b15801561081b57600080fd5b505af192505050801561082c575060015b61088c57610838612703565b806308c379a003610871575061084c61271e565b806108575750610873565b8060405162461bcd60e51b81526004016104eb91906127cc565b505b604051631e716a8b60e01b815260040160405180910390fd5b61012e849055600088815261012f6020526040812080546fffffffffffffffffffffffffffffffff1916426001600160801b031617905584906040518a907f25f6d5cc356ee0b49cf708c13c68197947f5740a878a298765e4b18e4afdaf0490600090a45b505050505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036109445760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610976611c3d565b6001600160a01b03161461099c5760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff166109bf57604051630103019560e11b815260040160405180910390fd5b6109c7611c59565b6001600160a01b0381166109ee57604051634fdab25360e01b815260040160405180910390fd5b61013180546001600160a01b038381166001600160a01b03198316811790935516908160016105c4565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610a605760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a92611c3d565b6001600160a01b031614610ab85760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff16610adb57604051630103019560e11b815260040160405180910390fd5b610ae485611a8f565b610133546040805160808101825287815260208101869052808201879052606081018590529051632357251160e01b81526001600160a01b0390921691632357251191610b36918591906004016127ff565b60006040518083038186803b158015610b4e57600080fd5b505afa1580156108f1573d6000803e3d6000fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610baa5760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610bdc611c3d565b6001600160a01b031614610c025760405162461bcd60e51b81526004016104eb9061263d565b610c0b81611cb5565b60408051600080825260208201909252610c2791839190611d5d565b50565b600054600190610100900460ff16158015610c4c575060005460ff8083169116105b610caf5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104eb565b6000805461ffff191660ff8316176101001790556001600160a01b038416610cea57604051634fdab25360e01b815260040160405180910390fd5b6001600160a01b038316610d1157604051634fdab25360e01b815260040160405180910390fd5b6001600160a01b038216610d385760405163baa3de5f60e01b815260040160405180910390fd5b610d40611ecd565b610d4986611efc565b610d6b57604051630220cee360e61b815260ff871660048201526024016104eb565b610134805460ff60a81b1916600160a81b60ff891602179055610e106101305561012e85905561013180546001600160a01b03199081166001600160a01b0387811691909117909255610132805482168684161790556101338054821685841617905560335461012d8054919093169116179055610de7611f23565b6040805160ff88168152602081018790527fd1bcc66c061c32a21f569d138c2dadef4a38a0636309881954af5f44010ec1d8910160405180910390a16000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050505050565b60408051606081018252600080825260208201819052918101919091526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610ed15760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610f03611c3d565b6001600160a01b031614610f295760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff16610f4c57604051630103019560e11b815260040160405180910390fd5b61012e548203610f7b5750506040805160608101825261012e5481526000602082015260019181019190915290565b600082815261012f60205260408120546001600160801b031690819003610fd65760408051606080820183526000808352602080840182905292840181905283519182018452808252918101829052918201525b9392505050565b61013054600090610ff06001600160801b03841642612830565b604080516060810182528781526001600160801b039095166020860152911015908301525090505b919050565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036110675760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611099611c3d565b6001600160a01b0316146110bf5760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff166110e257604051630103019560e11b815260040160405180910390fd5b50610130545b90565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036111335760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611165611c3d565b6001600160a01b03161461118b5760405162461bcd60e51b81526004016104eb9061263d565b61119482611cb5565b6111a082826001611d5d565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146112445760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016104eb565b5060008051602061292383398151915290565b61125f611c59565b6040516377aeb0ad60e01b815260040160405180910390fd5b60655433906001600160a01b031681146112e65760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084016104eb565b610c2781611f59565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036113395760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661136b611c3d565b6001600160a01b0316146113915760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff166113b457604051630103019560e11b815260040160405180910390fd5b600086868686866040516020016113cf959493929190612851565b60408051601f198184030181529190528051602090910120979650505050505050565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361143c5760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661146e611c3d565b6001600160a01b0316146114945760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff166114b757604051630103019560e11b815260040160405180910390fd5b5061013454600160a81b900460ff1690565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036115135760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611545611c3d565b6001600160a01b03161461156b5760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff1661158e57604051630103019560e11b815260040160405180910390fd5b50610131546001600160a01b031690565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036115e95760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661161b611c3d565b6001600160a01b0316146116415760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff1661166457604051630103019560e11b815260040160405180910390fd5b61166c611c59565b61012d80546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f5a674c516c196404869e5f502b5634ce442416bb016dde54b5de4c812cc019e690600090a392915050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036117095760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661173b611c3d565b6001600160a01b0316146117615760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff1661178457604051630103019560e11b815260040160405180910390fd5b61178c611c59565b806000036117dc5760405162461bcd60e51b815260206004820152601b60248201527f4578706972792074696d652063616e6e6f74206265207a65726f2e000000000060448201526064016104eb565b610130805490829055604051829082907ff62a6f06fde00a303cd5939e6b53762854412c96a196cda26720cedd28af9e7090600090a35050565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036118605760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611892611c3d565b6001600160a01b0316146118b85760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff166118db57604051630103019560e11b815260040160405180910390fd5b5061012e5490565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361192d5760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661195f611c3d565b6001600160a01b0316146119855760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff166119a857604051630103019560e11b815260040160405180910390fd5b5061012d546001600160a01b031690565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611a035760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611a35611c3d565b6001600160a01b031614611a5b5760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff16611a7e57604051630103019560e11b815260040160405180910390fd5b50610133546001600160a01b031690565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611ad75760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611b09611c3d565b6001600160a01b031614611b2f5760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff16611b5257604051630103019560e11b815260040160405180910390fd5b61012e548114610c2757600081815261012f60205260408120546001600160801b031690819003611b965760405163ddae3b7160e01b815260040160405180910390fd5b61013054611bad6001600160801b03831642612830565b11156111a057604051631d739acf60e11b815260040160405180910390fd5b611bd4611c59565b606580546001600160a01b0383166001600160a01b03199091168117909155611c056033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600080516020612923833981519152546001600160a01b031690565b6033546001600160a01b03163314611cb35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104eb565b565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611cfd5760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611d2f611c3d565b6001600160a01b031614611d555760405162461bcd60e51b81526004016104eb9061263d565b610c27611c59565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611d9557611d9083611f72565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611def575060408051601f3d908101601f19168201909252611dec918101906128a2565b60015b611e525760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016104eb565b6000805160206129238339815191528114611ec15760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016104eb565b50611d9083838361200e565b600054610100900460ff16611ef45760405162461bcd60e51b81526004016104eb906128bb565b611cb3612039565b60006010602060ff84168211801590611f1b57508060ff168460ff1611155b949350505050565b600054610100900460ff16611f4a5760405162461bcd60e51b81526004016104eb906128bb565b60fb805460ff19166001179055565b606580546001600160a01b0319169055610c2781612070565b6001600160a01b0381163b611fdf5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016104eb565b60008051602061292383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b612017836120c2565b6000825111806120245750805b15611d90576120338383612102565b50505050565b600054610100900460ff166120605760405162461bcd60e51b81526004016104eb906128bb565b6120686121f8565b611cb3612227565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6120cb81611f72565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b61216a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016104eb565b600080846001600160a01b0316846040516121859190612906565b600060405180830381855af49150503d80600081146121c0576040519150601f19603f3d011682016040523d82523d6000602084013e6121c5565b606091505b50915091506121ed82826040518060600160405280602781526020016129436027913961224e565b925050505b92915050565b600054610100900460ff1661221f5760405162461bcd60e51b81526004016104eb906128bb565b611cb3612267565b600054610100900460ff16611cb35760405162461bcd60e51b81526004016104eb906128bb565b6060831561225d575081610fcf565b610fcf8383612297565b600054610100900460ff1661228e5760405162461bcd60e51b81526004016104eb906128bb565b611cb333611f59565b8151156108575781518083602001fd5b6001600160a01b0381168114610c2757600080fd5b6000602082840312156122ce57600080fd5b8135610fcf816122a7565b8061010081018310156121f257600080fd5b803563ffffffff8116811461101857600080fd5b60008083601f84011261231157600080fd5b50813567ffffffffffffffff81111561232957600080fd5b6020830191508360208260051b850101111561234457600080fd5b9250929050565b600080600080600080610180878903121561236557600080fd5b61236f88886122d9565b9550610100870135945061238661012088016122eb565b935061014087013567ffffffffffffffff8111156123a357600080fd5b6123af89828a016122ff565b979a969950949794969561016090950135949350505050565b600080600080600061018086880312156123e157600080fd5b8535945060208601359350604086013592506060860135915061240787608088016122d9565b90509295509295909350565b600080600080600060a0868803121561242b57600080fd5b853560ff8116811461243c57600080fd5b9450602086013593506040860135612453816122a7565b92506060860135612463816122a7565b91506080860135612473816122a7565b809150509295509295909350565b60006020828403121561249357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156124d6576124d661249a565b6040525050565b600080604083850312156124f057600080fd5b82356124fb816122a7565b915060208381013567ffffffffffffffff8082111561251957600080fd5b818601915086601f83011261252d57600080fd5b81358181111561253f5761253f61249a565b6040519150612557601f8201601f19168501836124b0565b808252878482850101111561256b57600080fd5b80848401858401376000848284010152508093505050509250929050565b6000806000806000608086880312156125a157600080fd5b6125aa866122eb565b94506020860135935060408601359250606086013567ffffffffffffffff8111156125d457600080fd5b6125e0888289016122ff565b969995985093965092949392505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000826126a657634e487b7160e01b600052601260045260246000fd5b500690565b6000602082840312156126bd57600080fd5b8151610fcf816122a7565b61012081016101008085843782018360005b60018110156126f95781518352602092830192909101906001016126da565b5050509392505050565b600060033d11156110e85760046000803e5060005160e01c90565b600060443d101561272c5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561275c57505050505090565b82850191508151818111156127745750505050505090565b843d870101602082850101111561278e5750505050505090565b61279d602082860101876124b0565b509095945050505050565b60005b838110156127c35781810151838201526020016127ab565b50506000910152565b60208152600082518060208401526127eb8160408501602087016127a8565b601f01601f19169190910160400192915050565b61018081016101008085843782018360005b60048110156126f9578151835260209283019290910190600101612811565b818103818111156121f257634e487b7160e01b600052601160045260246000fd5b60e086901b6001600160e01b0319168152600481018590526024810184905260006001600160fb1b0383111561288657600080fd5b8260051b80856044850137919091016044019695505050505050565b6000602082840312156128b457600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082516129188184602087016127a8565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d633b870ce7639e47f939f23913c37dfc96a2846c751924ff2ef6c68d09aa72264736f6c63430008150033",
    "sourceMap": "879:30959:43:-:0;;;1332:4:23;1289:48;;13484:281:43;;;;;;;;;-1:-1:-1;13736:22:43;:20;:22::i;:::-;879:30959;;5928:279:22;5996:13;;;;;;;5995:14;5987:66;;;;-1:-1:-1;;;5987:66:22;;216:2:77;5987:66:22;;;198:21:77;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:77;;;338:37;392:19;;5987:66:22;;;;;;;;6067:12;;6082:15;6067:12;;;:30;6063:138;;;6113:12;:30;;-1:-1:-1;;6113:30:22;6128:15;6113:30;;;;;;6162:28;;564:36:77;;;6162:28:22;;552:2:77;537:18;6162:28:22;;;;;;;6063:138;5928:279::o;422:184:77:-;879:30959:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101665760003560e01c806379ba5097116100d1578063c70aa7271161008a578063f134b6ca11610064578063f134b6ca14610439578063f2038f951461044e578063f2358e1d14610463578063f2fde38b1461048357600080fd5b8063c70aa727146103e6578063d7b0fef114610406578063e30c39781461041b57600080fd5b806379ba5097146103235780638c76a909146103385780638da5cb5b146103585780638e5cdd501461038a5780638fc22e9f146103b1578063a7bba582146103c657600080fd5b80633f7c178d116101235780633f7c178d1461022d57806343f974cb1461027f5780634f1ef286146102a257806352d1902d146102b5578063561f204b146102ca578063715018a61461030e57600080fd5b80630e3a12f31461016b5780632217b2111461018d5780632f059fca146101ad578063354ca120146101cd5780633659cfe6146101ed57806338c870651461020d575b600080fd5b34801561017757600080fd5b5061018b6101863660046122bc565b6104a3565b005b34801561019957600080fd5b5061018b6101a836600461234b565b6105f1565b3480156101b957600080fd5b5061018b6101c83660046122bc565b6108fc565b3480156101d957600080fd5b5061018b6101e83660046123c8565b610a18565b3480156101f957600080fd5b5061018b6102083660046122bc565b610b62565b34801561021957600080fd5b5061018b610228366004612413565b610c2a565b34801561023957600080fd5b5061024d610248366004612481565b610e6c565b60408051825181526020808401516001600160801b031690820152918101511515908201526060015b60405180910390f35b34801561028b57600080fd5b5061029461101d565b604051908152602001610276565b61018b6102b03660046124dd565b6110eb565b3480156102c157600080fd5b506102946111a4565b3480156102d657600080fd5b50604080516060808201835260008083526020808401829052928401819052835191820184528082529181018290529182015261024d565b34801561031a57600080fd5b5061018b611257565b34801561032f57600080fd5b5061018b611278565b34801561034457600080fd5b50610294610353366004612589565b6112ef565b34801561036457600080fd5b506033546001600160a01b03165b6040516001600160a01b039091168152602001610276565b34801561039657600080fd5b5061039f6113f2565b60405160ff9091168152602001610276565b3480156103bd57600080fd5b506103726114c9565b3480156103d257600080fd5b506103726103e13660046122bc565b61159f565b3480156103f257600080fd5b5061018b610401366004612481565b6116c1565b34801561041257600080fd5b50610294611816565b34801561042757600080fd5b506065546001600160a01b0316610372565b34801561044557600080fd5b506103726118e3565b34801561045a57600080fd5b506103726119b9565b34801561046f57600080fd5b5061018b61047e366004612481565b611a8f565b34801561048f57600080fd5b5061018b61049e3660046122bc565b611bcc565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104f45760405162461bcd60e51b81526004016104eb906125f1565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610526611c3d565b6001600160a01b03161461054c5760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff1661056f57604051630103019560e11b815260040160405180910390fd5b610577611c59565b6001600160a01b03811661059e5760405163baa3de5f60e01b815260040160405180910390fd5b61013380546001600160a01b038381166001600160a01b03198316811790935516908160035b6040517fd194b8423e9cb3c7cbebbbc3fe7f79dc2cbe0b40e03270d975abff491504c7b190600090a45050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106395760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661066b611c3d565b6001600160a01b0316146106915760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff166106b457604051630103019560e11b815260040160405180910390fd5b61012d546001600160a01b031633146106e25760405163472511eb60e11b81523360048201526024016104eb565b61012e5485146107145761012e5460405163542fced960e11b81526104eb918791600401918252602082015260400190565b600061072385878487876112ef565b905060006107517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183612689565b61013154604051638a283fc360e01b8152600481018790529192506000916001600160a01b0390911690638a283fc390602401602060405180830381865afa1580156107a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c591906126ab565b604080516020810182528481529051631b81f82960e01b81529192506001600160a01b03831691631b81f82991610801918d91906004016126c8565b600060405180830381600087803b15801561081b57600080fd5b505af192505050801561082c575060015b61088c57610838612703565b806308c379a003610871575061084c61271e565b806108575750610873565b8060405162461bcd60e51b81526004016104eb91906127cc565b505b604051631e716a8b60e01b815260040160405180910390fd5b61012e849055600088815261012f6020526040812080546fffffffffffffffffffffffffffffffff1916426001600160801b031617905584906040518a907f25f6d5cc356ee0b49cf708c13c68197947f5740a878a298765e4b18e4afdaf0490600090a45b505050505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036109445760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610976611c3d565b6001600160a01b03161461099c5760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff166109bf57604051630103019560e11b815260040160405180910390fd5b6109c7611c59565b6001600160a01b0381166109ee57604051634fdab25360e01b815260040160405180910390fd5b61013180546001600160a01b038381166001600160a01b03198316811790935516908160016105c4565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610a605760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a92611c3d565b6001600160a01b031614610ab85760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff16610adb57604051630103019560e11b815260040160405180910390fd5b610ae485611a8f565b610133546040805160808101825287815260208101869052808201879052606081018590529051632357251160e01b81526001600160a01b0390921691632357251191610b36918591906004016127ff565b60006040518083038186803b158015610b4e57600080fd5b505afa1580156108f1573d6000803e3d6000fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610baa5760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610bdc611c3d565b6001600160a01b031614610c025760405162461bcd60e51b81526004016104eb9061263d565b610c0b81611cb5565b60408051600080825260208201909252610c2791839190611d5d565b50565b600054600190610100900460ff16158015610c4c575060005460ff8083169116105b610caf5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104eb565b6000805461ffff191660ff8316176101001790556001600160a01b038416610cea57604051634fdab25360e01b815260040160405180910390fd5b6001600160a01b038316610d1157604051634fdab25360e01b815260040160405180910390fd5b6001600160a01b038216610d385760405163baa3de5f60e01b815260040160405180910390fd5b610d40611ecd565b610d4986611efc565b610d6b57604051630220cee360e61b815260ff871660048201526024016104eb565b610134805460ff60a81b1916600160a81b60ff891602179055610e106101305561012e85905561013180546001600160a01b03199081166001600160a01b0387811691909117909255610132805482168684161790556101338054821685841617905560335461012d8054919093169116179055610de7611f23565b6040805160ff88168152602081018790527fd1bcc66c061c32a21f569d138c2dadef4a38a0636309881954af5f44010ec1d8910160405180910390a16000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050505050565b60408051606081018252600080825260208201819052918101919091526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610ed15760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610f03611c3d565b6001600160a01b031614610f295760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff16610f4c57604051630103019560e11b815260040160405180910390fd5b61012e548203610f7b5750506040805160608101825261012e5481526000602082015260019181019190915290565b600082815261012f60205260408120546001600160801b031690819003610fd65760408051606080820183526000808352602080840182905292840181905283519182018452808252918101829052918201525b9392505050565b61013054600090610ff06001600160801b03841642612830565b604080516060810182528781526001600160801b039095166020860152911015908301525090505b919050565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036110675760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611099611c3d565b6001600160a01b0316146110bf5760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff166110e257604051630103019560e11b815260040160405180910390fd5b50610130545b90565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036111335760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611165611c3d565b6001600160a01b03161461118b5760405162461bcd60e51b81526004016104eb9061263d565b61119482611cb5565b6111a082826001611d5d565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146112445760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016104eb565b5060008051602061292383398151915290565b61125f611c59565b6040516377aeb0ad60e01b815260040160405180910390fd5b60655433906001600160a01b031681146112e65760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084016104eb565b610c2781611f59565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036113395760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661136b611c3d565b6001600160a01b0316146113915760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff166113b457604051630103019560e11b815260040160405180910390fd5b600086868686866040516020016113cf959493929190612851565b60408051601f198184030181529190528051602090910120979650505050505050565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361143c5760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661146e611c3d565b6001600160a01b0316146114945760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff166114b757604051630103019560e11b815260040160405180910390fd5b5061013454600160a81b900460ff1690565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036115135760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611545611c3d565b6001600160a01b03161461156b5760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff1661158e57604051630103019560e11b815260040160405180910390fd5b50610131546001600160a01b031690565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036115e95760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661161b611c3d565b6001600160a01b0316146116415760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff1661166457604051630103019560e11b815260040160405180910390fd5b61166c611c59565b61012d80546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f5a674c516c196404869e5f502b5634ce442416bb016dde54b5de4c812cc019e690600090a392915050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036117095760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661173b611c3d565b6001600160a01b0316146117615760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff1661178457604051630103019560e11b815260040160405180910390fd5b61178c611c59565b806000036117dc5760405162461bcd60e51b815260206004820152601b60248201527f4578706972792074696d652063616e6e6f74206265207a65726f2e000000000060448201526064016104eb565b610130805490829055604051829082907ff62a6f06fde00a303cd5939e6b53762854412c96a196cda26720cedd28af9e7090600090a35050565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036118605760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611892611c3d565b6001600160a01b0316146118b85760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff166118db57604051630103019560e11b815260040160405180910390fd5b5061012e5490565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361192d5760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661195f611c3d565b6001600160a01b0316146119855760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff166119a857604051630103019560e11b815260040160405180910390fd5b5061012d546001600160a01b031690565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611a035760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611a35611c3d565b6001600160a01b031614611a5b5760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff16611a7e57604051630103019560e11b815260040160405180910390fd5b50610133546001600160a01b031690565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611ad75760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611b09611c3d565b6001600160a01b031614611b2f5760405162461bcd60e51b81526004016104eb9061263d565b60fb5460ff16611b5257604051630103019560e11b815260040160405180910390fd5b61012e548114610c2757600081815261012f60205260408120546001600160801b031690819003611b965760405163ddae3b7160e01b815260040160405180910390fd5b61013054611bad6001600160801b03831642612830565b11156111a057604051631d739acf60e11b815260040160405180910390fd5b611bd4611c59565b606580546001600160a01b0383166001600160a01b03199091168117909155611c056033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600080516020612923833981519152546001600160a01b031690565b6033546001600160a01b03163314611cb35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104eb565b565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611cfd5760405162461bcd60e51b81526004016104eb906125f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611d2f611c3d565b6001600160a01b031614611d555760405162461bcd60e51b81526004016104eb9061263d565b610c27611c59565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611d9557611d9083611f72565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611def575060408051601f3d908101601f19168201909252611dec918101906128a2565b60015b611e525760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016104eb565b6000805160206129238339815191528114611ec15760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016104eb565b50611d9083838361200e565b600054610100900460ff16611ef45760405162461bcd60e51b81526004016104eb906128bb565b611cb3612039565b60006010602060ff84168211801590611f1b57508060ff168460ff1611155b949350505050565b600054610100900460ff16611f4a5760405162461bcd60e51b81526004016104eb906128bb565b60fb805460ff19166001179055565b606580546001600160a01b0319169055610c2781612070565b6001600160a01b0381163b611fdf5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016104eb565b60008051602061292383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b612017836120c2565b6000825111806120245750805b15611d90576120338383612102565b50505050565b600054610100900460ff166120605760405162461bcd60e51b81526004016104eb906128bb565b6120686121f8565b611cb3612227565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6120cb81611f72565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b61216a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016104eb565b600080846001600160a01b0316846040516121859190612906565b600060405180830381855af49150503d80600081146121c0576040519150601f19603f3d011682016040523d82523d6000602084013e6121c5565b606091505b50915091506121ed82826040518060600160405280602781526020016129436027913961224e565b925050505b92915050565b600054610100900460ff1661221f5760405162461bcd60e51b81526004016104eb906128bb565b611cb3612267565b600054610100900460ff16611cb35760405162461bcd60e51b81526004016104eb906128bb565b6060831561225d575081610fcf565b610fcf8383612297565b600054610100900460ff1661228e5760405162461bcd60e51b81526004016104eb906128bb565b611cb333611f59565b8151156108575781518083602001fd5b6001600160a01b0381168114610c2757600080fd5b6000602082840312156122ce57600080fd5b8135610fcf816122a7565b8061010081018310156121f257600080fd5b803563ffffffff8116811461101857600080fd5b60008083601f84011261231157600080fd5b50813567ffffffffffffffff81111561232957600080fd5b6020830191508360208260051b850101111561234457600080fd5b9250929050565b600080600080600080610180878903121561236557600080fd5b61236f88886122d9565b9550610100870135945061238661012088016122eb565b935061014087013567ffffffffffffffff8111156123a357600080fd5b6123af89828a016122ff565b979a969950949794969561016090950135949350505050565b600080600080600061018086880312156123e157600080fd5b8535945060208601359350604086013592506060860135915061240787608088016122d9565b90509295509295909350565b600080600080600060a0868803121561242b57600080fd5b853560ff8116811461243c57600080fd5b9450602086013593506040860135612453816122a7565b92506060860135612463816122a7565b91506080860135612473816122a7565b809150509295509295909350565b60006020828403121561249357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156124d6576124d661249a565b6040525050565b600080604083850312156124f057600080fd5b82356124fb816122a7565b915060208381013567ffffffffffffffff8082111561251957600080fd5b818601915086601f83011261252d57600080fd5b81358181111561253f5761253f61249a565b6040519150612557601f8201601f19168501836124b0565b808252878482850101111561256b57600080fd5b80848401858401376000848284010152508093505050509250929050565b6000806000806000608086880312156125a157600080fd5b6125aa866122eb565b94506020860135935060408601359250606086013567ffffffffffffffff8111156125d457600080fd5b6125e0888289016122ff565b969995985093965092949392505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000826126a657634e487b7160e01b600052601260045260246000fd5b500690565b6000602082840312156126bd57600080fd5b8151610fcf816122a7565b61012081016101008085843782018360005b60018110156126f95781518352602092830192909101906001016126da565b5050509392505050565b600060033d11156110e85760046000803e5060005160e01c90565b600060443d101561272c5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561275c57505050505090565b82850191508151818111156127745750505050505090565b843d870101602082850101111561278e5750505050505090565b61279d602082860101876124b0565b509095945050505050565b60005b838110156127c35781810151838201526020016127ab565b50506000910152565b60208152600082518060208401526127eb8160408501602087016127a8565b601f01601f19169190910160400192915050565b61018081016101008085843782018360005b60048110156126f9578151835260209283019290910190600101612811565b818103818111156121f257634e487b7160e01b600052601160045260246000fd5b60e086901b6001600160e01b0319168152600481018590526024810184905260006001600160fb1b0383111561288657600080fd5b8260051b80856044850137919091016044019695505050505050565b6000602082840312156128b457600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082516129188184602087016127a8565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d633b870ce7639e47f939f23913c37dfc96a2846c751924ff2ef6c68d09aa72264736f6c63430008150033",
    "sourceMap": "879:30959:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27081:492;;;;;;;;;;-1:-1:-1;27081:492:43;;;;;:::i;:::-;;:::i;:::-;;19019:2122;;;;;;;;;;-1:-1:-1;19019:2122:43;;;;;:::i;:::-;;:::i;25868:522::-;;;;;;;;;;-1:-1:-1;25868:522:43;;;;;:::i;:::-;;:::i;30701:499::-;;;;;;;;;;-1:-1:-1;30701:499:43;;;;;:::i;:::-;;:::i;3317:197:23:-;;;;;;;;;;-1:-1:-1;3317:197:23;;;;;:::i;:::-;;:::i;15045:1346:43:-;;;;;;;;;;-1:-1:-1;15045:1346:43;;;;;:::i;:::-;;:::i;23429:567::-;;;;;;;;;;-1:-1:-1;23429:567:43;;;;;:::i;:::-;;:::i;:::-;;;;4356:13:77;;4338:32;;4430:4;4418:17;;;4412:24;-1:-1:-1;;;;;4408:65:77;4386:20;;;4379:95;4532:17;;;4526:24;4519:32;4512:40;4490:20;;;4483:70;4326:2;4311:18;23429:567:43;;;;;;;;27749:189;;;;;;;;;;;;;:::i;:::-;;;4710:25:77;;;4698:2;4683:18;27749:189:43;4564:177:77;3763:222:23;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;7325:120:43:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;7413:25:43;;;;;;;;;;;;;;;;;;;;7325:120;;4649:109:45;;;;;;;;;;;;;:::i;2010:206:17:-;;;;;;;;;;;;;:::i;22271:413:43:-;;;;;;;;;;-1:-1:-1;22271:413:43;;;;;:::i;:::-;;:::i;1441:85:18:-;;;;;;;;;;-1:-1:-1;1513:6:18;;-1:-1:-1;;;;;1513:6:18;1441:85;;;-1:-1:-1;;;;;7087:32:77;;;7069:51;;7057:2;7042:18;1441:85:18;6923:203:77;28716:119:43;;;;;;;;;;;;;:::i;:::-;;;7303:4:77;7291:17;;;7273:36;;7261:2;7246:18;28716:119:43;7131:184:77;25309:231:43;;;;;;;;;;;;;:::i;29482:384::-;;;;;;;;;;-1:-1:-1;29482:384:43;;;;;:::i;:::-;;:::i;28170:402::-;;;;;;;;;;-1:-1:-1;28170:402:43;;;;;:::i;:::-;;:::i;22812:121::-;;;;;;;;;;;;;:::i;1123:99:17:-;;;;;;;;;;-1:-1:-1;1202:13:17;;-1:-1:-1;;;;;1202:13:17;1123:99;;29056:133:43;;;;;;;;;;;;;:::i;26573:205::-;;;;;;;;;;;;;:::i;24439:638::-;;;;;;;;;;-1:-1:-1;24439:638:43;;;;;:::i;:::-;;:::i;1415:178:17:-;;;;;;;;;;-1:-1:-1;1415:178:17;;;;;:::i;:::-;;:::i;27081:492:43:-;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;;;;;;;;;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;1334:13:18::2;:11;:13::i;:::-;-1:-1:-1::0;;;;;27252:34:43;::::3;27248:89;;27309:17;;-1:-1:-1::0;;;27309:17:43::3;;;;;;;;;;;27248:89;27380:17;::::0;;-1:-1:-1;;;;;27407:31:43;;::::3;-1:-1:-1::0;;;;;;27407:31:43;::::3;::::0;::::3;::::0;;;27380:17:::3;::::0;;27484:28:::3;27453:113;;::::0;::::3;::::0;;;::::3;27238:335;27081:492:::0;:::o;19019:2122::-;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;31743:17:43::2;::::0;-1:-1:-1;;;;;31743:17:43::2;31729:10;:31;31725:93;;31783:24;::::0;-1:-1:-1;;;31783:24:43;;31796:10:::2;31783:24;::::0;::::2;7069:51:77::0;7042:18;;31783:24:43::2;6923:203:77::0;31725:93:43::2;19310:11:::3;;19299:7;:22;19295:95;;19367:11;::::0;19344:35:::3;::::0;-1:-1:-1;;;19344:35:43;;::::3;::::0;19358:7;;19344:35:::3;;8452:25:77::0;;;8508:2;8493:18;;8486:34;8440:2;8425:18;;8278:248;19295:95:43::3;19480:17;19500:112;19552:10;19564:7;19573:8;19583:19;;19500:38;:112::i;:::-;19480:132:::0;-1:-1:-1;19911:22:43::3;19936:39;4362:77;19480:132:::0;19936:39:::3;:::i;:::-;20105:23;::::0;:66:::3;::::0;-1:-1:-1;;;20105:66:43;;::::3;::::0;::::3;4710:25:77::0;;;19911:64:43;;-1:-1:-1;20059:31:43::3;::::0;-1:-1:-1;;;;;20105:23:43;;::::3;::::0;:38:::3;::::0;4683:18:77;;20105:66:43::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20240:63;::::0;;::::3;::::0;::::3;::::0;;;;;;;-1:-1:-1;;;20240:63:43;;20059:112;;-1:-1:-1;;;;;;20240:29:43;::::3;::::0;::::3;::::0;:63:::3;::::0;20270:14;;20240:63;::::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;20236:899;;;;:::i;:::-;;;::::0;::::3;;;;;:::i;:::-;;;;;;;;20887:9;20880:17;;-1:-1:-1::0;;;20880:17:43::3;;;;;;;;:::i;20236:899::-;;;21100:24;;-1:-1:-1::0;;;21100:24:43::3;;;;;;;;;;;20236:899;20472:11;:22:::0;;;20640:20:::3;::::0;;;:11:::3;:20;::::0;;;;:47;;-1:-1:-1;;20640:47:43::3;20671:15;-1:-1:-1::0;;;;;20640:47:43::3;;::::0;;20472:22;;20707:52:::3;::::0;20719:7;;20707:52:::3;::::0;;;::::3;20236:899;19285:1856;;;19019:2122:::0;;;;;;:::o;25868:522::-;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;1334:13:18::2;:11;:13::i;:::-;-1:-1:-1::0;;;;;26057:31:43;::::3;26053:89;;26111:20;;-1:-1:-1::0;;;26111:20:43::3;;;;;;;;;;;26053:89;26183:23;::::0;;-1:-1:-1;;;;;26216:34:43;;::::3;-1:-1:-1::0;;;;;;26216:34:43;::::3;::::0;::::3;::::0;;;26183:23:::3;::::0;;;26265:118:::3;::::0;30701:499;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;30989:22:43::2;31006:4;30989:16;:22::i;:::-;31077:17;::::0;:116:::2;::::0;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;;;;;;;;;;;;;;;-1:-1:-1;;;31077:116:43;;-1:-1:-1;;;;;31077:17:43;;::::2;::::0;:29:::2;::::0;:116:::2;::::0;31120:5;;31077:116;::::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;3317:197:23::0;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;3400:36:::1;3418:17;3400;:36::i;:::-;3487:12;::::0;;3497:1:::1;3487:12:::0;;;::::1;::::0;::::1;::::0;;;3446:61:::1;::::0;3468:17;;3487:12;3446:21:::1;:61::i;:::-;3317:197:::0;:::o;15045:1346:43:-;4871:13:22;;15299:1:43;;4871:13:22;;;;;4870:14;:40;;;;-1:-1:-1;4888:12:22;;:22;;;;:12;;:22;4870:40;4862:99;;;;-1:-1:-1;;;4862:99:22;;12061:2:77;4862:99:22;;;12043:21:77;12100:2;12080:18;;;12073:30;12139:34;12119:18;;;12112:62;-1:-1:-1;;;12190:18:77;;;12183:44;12244:19;;4862:99:22;11859:410:77;4862:99:22;4971:12;:22;;-1:-1:-1;;5003:20:22;4971:22;;;5003:20;4971:22;5003:20;;;-1:-1:-1;;;;;15316:47:43;::::1;15312:105;;15386:20;;-1:-1:-1::0;;;15386:20:43::1;;;;;;;;;;;15312:105;-1:-1:-1::0;;;;;15431:44:43;::::1;15427:102;;15498:20;;-1:-1:-1::0;;;15498:20:43::1;;;;;;;;;;;15427:102;-1:-1:-1::0;;;;;15543:41:43;::::1;15539:96;;15607:17;;-1:-1:-1::0;;;15607:17:43::1;;;;;;;;;;;15539:96;15719:16;:14;:16::i;:::-;15751:48;15788:10;15751:36;:48::i;:::-;15746:119;;15822:32;::::0;-1:-1:-1;;;15822:32:43;;7303:4:77;7291:17;;15822:32:43::1;::::0;::::1;7273:36:77::0;7246:18;;15822:32:43::1;7131:184:77::0;15746:119:43::1;15932:9;:22:::0;;-1:-1:-1;;;;15932:22:43::1;-1:-1:-1::0;;;15932:22:43::1;::::0;::::1;;;::::0;;15984:7:::1;15964:17;:27:::0;16001:11:::1;:25:::0;;;16036:23:::1;:50:::0;;-1:-1:-1;;;;;;16036:50:43;;::::1;-1:-1:-1::0;;;;;16036:50:43;;::::1;::::0;;;::::1;::::0;;;16096:23:::1;:47:::0;;;::::1;::::0;;::::1;;::::0;;16153:17:::1;:38:::0;;;::::1;::::0;;::::1;;::::0;;1513:6:18;;16201:17:43::1;:27:::0;;1513:6:18;;;;16201:27:43;::::1;;::::0;;16288:18:::1;:16;:18::i;:::-;16322:62;::::0;;12474:4:77;12462:17;;12444:36;;12511:2;12496:18;;12489:34;;;16322:62:43::1;::::0;12417:18:77;16322:62:43::1;;;;;;;5060:5:22::0;5044:21;;-1:-1:-1;;5044:21:22;;;5080:20;;7303:4:77;7291:17;;7273:36;;5080:20:22;;7261:2:77;7246:18;5080:20:22;;;;;;;15045:1346:43;;;;;;:::o;23429:567::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;23608:11:43::2;;23600:4;:19:::0;23596:394:::2;;-1:-1:-1::0;;23642:30:43::2;::::0;;::::2;::::0;::::2;::::0;;23651:11:::2;::::0;23642:30;;-1:-1:-1;23642:30:43::2;::::0;::::2;::::0;23667:4:::2;23642:30:::0;;;;;;;;23429:567::o;23596:394::-:2;23703:21;23727:17:::0;;;:11:::2;:17;::::0;;;;;-1:-1:-1;;;;;23727:17:43::2;::::0;23763:18;;;23759:78:::2;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;7413:25:43;;;;;;;;;;;;;;;;;;;;23808:14:::2;23801:21:::0;23429:567;-1:-1:-1;;;23429:567:43:o;23759:78::-:2;23902:17;::::0;23851:12:::2;::::0;23868:31:::2;-1:-1:-1::0;;;;;23868:31:43;::::2;:15;:31;:::i;:::-;23941:38;::::0;;::::2;::::0;::::2;::::0;;;;;-1:-1:-1;;;;;23941:38:43;;::::2;;::::0;::::2;::::0;23868:51;-1:-1:-1;23866:54:43::2;23941:38:::0;;;;-1:-1:-1;23941:38:43;-1:-1:-1;23596:394:43::2;23429:567:::0;;;:::o;27749:189::-;27884:7;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;-1:-1:-1::0;27914:17:43::2;::::0;1144:1:74::2;27749:189:43::0;:::o;3763:222:23:-;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;3880:36:::1;3898:17;3880;:36::i;:::-;3926:52;3948:17;3967:4;3973;3926:21;:52::i;:::-;3763:222:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:23;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:23;;12966:2:77;2308:92:23;;;12948:21:77;13005:2;12985:18;;;12978:30;13044:34;13024:18;;;13017:62;13115:26;13095:18;;;13088:54;13159:19;;2308:92:23;12764:420:77;2308:92:23;-1:-1:-1;;;;;;;;;;;;3006:131:23;:::o;4649:109:45:-;1334:13:18;:11;:13::i;:::-;4726:25:45::1;;-1:-1:-1::0;;;4726:25:45::1;;;;;;;;;;;2010:206:17::0;1202:13;;929:10:25;;-1:-1:-1;;;;;1202:13:17;2103:24;;2095:78;;;;-1:-1:-1;;;2095:78:17;;13391:2:77;2095:78:17;;;13373:21:77;13430:2;13410:18;;;13403:30;13469:34;13449:18;;;13442:62;-1:-1:-1;;;13520:18:77;;;13513:39;13569:19;;2095:78:17;13189:405:77;2095:78:17;2183:26;2202:6;2183:18;:26::i;22271:413:43:-;22506:12;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;22530:24:43::2;22586:10;22598:7;22607:8;22617:19;;22569:68;;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;22569:68:43;;::::2;::::0;;;;;;22655:22;;22569:68:::2;22655:22:::0;;::::2;::::0;;22271:413;-1:-1:-1;;;;;;;22271:413:43:o;28716:119::-;28795:5;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;-1:-1:-1::0;28819:9:43::2;::::0;-1:-1:-1;;;28819:9:43;::::2;;;::::0;28716:119::o;25309:231::-;25471:7;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;-1:-1:-1::0;25509:23:43::2;::::0;-1:-1:-1;;;;;25509:23:43::2;25309:231:::0;:::o;29482:384::-;29648:7;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;1334:13:18::2;:11;:13::i;:::-;29693:17:43::3;::::0;;-1:-1:-1;;;;;29720:39:43;;::::3;-1:-1:-1::0;;;;;;29720:39:43;::::3;::::0;::::3;::::0;;;29774:57:::3;::::0;29693:17;::::3;::::0;29720:39;29693:17;;29774:57:::3;::::0;29671:19:::3;::::0;29774:57:::3;29848:11:::0;29482:384;-1:-1:-1;;29482:384:43:o;28170:402::-;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;1334:13:18::2;:11;:13::i;:::-;28332::43::3;28349:1;28332:18:::0;28328:86:::3;;28366:37;::::0;-1:-1:-1;;;28366:37:43;;14401:2:77;28366:37:43::3;::::0;::::3;14383:21:77::0;14440:2;14420:18;;;14413:30;14479:29;14459:18;;;14452:57;14526:18;;28366:37:43::3;14199:351:77::0;28328:86:43::3;28443:17;::::0;;28470:33;;;;28519:46:::3;::::0;28490:13;;28443:17;;28519:46:::3;::::0;28423:17:::3;::::0;28519:46:::3;28318:254;28170:402:::0;:::o;22812:121::-;22889:7;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;-1:-1:-1::0;22915:11:43::2;::::0;22812:121;:::o;29056:133::-;29139:7;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;-1:-1:-1::0;29165:17:43::2;::::0;-1:-1:-1;;;;;29165:17:43::2;29056:133:::0;:::o;26573:205::-;26715:7;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;-1:-1:-1::0;26753:17:43::2;::::0;-1:-1:-1;;;;;26753:17:43::2;26573:205:::0;:::o;24439:638::-;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;24591:11:43::2;::::0;24579:56;;24618:7:::2;24579:56;24710:21;24734:17:::0;;;:11:::2;:17;::::0;;;;;-1:-1:-1;;;;;24734:17:43::2;::::0;24834:18;;;24830:73:::2;;24875:17;;-1:-1:-1::0;;;24875:17:43::2;;;;;;;;;;;24830:73;25007:17;::::0;24973:31:::2;-1:-1:-1::0;;;;;24973:31:43;::::2;:15;:31;:::i;:::-;:51;24969:102;;;25047:13;;-1:-1:-1::0;;;25047:13:43::2;;;;;;;;;;;1415:178:17::0;1334:13:18;:11;:13::i;:::-;1504::17::1;:24:::0;;-1:-1:-1;;;;;1504:24:17;::::1;-1:-1:-1::0;;;;;;1504:24:17;;::::1;::::0;::::1;::::0;;;1568:7:::1;1513:6:18::0;;-1:-1:-1;;;;;1513:6:18;;1441:85;1568:7:17::1;-1:-1:-1::0;;;;;1543:43:17::1;;;;;;;;;;;1415:178:::0;:::o;1563:151:20:-;-1:-1:-1;;;;;;;;;;;1642:65:20;-1:-1:-1;;;;;1642:65:20;;1563:151::o;1599:130:18:-;1513:6;;-1:-1:-1;;;;;1513:6:18;929:10:25;1662:23:18;1654:68;;;;-1:-1:-1;;;1654:68:18;;14757:2:77;1654:68:18;;;14739:21:77;;;14776:18;;;14769:30;14835:34;14815:18;;;14808:62;14887:18;;1654:68:18;14555:356:77;1654:68:18;1599:130::o;4067:204:45:-;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1334:13:18::1;:11;:13::i;2938:974:20:-:0;951:66;3384:59;;;3380:526;;;3459:37;3478:17;3459:18;:37::i;:::-;2938:974;;;:::o;3380:526::-;3560:17;-1:-1:-1;;;;;3531:61:20;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3531:63:20;;;;;;;;-1:-1:-1;;3531:63:20;;;;;;;;;;;;:::i;:::-;;;3527:302;;3758:56;;-1:-1:-1;;;3758:56:20;;15307:2:77;3758:56:20;;;15289:21:77;15346:2;15326:18;;;15319:30;15385:34;15365:18;;;15358:62;-1:-1:-1;;;15436:18:77;;;15429:44;15490:19;;3758:56:20;15105:410:77;3527:302:20;-1:-1:-1;;;;;;;;;;;3644:28:20;;3636:82;;;;-1:-1:-1;;;3636:82:20;;15722:2:77;3636:82:20;;;15704:21:77;15761:2;15741:18;;;15734:30;15800:34;15780:18;;;15773:62;-1:-1:-1;;;15851:18:77;;;15844:39;15900:19;;3636:82:20;15520:405:77;3636:82:20;3595:138;3842:53;3860:17;3879:4;3885:9;3842:17;:53::i;16725:97:43:-;5363:13:22;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:22;;;;;;;:::i;:::-;16795:20:43::1;:18;:20::i;434:207:75:-:0;492:19;540:2;569;588:21;;;;-1:-1:-1;588:21:75;;;:46;;;626:8;613:21;;:9;:21;;;;588:46;581:53;434:207;-1:-1:-1;;;;434:207:75:o;794:90:74:-;5363:13:22;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:22;;;;;;;:::i;:::-;858:12:74::1;:19:::0;;-1:-1:-1;;858:19:74::1;873:4;858:19;::::0;;794:90::o;1777:153:17:-;1866:13;1859:20;;-1:-1:-1;;;;;;1859:20:17;;;1889:34;1914:8;1889:24;:34::i;1805:281:20:-;-1:-1:-1;;;;;1476:19:24;;;1878:106:20;;;;-1:-1:-1;;;1878:106:20;;16544:2:77;1878:106:20;;;16526:21:77;16583:2;16563:18;;;16556:30;16622:34;16602:18;;;16595:62;-1:-1:-1;;;16673:18:77;;;16666:43;16726:19;;1878:106:20;16342:409:77;1878:106:20;-1:-1:-1;;;;;;;;;;;1994:85:20;;-1:-1:-1;;;;;;1994:85:20;-1:-1:-1;;;;;1994:85:20;;;;;;;;;;1805:281::o;2478:288::-;2616:29;2627:17;2616:10;:29::i;:::-;2673:1;2659:4;:11;:15;:28;;;;2678:9;2659:28;2655:105;;;2703:46;2725:17;2744:4;2703:21;:46::i;:::-;;2478:288;;;:::o;3048:131:45:-;5363:13:22;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:22;;;;;;;:::i;:::-;3122:16:45::1;:14;:16::i;:::-;3148:24;:22;:24::i;2673:187:18:-:0;2765:6;;;-1:-1:-1;;;;;2781:17:18;;;-1:-1:-1;;;;;;2781:17:18;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;2192:152:20:-;2258:37;2277:17;2258:18;:37::i;:::-;2310:27;;-1:-1:-1;;;;;2310:27:20;;;;;;;;2192:152;:::o;7088:455::-;7171:12;-1:-1:-1;;;;;1476:19:24;;;7195:88:20;;;;-1:-1:-1;;;7195:88:20;;16958:2:77;7195:88:20;;;16940:21:77;16997:2;16977:18;;;16970:30;17036:34;17016:18;;;17009:62;-1:-1:-1;;;17087:18:77;;;17080:36;17133:19;;7195:88:20;16756:402:77;7195:88:20;7354:12;7368:23;7395:6;-1:-1:-1;;;;;7395:19:20;7415:4;7395:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7353:67;;;;7437:99;7473:7;7482:10;7437:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;7430:106;;;;7088:455;;;;;:::o;1003:95:18:-;5363:13:22;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:22;;;;;;;:::i;:::-;1065:26:18::1;:24;:26::i;1042:67:23:-:0;5363:13:22;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:22;;;;;;;:::i;7438:295:24:-;7584:12;7612:7;7608:119;;;-1:-1:-1;7642:10:24;7635:17;;7608:119;7683:33;7691:10;7703:12;7683:7;:33::i;1104:111:18:-;5363:13:22;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:22;;;;;;;:::i;:::-;1176:32:18::1;929:10:25::0;1176:18:18::1;:32::i;7739:540:24:-:0;7898:17;;:21;7894:379;;8126:10;8120:17;8182:15;8169:10;8165:2;8161:19;8154:44;14:151:77;-1:-1:-1;;;;;109:31:77;;99:42;;89:70;;155:1;152;145:12;170:295;257:6;310:2;298:9;289:7;285:23;281:32;278:52;;;326:1;323;316:12;278:52;365:9;352:23;384:51;429:5;384:51;:::i;470:160::-;564:6;597:3;585:16;;582:25;-1:-1:-1;579:45:77;;;620:1;617;610:12;635:163;702:20;;762:10;751:22;;741:33;;731:61;;788:1;785;778:12;803:367;866:8;876:6;930:3;923:4;915:6;911:17;907:27;897:55;;948:1;945;938:12;897:55;-1:-1:-1;971:20:77;;1014:18;1003:30;;1000:50;;;1046:1;1043;1036:12;1000:50;1083:4;1075:6;1071:17;1059:29;;1143:3;1136:4;1126:6;1123:1;1119:14;1111:6;1107:27;1103:38;1100:47;1097:67;;;1160:1;1157;1150:12;1097:67;803:367;;;;;:::o;1175:773::-;1321:6;1329;1337;1345;1353;1361;1414:3;1402:9;1393:7;1389:23;1385:33;1382:53;;;1431:1;1428;1421:12;1382:53;1454;1499:7;1488:9;1454:53;:::i;:::-;1444:63;;1554:3;1543:9;1539:19;1526:33;1516:43;;1578:38;1611:3;1600:9;1596:19;1578:38;:::i;:::-;1568:48;;1667:3;1656:9;1652:19;1639:33;1695:18;1687:6;1684:30;1681:50;;;1727:1;1724;1717:12;1681:50;1766:70;1828:7;1819:6;1808:9;1804:22;1766:70;:::i;:::-;1175:773;;;;-1:-1:-1;1175:773:77;;;;;1937:3;1922:19;;;1909:33;;1175:773;-1:-1:-1;;;;1175:773:77:o;2254:509::-;2374:6;2382;2390;2398;2406;2459:3;2447:9;2438:7;2434:23;2430:33;2427:53;;;2476:1;2473;2466:12;2427:53;2512:9;2499:23;2489:33;;2569:2;2558:9;2554:18;2541:32;2531:42;;2620:2;2609:9;2605:18;2592:32;2582:42;;2671:2;2660:9;2656:18;2643:32;2633:42;;2694:63;2749:7;2743:3;2732:9;2728:19;2694:63;:::i;:::-;2684:73;;2254:509;;;;;;;;:::o;3040:908::-;3219:6;3227;3235;3243;3251;3304:3;3292:9;3283:7;3279:23;3275:33;3272:53;;;3321:1;3318;3311:12;3272:53;3360:9;3347:23;3410:4;3403:5;3399:16;3392:5;3389:27;3379:55;;3430:1;3427;3420:12;3379:55;3453:5;-1:-1:-1;3505:2:77;3490:18;;3477:32;;-1:-1:-1;3561:2:77;3546:18;;3533:32;3574:53;3533:32;3574:53;:::i;:::-;3646:7;-1:-1:-1;3705:2:77;3690:18;;3677:32;3718:53;3677:32;3718:53;:::i;:::-;3790:7;-1:-1:-1;3849:3:77;3834:19;;3821:33;3863:53;3821:33;3863:53;:::i;:::-;3935:7;3925:17;;;3040:908;;;;;;;;:::o;3953:180::-;4012:6;4065:2;4053:9;4044:7;4040:23;4036:32;4033:52;;;4081:1;4078;4071:12;4033:52;-1:-1:-1;4104:23:77;;3953:180;-1:-1:-1;3953:180:77:o;4746:127::-;4807:10;4802:3;4798:20;4795:1;4788:31;4838:4;4835:1;4828:15;4862:4;4859:1;4852:15;4878:249;4988:2;4969:13;;-1:-1:-1;;4965:27:77;4953:40;;5023:18;5008:34;;5044:22;;;5005:62;5002:88;;;5070:18;;:::i;:::-;5106:2;5099:22;-1:-1:-1;;4878:249:77:o;5132:953::-;5209:6;5217;5270:2;5258:9;5249:7;5245:23;5241:32;5238:52;;;5286:1;5283;5276:12;5238:52;5325:9;5312:23;5344:51;5389:5;5344:51;:::i;:::-;5414:5;-1:-1:-1;5438:2:77;5476:18;;;5463:32;5514:18;5544:14;;;5541:34;;;5571:1;5568;5561:12;5541:34;5609:6;5598:9;5594:22;5584:32;;5654:7;5647:4;5643:2;5639:13;5635:27;5625:55;;5676:1;5673;5666:12;5625:55;5712:2;5699:16;5734:2;5730;5727:10;5724:36;;;5740:18;;:::i;:::-;5789:2;5783:9;;-1:-1:-1;5801:65:77;5856:2;5837:13;;-1:-1:-1;;5833:27:77;5829:36;;5783:9;5801:65;:::i;:::-;5890:2;5882:6;5875:18;5930:7;5925:2;5920;5916;5912:11;5908:20;5905:33;5902:53;;;5951:1;5948;5941:12;5902:53;6007:2;6002;5998;5994:11;5989:2;5981:6;5977:15;5964:46;6052:1;6047:2;6042;6034:6;6030:15;6026:24;6019:35;;6073:6;6063:16;;;;;5132:953;;;;;:::o;6272:646::-;6384:6;6392;6400;6408;6416;6469:3;6457:9;6448:7;6444:23;6440:33;6437:53;;;6486:1;6483;6476:12;6437:53;6509:28;6527:9;6509:28;:::i;:::-;6499:38;;6584:2;6573:9;6569:18;6556:32;6546:42;;6635:2;6624:9;6620:18;6607:32;6597:42;;6690:2;6679:9;6675:18;6662:32;6717:18;6709:6;6706:30;6703:50;;;6749:1;6746;6739:12;6703:50;6788:70;6850:7;6841:6;6830:9;6826:22;6788:70;:::i;:::-;6272:646;;;;-1:-1:-1;6272:646:77;;-1:-1:-1;6877:8:77;;6762:96;6272:646;-1:-1:-1;;;6272:646:77:o;7320:408::-;7522:2;7504:21;;;7561:2;7541:18;;;7534:30;7600:34;7595:2;7580:18;;7573:62;-1:-1:-1;;;7666:2:77;7651:18;;7644:42;7718:3;7703:19;;7320:408::o;7733:::-;7935:2;7917:21;;;7974:2;7954:18;;;7947:30;8013:34;8008:2;7993:18;;7986:62;-1:-1:-1;;;8079:2:77;8064:18;;8057:42;8131:3;8116:19;;7733:408::o;8531:209::-;8563:1;8589;8579:132;;8633:10;8628:3;8624:20;8621:1;8614:31;8668:4;8665:1;8658:15;8696:4;8693:1;8686:15;8579:132;-1:-1:-1;8725:9:77;;8531:209::o;8745:294::-;8838:6;8891:2;8879:9;8870:7;8866:23;8862:32;8859:52;;;8907:1;8904;8897:12;8859:52;8939:9;8933:16;8958:51;9003:5;8958:51;:::i;9044:646::-;9300:3;9285:19;;9323:6;;9362;9289:9;9338:35;9393:18;;9453:6;9477:1;9487:197;9501:4;9498:1;9495:11;9487:197;;;9563:13;;9551:26;;9600:4;9624:12;;;;9659:15;;;;9521:4;9514:12;9487:197;;;9491:3;;;9044:646;;;;;:::o;9695:179::-;9730:3;9772:1;9754:16;9751:23;9748:120;;;9818:1;9815;9812;9797:23;-1:-1:-1;9855:1:77;9849:8;9844:3;9840:18;9695:179;:::o;9879:671::-;9918:3;9960:4;9942:16;9939:26;9936:39;;;9879:671;:::o;9936:39::-;10002:2;9996:9;-1:-1:-1;;10067:16:77;10063:25;;10060:1;9996:9;10039:50;10118:4;10112:11;10142:16;10177:18;10248:2;10241:4;10233:6;10229:17;10226:25;10221:2;10213:6;10210:14;10207:45;10204:58;;;10255:5;;;;;9879:671;:::o;10204:58::-;10292:6;10286:4;10282:17;10271:28;;10328:3;10322:10;10355:2;10347:6;10344:14;10341:27;;;10361:5;;;;;;9879:671;:::o;10341:27::-;10445:2;10426:16;10420:4;10416:27;10412:36;10405:4;10396:6;10391:3;10387:16;10383:27;10380:69;10377:82;;;10452:5;;;;;;9879:671;:::o;10377:82::-;10468:57;10519:4;10510:6;10502;10498:19;10494:30;10488:4;10468:57;:::i;:::-;-1:-1:-1;10541:3:77;;9879:671;-1:-1:-1;;;;;9879:671:77:o;10555:250::-;10640:1;10650:113;10664:6;10661:1;10658:13;10650:113;;;10740:11;;;10734:18;10721:11;;;10714:39;10686:2;10679:10;10650:113;;;-1:-1:-1;;10797:1:77;10779:16;;10772:27;10555:250::o;10810:396::-;10959:2;10948:9;10941:21;10922:4;10991:6;10985:13;11034:6;11029:2;11018:9;11014:18;11007:34;11050:79;11122:6;11117:2;11106:9;11102:18;11097:2;11089:6;11085:15;11050:79;:::i;:::-;11190:2;11169:15;-1:-1:-1;;11165:29:77;11150:45;;;;11197:2;11146:54;;10810:396;-1:-1:-1;;10810:396:77:o;11211:643::-;11467:3;11452:19;;11490:6;;11529;11456:9;11505:35;11560:18;;11620:6;11644:1;11654:194;11668:4;11665:1;11662:11;11654:194;;;11727:13;;11715:26;;11764:4;11788:12;;;;11823:15;;;;11688:1;11681:9;11654:194;;12534:225;12601:9;;;12622:11;;;12619:134;;;12675:10;12670:3;12666:20;12663:1;12656:31;12710:4;12707:1;12700:15;12738:4;12735:1;12728:15;13599:595;13908:3;13886:16;;;-1:-1:-1;;;;;;13882:43:77;13870:56;;13951:1;13942:11;;13935:27;;;13987:2;13978:12;;13971:28;;;-1:-1:-1;;;;;;14011:31:77;;14008:51;;;14055:1;14052;14045:12;14008:51;14089:6;14086:1;14082:14;14140:6;14132;14127:2;14122:3;14118:12;14105:42;14167:16;;;;14185:2;14163:25;;13599:595;-1:-1:-1;;;;;;13599:595:77:o;14916:184::-;14986:6;15039:2;15027:9;15018:7;15014:23;15010:32;15007:52;;;15055:1;15052;15045:12;15007:52;-1:-1:-1;15078:16:77;;14916:184;-1:-1:-1;14916:184:77:o;15930:407::-;16132:2;16114:21;;;16171:2;16151:18;;;16144:30;16210:34;16205:2;16190:18;;16183:62;-1:-1:-1;;;16276:2:77;16261:18;;16254:41;16327:3;16312:19;;15930:407::o;17163:287::-;17292:3;17330:6;17324:13;17346:66;17405:6;17400:3;17393:4;17385:6;17381:17;17346:66;:::i;:::-;17428:16;;;;;17163:287;-1:-1:-1;;17163:287:77:o",
    "linkReferences": {},
    "immutableReferences": {
      "29832": [
        {
          "start": 1197,
          "length": 32
        },
        {
          "start": 1270,
          "length": 32
        },
        {
          "start": 1531,
          "length": 32
        },
        {
          "start": 1595,
          "length": 32
        },
        {
          "start": 2310,
          "length": 32
        },
        {
          "start": 2374,
          "length": 32
        },
        {
          "start": 2594,
          "length": 32
        },
        {
          "start": 2658,
          "length": 32
        },
        {
          "start": 2924,
          "length": 32
        },
        {
          "start": 2988,
          "length": 32
        },
        {
          "start": 3731,
          "length": 32
        },
        {
          "start": 3795,
          "length": 32
        },
        {
          "start": 4137,
          "length": 32
        },
        {
          "start": 4201,
          "length": 32
        },
        {
          "start": 4341,
          "length": 32
        },
        {
          "start": 4405,
          "length": 32
        },
        {
          "start": 4529,
          "length": 32
        },
        {
          "start": 4859,
          "length": 32
        },
        {
          "start": 4923,
          "length": 32
        },
        {
          "start": 5118,
          "length": 32
        },
        {
          "start": 5182,
          "length": 32
        },
        {
          "start": 5333,
          "length": 32
        },
        {
          "start": 5397,
          "length": 32
        },
        {
          "start": 5547,
          "length": 32
        },
        {
          "start": 5611,
          "length": 32
        },
        {
          "start": 5835,
          "length": 32
        },
        {
          "start": 5899,
          "length": 32
        },
        {
          "start": 6178,
          "length": 32
        },
        {
          "start": 6242,
          "length": 32
        },
        {
          "start": 6383,
          "length": 32
        },
        {
          "start": 6447,
          "length": 32
        },
        {
          "start": 6597,
          "length": 32
        },
        {
          "start": 6661,
          "length": 32
        },
        {
          "start": 6809,
          "length": 32
        },
        {
          "start": 6873,
          "length": 32
        },
        {
          "start": 7359,
          "length": 32
        },
        {
          "start": 7423,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "NO_SUCH_ROOT()": "561f204b",
    "acceptOwnership()": "79ba5097",
    "calculateIdentityRegistrationInputHash(uint32,uint256,uint256,uint256[])": "8c76a909",
    "getRegisterIdentitiesVerifierLookupTableAddress()": "8fc22e9f",
    "getRootHistoryExpiry()": "43f974cb",
    "getSemaphoreVerifierAddress()": "f2038f95",
    "getTreeDepth()": "8e5cdd50",
    "identityOperator()": "f134b6ca",
    "initialize(uint8,uint256,address,address,address)": "38c87065",
    "latestRoot()": "d7b0fef1",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "proxiableUUID()": "52d1902d",
    "queryRoot(uint256)": "3f7c178d",
    "registerIdentities(uint256[8],uint256,uint32,uint256[],uint256)": "2217b211",
    "renounceOwnership()": "715018a6",
    "requireValidRoot(uint256)": "f2358e1d",
    "setIdentityOperator(address)": "a7bba582",
    "setRegisterIdentitiesVerifierLookupTable(address)": "2f059fca",
    "setRootHistoryExpiry(uint256)": "c70aa727",
    "setSemaphoreVerifier(address)": "0e3a12f3",
    "transferOwnership(address)": "f2fde38b",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
    "verifyProof(uint256,uint256,uint256,uint256,uint256[8])": "354ca120"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CannotRenounceOwnership\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpiredRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImplementationNotInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"InvalidCommitment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStateBridgeAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVerifier\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVerifierLUT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedInputLengths\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonExistentRoot\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"providedRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"latestRoot\",\"type\":\"uint256\"}],\"name\":\"NotLatestRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProofValidationFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StateBridgeAlreadyDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StateBridgeAlreadyEnabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum WorldIDIdentityManagerImplV1.UnreducedElementType\",\"name\":\"elementType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"element\",\"type\":\"uint256\"}],\"name\":\"UnreducedElement\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"depth\",\"type\":\"uint8\"}],\"name\":\"UnsupportedTreeDepth\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum WorldIDIdentityManagerImplV1.Dependency\",\"name\":\"kind\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"DependencyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"IdentityOperatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldExpiryTime\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newExpiryTime\",\"type\":\"uint256\"}],\"name\":\"RootHistoryExpirySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"}],\"name\":\"StateBridgeStateChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"preRoot\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enum WorldIDIdentityManagerImplV1.TreeChange\",\"name\":\"kind\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"postRoot\",\"type\":\"uint256\"}],\"name\":\"TreeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_treeDepth\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialRoot\",\"type\":\"uint256\"}],\"name\":\"WorldIDIdentityManagerImplInitialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NO_SUCH_ROOT\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"supersededTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"internalType\":\"struct WorldIDIdentityManagerImplV1.RootInfo\",\"name\":\"rootInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"startIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"preRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"identityCommitments\",\"type\":\"uint256[]\"}],\"name\":\"calculateIdentityRegistrationInputHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegisterIdentitiesVerifierLookupTableAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRootHistoryExpiry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSemaphoreVerifierAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreeDepth\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_treeDepth\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialRoot\",\"type\":\"uint256\"},{\"internalType\":\"contract VerifierLookupTable\",\"name\":\"_batchInsertionVerifiers\",\"type\":\"address\"},{\"internalType\":\"contract VerifierLookupTable\",\"name\":\"_batchUpdateVerifiers\",\"type\":\"address\"},{\"internalType\":\"contract ISemaphoreVerifier\",\"name\":\"_semaphoreVerifier\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"}],\"name\":\"queryRoot\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"supersededTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"internalType\":\"struct WorldIDIdentityManagerImplV1.RootInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[8]\",\"name\":\"insertionProof\",\"type\":\"uint256[8]\"},{\"internalType\":\"uint256\",\"name\":\"preRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"identityCommitments\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"postRoot\",\"type\":\"uint256\"}],\"name\":\"registerIdentities\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"}],\"name\":\"requireValidRoot\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newIdentityOperator\",\"type\":\"address\"}],\"name\":\"setIdentityOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract VerifierLookupTable\",\"name\":\"newTable\",\"type\":\"address\"}],\"name\":\"setRegisterIdentitiesVerifierLookupTable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newExpiryTime\",\"type\":\"uint256\"}],\"name\":\"setRootHistoryExpiry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISemaphoreVerifier\",\"name\":\"newVerifier\",\"type\":\"address\"}],\"name\":\"setSemaphoreVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signalHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nullifierHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalNullifierHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[8]\",\"name\":\"proof\",\"type\":\"uint256[8]\"}],\"name\":\"verifyProof\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Worldcoin\",\"details\":\"The manager is based on the principle of verifying externally-created Zero Knowledge Proofs      to perform the insertions.This is the implementation delegated to by a proxy.\",\"errors\":{\"InvalidCommitment(uint256)\":[{\"details\":\"This error is no longer in use as we now verify the commitments off-chain within the circuit no need to check for reduced elements or invalid commitments.preserved for ABI backwards compatibility with V1, no longer used, all elements are validated by the circuit\",\"params\":{\"index\":\"The index in the array of identity commitments where the invalid commitment was        found.\"}}],\"InvalidStateBridgeAddress()\":[{\"details\":\"preserved for ABI backwards compatibility with V1, no longer used\"}],\"MismatchedInputLengths()\":[{\"details\":\"preserved for ABI backwards compatibility with V1, no longer used\"}],\"NotLatestRoot(uint256,uint256)\":[{\"params\":{\"latestRoot\":\"The actual latest root at the time of the transaction.\",\"providedRoot\":\"The root that was provided as the `preRoot` for a transaction.\"}}],\"StateBridgeAlreadyDisabled()\":[{\"details\":\"preserved for ABI backwards compatibility with V1, no longer used\"}],\"StateBridgeAlreadyEnabled()\":[{\"details\":\"preserved for ABI backwards compatibility with V1, no longer used\"}],\"Unauthorized(address)\":[{\"params\":{\"user\":\"The user that attempted the action that they were not authorised for.\"}}],\"UnreducedElement(uint8,uint256)\":[{\"details\":\"`r` in this case is given by `SNARK_SCALAR_FIELD`.preserved for ABI backwards compatibility with V1, no longer used, all elements come out reduced from the circuit\",\"params\":{\"element\":\"The value of that element.\",\"elementType\":\"The kind of element that was encountered unreduced.\"}}],\"UnsupportedTreeDepth(uint8)\":[{\"params\":{\"depth\":\"Passed tree depth.\"}}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"DependencyUpdated(uint8,address,address)\":{\"params\":{\"kind\":\"The kind of dependency that was updated.\",\"newAddress\":\"The new address of that dependency.\",\"oldAddress\":\"The old address of that dependency.\"}},\"IdentityOperatorChanged(address,address)\":{\"params\":{\"newOperator\":\"The address of the new identity operator.\",\"oldOperator\":\"The address of the old identity operator.\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RootHistoryExpirySet(uint256,uint256)\":{\"params\":{\"newExpiryTime\":\"The expiry time after the change.\",\"oldExpiryTime\":\"The expiry time prior to the change.\"}},\"StateBridgeStateChange(bool)\":{\"details\":\"preserved for ABI backwards compatibility with V1, no longer used\",\"params\":{\"isEnabled\":\"Set to `true` if the event comes from the state bridge being enabled,        `false` otherwise.\"}},\"TreeChanged(uint256,uint8,uint256)\":{\"params\":{\"kind\":\"Either \\\"insertion\\\" or \\\"update\\\", the kind of alteration that was made to the        tree.\",\"postRoot\":\"The value of the tree's root after the update.\",\"preRoot\":\"The value of the tree's root before the update.\"}},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"},\"WorldIDIdentityManagerImplInitialized(uint8,uint256)\":{\"params\":{\"_treeDepth\":\"The depth of the MerkeTree\",\"initialRoot\":\"The initial value for the `latestRoot` in the contract. When deploying        this should be set to the root of the empty tree.\"}}},\"kind\":\"dev\",\"methods\":{\"NO_SUCH_ROOT()\":{\"details\":\"Can be checked against when querying for root data.\"},\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"calculateIdentityRegistrationInputHash(uint32,uint256,uint256,uint256[])\":{\"details\":\"Implements the computation described below.\",\"params\":{\"identityCommitments\":\"The identities that were added to the tree to produce `postRoot`.\",\"postRoot\":\"The root value of the tree after these insertions were made.\",\"preRoot\":\"The root value of the tree before these insertions were made.\",\"startIndex\":\"The index in the tree from which inserting started.\"},\"returns\":{\"hash\":\"The input hash calculated as described below. We keccak hash all input to save verification gas. Inputs are arranged as follows: StartIndex || PreRoot || PostRoot || IdComms[0] || IdComms[1] || ... || IdComms[batchSize-1]     32\\t   ||   256   ||   256    ||    256     ||    256     || ... ||     256 bits\"}},\"getRegisterIdentitiesVerifierLookupTableAddress()\":{\"returns\":{\"_0\":\"addr The address of the contract being used as the verifier lookup table.\"}},\"getRootHistoryExpiry()\":{\"returns\":{\"_0\":\"expiryTime The amount of time it takes for a root to expire.\"}},\"getSemaphoreVerifierAddress()\":{\"returns\":{\"_0\":\"addr The address of the contract being used as the verifier.\"}},\"getTreeDepth()\":{\"returns\":{\"_0\":\"initializedTreeDepth Tree depth.\"}},\"identityOperator()\":{\"returns\":{\"_0\":\"_ The address authorized to perform identity operations.\"}},\"initialize(uint8,uint256,address,address,address)\":{\"custom:reverts\":\"string If called more than once at the same initialisation number.UnsupportedTreeDepth If passed tree depth is not among defined values.\",\"details\":\"Must be called exactly once.This is marked `reinitializer()` to allow for updated initialisation steps when working      with upgrades based upon this contract. Be aware that there are only 256 (zero-indexed)      initialisations allowed, so decide carefully when to use them. Many cases can safely be      replaced by use of setters.This function is explicitly not virtual as it does not make sense to override even when      upgrading. Create a separate initializer function instead.\",\"params\":{\"_batchInsertionVerifiers\":\"The verifier lookup table for batch insertions.\",\"_batchUpdateVerifiers\":\"The verifier lookup table for batch updates.\",\"_semaphoreVerifier\":\"The verifier to use for semaphore protocol proofs.\",\"_treeDepth\":\"The depth of the MerkeTree\",\"initialRoot\":\"The initial value for the `latestRoot` in the contract. When deploying        this should be set to the root of the empty tree.\"}},\"latestRoot()\":{\"returns\":{\"_0\":\"root The value of the latest tree root.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"queryRoot(uint256)\":{\"details\":\"Should be used sparingly as the query can be quite expensive.\",\"params\":{\"root\":\"The root for which you are querying information.\"},\"returns\":{\"_0\":\"rootInfo The information about `root`, or `NO_SUCH_ROOT` if `root` does not exist.         Note that if the queried root is the current, the timestamp will be invalid as the         root has not been superseded.\"}},\"registerIdentities(uint256[8],uint256,uint32,uint256[],uint256)\":{\"custom:reverts\":\"Unauthorized If the message sender is not authorised to add identities.NotLatestRoot If the provided `preRoot` is not the latest root.ProofValidationFailure If `insertionProof` cannot be verified using the                 provided inputs.VerifierLookupTable.NoSuchVerifier If the batch sizes doesn't match a known                 verifier.\",\"params\":{\"identityCommitments\":\"The identities that were inserted into the tree starting at        `startIndex` and `preRoot` to give `postRoot`. All of the commitments must be        elements of the field `Kr`.\",\"postRoot\":\"The root obtained after inserting all of `identityCommitments` into the tree        described by `preRoot`. Must be an element of the field `Kr`. (alread in reduced form)\",\"startIndex\":\"The position in the tree at which the insertions were made.\"}},\"renounceOwnership()\":{\"details\":\"This function is intentionally not `virtual` as we do not want it to be possible to      renounce ownership for any WorldID implementation.This function is marked as `onlyOwner` to maintain the access restriction from the base      contract.\"},\"requireValidRoot(uint256)\":{\"custom:reverts\":\"ExpiredRoot If the provided `root` has expired.NonExistentRoot If the provided `root` does not exist in the history.\",\"details\":\"A root is valid if it is either the latest root, or not the latest root but has not      expired.\",\"params\":{\"root\":\"The root of the merkle tree to check for validity.\"}},\"setIdentityOperator(address)\":{\"params\":{\"newIdentityOperator\":\"The address of the new identity operator.\"},\"returns\":{\"_0\":\"_ The address of the old identity operator.\"}},\"setRegisterIdentitiesVerifierLookupTable(address)\":{\"details\":\"Only the owner of the contract can call this function.\",\"params\":{\"newTable\":\"The new verifier lookup table to be used for verifying identity        registrations.\"}},\"setRootHistoryExpiry(uint256)\":{\"details\":\"Only the owner of the contract can call this function.\",\"params\":{\"newExpiryTime\":\"The new time to use to expire roots.\"}},\"setSemaphoreVerifier(address)\":{\"details\":\"Only the owner of the contract can call this function.\",\"params\":{\"newVerifier\":\"The new verifier instance to be used for verifying semaphore proofs.\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"verifyProof(uint256,uint256,uint256,uint256,uint256[8])\":{\"custom:reverts\":\"string If the zero-knowledge proof cannot be verified for the public inputs.\",\"details\":\"Note that a double-signaling check is not included here, and should be carried by the      caller.\",\"params\":{\"externalNullifierHash\":\"A keccak256 hash of the external nullifier\",\"nullifierHash\":\"The nullifier hash\",\"proof\":\"The zero-knowledge proof\",\"root\":\"The of the Merkle tree\",\"signalHash\":\"A keccak256 hash of the Semaphore signal\"}}},\"stateVariables\":{\"SNARK_SCALAR_FIELD\":{\"details\":\"Used internally to ensure that the proof input is scaled to within the field `Fr`.\"},\"_identityOperator\":{\"details\":\"The identity operator defaults to being the same as the owner.\"},\"_stateBridge\":{\"details\":\"preserved for storage reasons, no longer used\"},\"identityUpdateVerifiers\":{\"details\":\"preserved for storage reasons, no longer used\"},\"rootHistoryExpiry\":{\"details\":\"This prevents proofs getting invalidated in the mempool by another tx modifying the      group.\"}},\"title\":\"WorldID Identity Manager Implementation Version 1\",\"version\":1},\"userdoc\":{\"errors\":{\"CannotRenounceOwnership()\":[{\"notice\":\"Thrown when an attempt is made to renounce ownership.\"}],\"ExpiredRoot()\":[{\"notice\":\"Thrown when attempting to validate a root that has expired.\"}],\"ImplementationNotInitialized()\":[{\"notice\":\"Thrown when attempting to call a function while the implementation has not been         initialized.\"}],\"InvalidCommitment(uint256)\":[{\"notice\":\"Thrown when one or more of the identity commitments to be inserted is invalid.\"}],\"InvalidStateBridgeAddress()\":[{\"notice\":\"Thrown when attempting to set the state bridge address to the zero address.\"}],\"InvalidVerifier()\":[{\"notice\":\"Thrown when a verifier is initialized to be the zero address\"}],\"InvalidVerifierLUT()\":[{\"notice\":\"Thrown when a verifier lookup table is initialized to be the zero address\"}],\"MismatchedInputLengths()\":[{\"notice\":\"Thrown when the inputs to `removeIdentities` do not match in         length.\"}],\"NonExistentRoot()\":[{\"notice\":\"Thrown when attempting to validate a root that has yet to be added to the root         history.\"}],\"NotLatestRoot(uint256,uint256)\":[{\"notice\":\"Thrown when the provided root is not the very latest root.\"}],\"ProofValidationFailure()\":[{\"notice\":\"Thrown when the provided proof cannot be verified for the accompanying inputs.\"}],\"StateBridgeAlreadyDisabled()\":[{\"notice\":\"Thrown when attempting to disable the bridge when it is already disabled.\"}],\"StateBridgeAlreadyEnabled()\":[{\"notice\":\"Thrown when attempting to enable the bridge when it is already enabled.\"}],\"Unauthorized(address)\":[{\"notice\":\"Thrown when trying to execute a privileged action without being the contract         manager.\"}],\"UnreducedElement(uint8,uint256)\":[{\"notice\":\"Thrown when encountering an element that should be reduced as a member of `Fr` but         is not.\"}],\"UnsupportedTreeDepth(uint8)\":[{\"notice\":\"Thrown when Semaphore tree depth is not supported.\"}]},\"events\":{\"DependencyUpdated(uint8,address,address)\":{\"notice\":\"Emitted when a dependency's address is updated via an admin action.\"},\"IdentityOperatorChanged(address,address)\":{\"notice\":\"Emitted when the identity operator is changed.\"},\"RootHistoryExpirySet(uint256,uint256)\":{\"notice\":\"Emitted when the root history expiry time is changed.\"},\"StateBridgeStateChange(bool)\":{\"notice\":\"Emitted when the state bridge is enabled or disabled.\"},\"TreeChanged(uint256,uint8,uint256)\":{\"notice\":\"Emitted when the current root of the tree is updated.\"}},\"kind\":\"user\",\"methods\":{\"NO_SUCH_ROOT()\":{\"notice\":\"A constant representing a root that doesn't exist.\"},\"calculateIdentityRegistrationInputHash(uint32,uint256,uint256,uint256[])\":{\"notice\":\"Calculates the input hash for the identity registration verifier.\"},\"constructor\":{\"notice\":\"Constructs the contract.\"},\"getRegisterIdentitiesVerifierLookupTableAddress()\":{\"notice\":\"Gets the address for the lookup table of merkle tree verifiers used for identity         registrations.\"},\"getRootHistoryExpiry()\":{\"notice\":\"Gets the current amount of time used to expire roots in the history.\"},\"getSemaphoreVerifierAddress()\":{\"notice\":\"Gets the address of the verifier used for verification of semaphore proofs.\"},\"getTreeDepth()\":{\"notice\":\"Gets the Semaphore tree depth the contract was initialized with.\"},\"identityOperator()\":{\"notice\":\"Gets the address that is authorised to perform identity operations on this identity         manager instance.\"},\"initialize(uint8,uint256,address,address,address)\":{\"notice\":\"Initializes the contract.\"},\"latestRoot()\":{\"notice\":\"Allows a caller to query the latest root.\"},\"queryRoot(uint256)\":{\"notice\":\"Allows a caller to query the root history for information about a given root.\"},\"renounceOwnership()\":{\"notice\":\"Ensures that ownership of WorldID implementations cannot be renounced.\"},\"requireValidRoot(uint256)\":{\"notice\":\"Reverts if the provided root value is not valid.\"},\"setIdentityOperator(address)\":{\"notice\":\"Sets the address that is authorised to perform identity operations on this identity         manager instance.\"},\"setRegisterIdentitiesVerifierLookupTable(address)\":{\"notice\":\"Sets the address for the lookup table of merkle tree verifiers used for identity         registrations.\"},\"setRootHistoryExpiry(uint256)\":{\"notice\":\"Sets the time to wait before expiring a root from the root history.\"},\"setSemaphoreVerifier(address)\":{\"notice\":\"Sets the address for the semaphore verifier to be used for verification of         semaphore proofs.\"},\"verifyProof(uint256,uint256,uint256,uint256,uint256[8])\":{\"notice\":\"A verifier for the semaphore protocol.\"}},\"notice\":\"An implementation of a batch-based identity manager for the WorldID protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/WorldIDIdentityManagerImplV1.sol\":\"WorldIDIdentityManagerImplV1\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@zk-kit/=lib/zk-kit/packages/\",\":contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":semaphore/=lib/semaphore/packages/contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":zk-kit/=lib/zk-kit/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xd712fb45b3ea0ab49679164e3895037adc26ce12879d5184feb040e01c1c07a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ecc0838b0649460c0a538a4adb55b2b530e726c5526afc5e09c8eea4f3af13\",\"dweb:/ipfs/QmUxugyGDGGeLzDFi8QDH2vQMtCFaheiujWv58SuGVx4bZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x923b9774b81c1abfb992262ae7763b6e6de77b077a7180d53c6ebb7b1c8bd648\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53445dc0431f9b45c06f567c6091da961d4087bec0010cca5bd62100fa624a38\",\"dweb:/ipfs/QmNvBYpBv183czrAqNXr76E8M3LF93ouAJFeAcHfb59Rcx\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0x7cdab82b437a17902683a413c86d14f512674a0710007bf44c584a2d2d3ca833\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffe4db7a9f3cdd5a5d019462c2859f4f98f7aae08704afdcb3ef0d08d966bbeb\",\"dweb:/ipfs/QmTCHSuoi22dAu55qv4TcENyTmv5mTpAoxmYWD8cRnEp3M\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/WorldIDIdentityManagerImplV1.sol\":{\"keccak256\":\"0x5d05b909d5ea55446c4b3009ed6283924992fdb7bd9f93179b92f84b60d583ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://27eae247b4e8ce77ae921a4ba0a947d82a19eb303451a28ccc2771b99f348123\",\"dweb:/ipfs/QmUKTYz3UTNBEF3zBrS82mmrDzcZ992LEBSUAiS4cmMBtX\"]},\"src/abstract/WorldIDImpl.sol\":{\"keccak256\":\"0xccfff2c5d7af4e505ed13b7d46011d5544317343ea92e7beb874e4d69358e6d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://428860598ca38e42e29892a0b4759c4d3010378f54c3b3e4392f965ff091076e\",\"dweb:/ipfs/QmYPjcDRTr1UEeSbS7ssdGjbDHzAqjRNKBsYJqKJWeL8bZ\"]},\"src/data/VerifierLookupTable.sol\":{\"keccak256\":\"0xfd213b79aaec8d205c50ab3ed5c4ebed06ae602ed526a820340adc1c76745fbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6af992a56a7cee8124af7f16d74dc8a2a7ae5f8b3059b92d46862e44c3804b83\",\"dweb:/ipfs/QmV9bQtJ9PjnwsiiZMUGJANB3znSxJ6ACTqWv9WkQeoeB3\"]},\"src/interfaces/IBaseWorldID.sol\":{\"keccak256\":\"0xcec58605726864d72e35d62c85e002acc98d3f8fa19d01b49fff461c2767c144\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57714fcbceb0497f3fe8906778a837082939489fbb0bd930d015ad6e971913d5\",\"dweb:/ipfs/QmQVVmLr9CEkR727ByMF96a8MbwAeB4AQQWvxneg2Avkq8\"]},\"src/interfaces/IBridge.sol\":{\"keccak256\":\"0x0931c789450d21479da5d4de8c6435fca965660f6e1bd746fff958f4c20cf2ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c564b4d4a15e8075555077a043d773bb20133548376402ff3dbc0eccb57435d\",\"dweb:/ipfs/QmXQRihAFdtfyjTNeHmx9nmNHiS1wy2658Y5aXCXo2tKSQ\"]},\"src/interfaces/ISemaphoreVerifier.sol\":{\"keccak256\":\"0xc18d214e10a4debdc5d7e0f9bfb920211debf93f99524438ced0fae03854f787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59414e42fadace7b853ed04842d4e7b6597fb3168fda03e771c2cacd7e04720b\",\"dweb:/ipfs/QmcjV2prwiyHBaUrwpqL7f6CZBpJqscZspaDKzUnDGcaUa\"]},\"src/interfaces/ITreeVerifier.sol\":{\"keccak256\":\"0x0f4c39de6e476791f28510b61c3fb781468d1ecfd88ab15c1bdcb730e90fbd4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4facca90510d2efbb44a3ddeace04da1d5396b914b9e5d93f55d5253605c20a4\",\"dweb:/ipfs/QmSg8fYNFXLUse5xmBaayeTsk7QuuHaVLuXmJXZ4E3Mvuw\"]},\"src/interfaces/IWorldID.sol\":{\"keccak256\":\"0x577908eff2d29d96354a06ab2602ffe6b97aa9d491330efcc2fcd0a88a8acbb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa0a36a598a851b88cff364b4211dc32081f51940aa8076d9c9b7de8ab126b2f\",\"dweb:/ipfs/QmSne8aRiE8C8RuwEUSk4doETKAGaavrEYyUkwiJc5H8qc\"]},\"src/utils/CheckInitialized.sol\":{\"keccak256\":\"0xfab096b633efd580548007e97920f6088e6d8a5287db84b9aa3d595c02fefcf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dee612c9dbad59d535e7a72b79191187fd91c06af9cb5b6f68d60274d0ee2c04\",\"dweb:/ipfs/QmVJbSQ8DAN6igasbgHjZTM4NRZ3EjrhK8wFcvUG1wPYtZ\"]},\"src/utils/SemaphoreTreeDepthValidator.sol\":{\"keccak256\":\"0x50140161de381aa963457cfd2ee8831a435bd79040f38794e6ef07365c49c872\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcc5b8a3a6f5146aa3fdee550c3e80d828b55df63223485da3d5655a591ad661\",\"dweb:/ipfs/QmWfUzbeFoSaPV1E8QxagUnpt5zfmPXgiropUg1GcV6oZs\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotRenounceOwnership"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExpiredRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ImplementationNotInitialized"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidCommitment"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidStateBridgeAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidVerifier"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidVerifierLUT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MismatchedInputLengths"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonExistentRoot"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "providedRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "latestRoot",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NotLatestRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProofValidationFailure"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StateBridgeAlreadyDisabled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StateBridgeAlreadyEnabled"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "enum WorldIDIdentityManagerImplV1.UnreducedElementType",
              "name": "elementType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "element",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnreducedElement"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "depth",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "UnsupportedTreeDepth"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum WorldIDIdentityManagerImplV1.Dependency",
              "name": "kind",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "oldAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DependencyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldOperator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOperator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "IdentityOperatorChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldExpiryTime",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newExpiryTime",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RootHistoryExpirySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StateBridgeStateChange",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "preRoot",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "enum WorldIDIdentityManagerImplV1.TreeChange",
              "name": "kind",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "postRoot",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TreeChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "_treeDepth",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "initialRoot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WorldIDIdentityManagerImplInitialized",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "NO_SUCH_ROOT",
          "outputs": [
            {
              "internalType": "struct WorldIDIdentityManagerImplV1.RootInfo",
              "name": "rootInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "root",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "supersededTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bool",
                  "name": "isValid",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "startIndex",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "preRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "postRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "identityCommitments",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateIdentityRegistrationInputHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRegisterIdentitiesVerifierLookupTableAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRootHistoryExpiry",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSemaphoreVerifierAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTreeDepth",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "identityOperator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "_treeDepth",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "initialRoot",
              "type": "uint256"
            },
            {
              "internalType": "contract VerifierLookupTable",
              "name": "_batchInsertionVerifiers",
              "type": "address"
            },
            {
              "internalType": "contract VerifierLookupTable",
              "name": "_batchUpdateVerifiers",
              "type": "address"
            },
            {
              "internalType": "contract ISemaphoreVerifier",
              "name": "_semaphoreVerifier",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "latestRoot",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "queryRoot",
          "outputs": [
            {
              "internalType": "struct WorldIDIdentityManagerImplV1.RootInfo",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "root",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "supersededTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bool",
                  "name": "isValid",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[8]",
              "name": "insertionProof",
              "type": "uint256[8]"
            },
            {
              "internalType": "uint256",
              "name": "preRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "startIndex",
              "type": "uint32"
            },
            {
              "internalType": "uint256[]",
              "name": "identityCommitments",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "postRoot",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerIdentities"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "requireValidRoot"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newIdentityOperator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setIdentityOperator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract VerifierLookupTable",
              "name": "newTable",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRegisterIdentitiesVerifierLookupTable"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newExpiryTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRootHistoryExpiry"
        },
        {
          "inputs": [
            {
              "internalType": "contract ISemaphoreVerifier",
              "name": "newVerifier",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSemaphoreVerifier"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "signalHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nullifierHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "externalNullifierHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256[8]",
              "name": "proof",
              "type": "uint256[8]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyProof"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "NO_SUCH_ROOT()": {
            "details": "Can be checked against when querying for root data."
          },
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "calculateIdentityRegistrationInputHash(uint32,uint256,uint256,uint256[])": {
            "details": "Implements the computation described below.",
            "params": {
              "identityCommitments": "The identities that were added to the tree to produce `postRoot`.",
              "postRoot": "The root value of the tree after these insertions were made.",
              "preRoot": "The root value of the tree before these insertions were made.",
              "startIndex": "The index in the tree from which inserting started."
            },
            "returns": {
              "hash": "The input hash calculated as described below. We keccak hash all input to save verification gas. Inputs are arranged as follows: StartIndex || PreRoot || PostRoot || IdComms[0] || IdComms[1] || ... || IdComms[batchSize-1]     32\t   ||   256   ||   256    ||    256     ||    256     || ... ||     256 bits"
            }
          },
          "getRegisterIdentitiesVerifierLookupTableAddress()": {
            "returns": {
              "_0": "addr The address of the contract being used as the verifier lookup table."
            }
          },
          "getRootHistoryExpiry()": {
            "returns": {
              "_0": "expiryTime The amount of time it takes for a root to expire."
            }
          },
          "getSemaphoreVerifierAddress()": {
            "returns": {
              "_0": "addr The address of the contract being used as the verifier."
            }
          },
          "getTreeDepth()": {
            "returns": {
              "_0": "initializedTreeDepth Tree depth."
            }
          },
          "identityOperator()": {
            "returns": {
              "_0": "_ The address authorized to perform identity operations."
            }
          },
          "initialize(uint8,uint256,address,address,address)": {
            "custom:reverts": "string If called more than once at the same initialisation number.UnsupportedTreeDepth If passed tree depth is not among defined values.",
            "details": "Must be called exactly once.This is marked `reinitializer()` to allow for updated initialisation steps when working      with upgrades based upon this contract. Be aware that there are only 256 (zero-indexed)      initialisations allowed, so decide carefully when to use them. Many cases can safely be      replaced by use of setters.This function is explicitly not virtual as it does not make sense to override even when      upgrading. Create a separate initializer function instead.",
            "params": {
              "_batchInsertionVerifiers": "The verifier lookup table for batch insertions.",
              "_batchUpdateVerifiers": "The verifier lookup table for batch updates.",
              "_semaphoreVerifier": "The verifier to use for semaphore protocol proofs.",
              "_treeDepth": "The depth of the MerkeTree",
              "initialRoot": "The initial value for the `latestRoot` in the contract. When deploying        this should be set to the root of the empty tree."
            }
          },
          "latestRoot()": {
            "returns": {
              "_0": "root The value of the latest tree root."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "queryRoot(uint256)": {
            "details": "Should be used sparingly as the query can be quite expensive.",
            "params": {
              "root": "The root for which you are querying information."
            },
            "returns": {
              "_0": "rootInfo The information about `root`, or `NO_SUCH_ROOT` if `root` does not exist.         Note that if the queried root is the current, the timestamp will be invalid as the         root has not been superseded."
            }
          },
          "registerIdentities(uint256[8],uint256,uint32,uint256[],uint256)": {
            "custom:reverts": "Unauthorized If the message sender is not authorised to add identities.NotLatestRoot If the provided `preRoot` is not the latest root.ProofValidationFailure If `insertionProof` cannot be verified using the                 provided inputs.VerifierLookupTable.NoSuchVerifier If the batch sizes doesn't match a known                 verifier.",
            "params": {
              "identityCommitments": "The identities that were inserted into the tree starting at        `startIndex` and `preRoot` to give `postRoot`. All of the commitments must be        elements of the field `Kr`.",
              "postRoot": "The root obtained after inserting all of `identityCommitments` into the tree        described by `preRoot`. Must be an element of the field `Kr`. (alread in reduced form)",
              "startIndex": "The position in the tree at which the insertions were made."
            }
          },
          "renounceOwnership()": {
            "details": "This function is intentionally not `virtual` as we do not want it to be possible to      renounce ownership for any WorldID implementation.This function is marked as `onlyOwner` to maintain the access restriction from the base      contract."
          },
          "requireValidRoot(uint256)": {
            "custom:reverts": "ExpiredRoot If the provided `root` has expired.NonExistentRoot If the provided `root` does not exist in the history.",
            "details": "A root is valid if it is either the latest root, or not the latest root but has not      expired.",
            "params": {
              "root": "The root of the merkle tree to check for validity."
            }
          },
          "setIdentityOperator(address)": {
            "params": {
              "newIdentityOperator": "The address of the new identity operator."
            },
            "returns": {
              "_0": "_ The address of the old identity operator."
            }
          },
          "setRegisterIdentitiesVerifierLookupTable(address)": {
            "details": "Only the owner of the contract can call this function.",
            "params": {
              "newTable": "The new verifier lookup table to be used for verifying identity        registrations."
            }
          },
          "setRootHistoryExpiry(uint256)": {
            "details": "Only the owner of the contract can call this function.",
            "params": {
              "newExpiryTime": "The new time to use to expire roots."
            }
          },
          "setSemaphoreVerifier(address)": {
            "details": "Only the owner of the contract can call this function.",
            "params": {
              "newVerifier": "The new verifier instance to be used for verifying semaphore proofs."
            }
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "verifyProof(uint256,uint256,uint256,uint256,uint256[8])": {
            "custom:reverts": "string If the zero-knowledge proof cannot be verified for the public inputs.",
            "details": "Note that a double-signaling check is not included here, and should be carried by the      caller.",
            "params": {
              "externalNullifierHash": "A keccak256 hash of the external nullifier",
              "nullifierHash": "The nullifier hash",
              "proof": "The zero-knowledge proof",
              "root": "The of the Merkle tree",
              "signalHash": "A keccak256 hash of the Semaphore signal"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "NO_SUCH_ROOT()": {
            "notice": "A constant representing a root that doesn't exist."
          },
          "calculateIdentityRegistrationInputHash(uint32,uint256,uint256,uint256[])": {
            "notice": "Calculates the input hash for the identity registration verifier."
          },
          "constructor": {
            "notice": "Constructs the contract."
          },
          "getRegisterIdentitiesVerifierLookupTableAddress()": {
            "notice": "Gets the address for the lookup table of merkle tree verifiers used for identity         registrations."
          },
          "getRootHistoryExpiry()": {
            "notice": "Gets the current amount of time used to expire roots in the history."
          },
          "getSemaphoreVerifierAddress()": {
            "notice": "Gets the address of the verifier used for verification of semaphore proofs."
          },
          "getTreeDepth()": {
            "notice": "Gets the Semaphore tree depth the contract was initialized with."
          },
          "identityOperator()": {
            "notice": "Gets the address that is authorised to perform identity operations on this identity         manager instance."
          },
          "initialize(uint8,uint256,address,address,address)": {
            "notice": "Initializes the contract."
          },
          "latestRoot()": {
            "notice": "Allows a caller to query the latest root."
          },
          "queryRoot(uint256)": {
            "notice": "Allows a caller to query the root history for information about a given root."
          },
          "renounceOwnership()": {
            "notice": "Ensures that ownership of WorldID implementations cannot be renounced."
          },
          "requireValidRoot(uint256)": {
            "notice": "Reverts if the provided root value is not valid."
          },
          "setIdentityOperator(address)": {
            "notice": "Sets the address that is authorised to perform identity operations on this identity         manager instance."
          },
          "setRegisterIdentitiesVerifierLookupTable(address)": {
            "notice": "Sets the address for the lookup table of merkle tree verifiers used for identity         registrations."
          },
          "setRootHistoryExpiry(uint256)": {
            "notice": "Sets the time to wait before expiring a root from the root history."
          },
          "setSemaphoreVerifier(address)": {
            "notice": "Sets the address for the semaphore verifier to be used for verification of         semaphore proofs."
          },
          "verifyProof(uint256,uint256,uint256,uint256,uint256[8])": {
            "notice": "A verifier for the semaphore protocol."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@zk-kit/=lib/zk-kit/packages/",
        "contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "ds-test/=lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "semaphore/=lib/semaphore/packages/contracts/contracts/",
        "solmate/=lib/solmate/src/",
        "zk-kit/=lib/zk-kit/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/WorldIDIdentityManagerImplV1.sol": "WorldIDIdentityManagerImplV1"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0xd712fb45b3ea0ab49679164e3895037adc26ce12879d5184feb040e01c1c07a9",
        "urls": [
          "bzz-raw://79ecc0838b0649460c0a538a4adb55b2b530e726c5526afc5e09c8eea4f3af13",
          "dweb:/ipfs/QmUxugyGDGGeLzDFi8QDH2vQMtCFaheiujWv58SuGVx4bZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823",
        "urls": [
          "bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2",
          "dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
        "urls": [
          "bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
          "dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778",
        "urls": [
          "bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1",
          "dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a",
        "urls": [
          "bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3",
          "dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0x923b9774b81c1abfb992262ae7763b6e6de77b077a7180d53c6ebb7b1c8bd648",
        "urls": [
          "bzz-raw://53445dc0431f9b45c06f567c6091da961d4087bec0010cca5bd62100fa624a38",
          "dweb:/ipfs/QmNvBYpBv183czrAqNXr76E8M3LF93ouAJFeAcHfb59Rcx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0x7cdab82b437a17902683a413c86d14f512674a0710007bf44c584a2d2d3ca833",
        "urls": [
          "bzz-raw://ffe4db7a9f3cdd5a5d019462c2859f4f98f7aae08704afdcb3ef0d08d966bbeb",
          "dweb:/ipfs/QmTCHSuoi22dAu55qv4TcENyTmv5mTpAoxmYWD8cRnEp3M"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/WorldIDIdentityManagerImplV1.sol": {
        "keccak256": "0x5d05b909d5ea55446c4b3009ed6283924992fdb7bd9f93179b92f84b60d583ad",
        "urls": [
          "bzz-raw://27eae247b4e8ce77ae921a4ba0a947d82a19eb303451a28ccc2771b99f348123",
          "dweb:/ipfs/QmUKTYz3UTNBEF3zBrS82mmrDzcZ992LEBSUAiS4cmMBtX"
        ],
        "license": "MIT"
      },
      "src/abstract/WorldIDImpl.sol": {
        "keccak256": "0xccfff2c5d7af4e505ed13b7d46011d5544317343ea92e7beb874e4d69358e6d0",
        "urls": [
          "bzz-raw://428860598ca38e42e29892a0b4759c4d3010378f54c3b3e4392f965ff091076e",
          "dweb:/ipfs/QmYPjcDRTr1UEeSbS7ssdGjbDHzAqjRNKBsYJqKJWeL8bZ"
        ],
        "license": "MIT"
      },
      "src/data/VerifierLookupTable.sol": {
        "keccak256": "0xfd213b79aaec8d205c50ab3ed5c4ebed06ae602ed526a820340adc1c76745fbc",
        "urls": [
          "bzz-raw://6af992a56a7cee8124af7f16d74dc8a2a7ae5f8b3059b92d46862e44c3804b83",
          "dweb:/ipfs/QmV9bQtJ9PjnwsiiZMUGJANB3znSxJ6ACTqWv9WkQeoeB3"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBaseWorldID.sol": {
        "keccak256": "0xcec58605726864d72e35d62c85e002acc98d3f8fa19d01b49fff461c2767c144",
        "urls": [
          "bzz-raw://57714fcbceb0497f3fe8906778a837082939489fbb0bd930d015ad6e971913d5",
          "dweb:/ipfs/QmQVVmLr9CEkR727ByMF96a8MbwAeB4AQQWvxneg2Avkq8"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBridge.sol": {
        "keccak256": "0x0931c789450d21479da5d4de8c6435fca965660f6e1bd746fff958f4c20cf2ac",
        "urls": [
          "bzz-raw://0c564b4d4a15e8075555077a043d773bb20133548376402ff3dbc0eccb57435d",
          "dweb:/ipfs/QmXQRihAFdtfyjTNeHmx9nmNHiS1wy2658Y5aXCXo2tKSQ"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISemaphoreVerifier.sol": {
        "keccak256": "0xc18d214e10a4debdc5d7e0f9bfb920211debf93f99524438ced0fae03854f787",
        "urls": [
          "bzz-raw://59414e42fadace7b853ed04842d4e7b6597fb3168fda03e771c2cacd7e04720b",
          "dweb:/ipfs/QmcjV2prwiyHBaUrwpqL7f6CZBpJqscZspaDKzUnDGcaUa"
        ],
        "license": "MIT"
      },
      "src/interfaces/ITreeVerifier.sol": {
        "keccak256": "0x0f4c39de6e476791f28510b61c3fb781468d1ecfd88ab15c1bdcb730e90fbd4f",
        "urls": [
          "bzz-raw://4facca90510d2efbb44a3ddeace04da1d5396b914b9e5d93f55d5253605c20a4",
          "dweb:/ipfs/QmSg8fYNFXLUse5xmBaayeTsk7QuuHaVLuXmJXZ4E3Mvuw"
        ],
        "license": "MIT"
      },
      "src/interfaces/IWorldID.sol": {
        "keccak256": "0x577908eff2d29d96354a06ab2602ffe6b97aa9d491330efcc2fcd0a88a8acbb1",
        "urls": [
          "bzz-raw://fa0a36a598a851b88cff364b4211dc32081f51940aa8076d9c9b7de8ab126b2f",
          "dweb:/ipfs/QmSne8aRiE8C8RuwEUSk4doETKAGaavrEYyUkwiJc5H8qc"
        ],
        "license": "MIT"
      },
      "src/utils/CheckInitialized.sol": {
        "keccak256": "0xfab096b633efd580548007e97920f6088e6d8a5287db84b9aa3d595c02fefcf4",
        "urls": [
          "bzz-raw://dee612c9dbad59d535e7a72b79191187fd91c06af9cb5b6f68d60274d0ee2c04",
          "dweb:/ipfs/QmVJbSQ8DAN6igasbgHjZTM4NRZ3EjrhK8wFcvUG1wPYtZ"
        ],
        "license": "MIT"
      },
      "src/utils/SemaphoreTreeDepthValidator.sol": {
        "keccak256": "0x50140161de381aa963457cfd2ee8831a435bd79040f38794e6ef07365c49c872",
        "urls": [
          "bzz-raw://bcc5b8a3a6f5146aa3fdee550c3e80d828b55df63223485da3d5655a591ad661",
          "dweb:/ipfs/QmWfUzbeFoSaPV1E8QxagUnpt5zfmPXgiropUg1GcV6oZs"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/WorldIDIdentityManagerImplV1.sol",
    "id": 34870,
    "exportedSymbols": {
      "IBridge": [
        35413
      ],
      "ISemaphoreVerifier": [
        35429
      ],
      "ITreeVerifier": [
        35445
      ],
      "IWorldID": [
        35469
      ],
      "SemaphoreTreeDepthValidator": [
        48479
      ],
      "VerifierLookupTable": [
        35388
      ],
      "WorldIDIdentityManagerImplV1": [
        34869
      ],
      "WorldIDImpl": [
        35153
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:31807:43",
    "nodes": [
      {
        "id": 33999,
        "nodeType": "PragmaDirective",
        "src": "32:24:43",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 34001,
        "nodeType": "ImportDirective",
        "src": "58:55:43",
        "nodes": [],
        "absolutePath": "src/abstract/WorldIDImpl.sol",
        "file": "./abstract/WorldIDImpl.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34870,
        "sourceUnit": 35154,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34000,
              "name": "WorldIDImpl",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35153,
              "src": "66:11:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34003,
        "nodeType": "ImportDirective",
        "src": "115:51:43",
        "nodes": [],
        "absolutePath": "src/interfaces/IWorldID.sol",
        "file": "./interfaces/IWorldID.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34870,
        "sourceUnit": 35470,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34002,
              "name": "IWorldID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35469,
              "src": "123:8:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34005,
        "nodeType": "ImportDirective",
        "src": "167:61:43",
        "nodes": [],
        "absolutePath": "src/interfaces/ITreeVerifier.sol",
        "file": "./interfaces/ITreeVerifier.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34870,
        "sourceUnit": 35446,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34004,
              "name": "ITreeVerifier",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35445,
              "src": "175:13:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34007,
        "nodeType": "ImportDirective",
        "src": "229:73:43",
        "nodes": [],
        "absolutePath": "src/interfaces/ISemaphoreVerifier.sol",
        "file": "src/interfaces/ISemaphoreVerifier.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34870,
        "sourceUnit": 35430,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34006,
              "name": "ISemaphoreVerifier",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35429,
              "src": "237:18:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34009,
        "nodeType": "ImportDirective",
        "src": "303:49:43",
        "nodes": [],
        "absolutePath": "src/interfaces/IBridge.sol",
        "file": "./interfaces/IBridge.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34870,
        "sourceUnit": 35414,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34008,
              "name": "IBridge",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35413,
              "src": "311:7:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34011,
        "nodeType": "ImportDirective",
        "src": "354:84:43",
        "nodes": [],
        "absolutePath": "src/utils/SemaphoreTreeDepthValidator.sol",
        "file": "./utils/SemaphoreTreeDepthValidator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34870,
        "sourceUnit": 48480,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34010,
              "name": "SemaphoreTreeDepthValidator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48479,
              "src": "362:27:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34013,
        "nodeType": "ImportDirective",
        "src": "439:67:43",
        "nodes": [],
        "absolutePath": "src/data/VerifierLookupTable.sol",
        "file": "./data/VerifierLookupTable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34870,
        "sourceUnit": 35389,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34012,
              "name": "VerifierLookupTable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35388,
              "src": "447:19:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34869,
        "nodeType": "ContractDefinition",
        "src": "879:30959:43",
        "nodes": [
          {
            "id": 34021,
            "nodeType": "VariableDeclaration",
            "src": "3537:34:43",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 34019,
              "nodeType": "StructuredDocumentation",
              "src": "3363:169:43",
              "text": "@notice The address of the contract authorized to perform identity management operations.\n @dev The identity operator defaults to being the same as the owner."
            },
            "mutability": "mutable",
            "name": "_identityOperator",
            "nameLocation": "3554:17:43",
            "scope": 34869,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34020,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3537:7:43",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34024,
            "nodeType": "VariableDeclaration",
            "src": "3639:28:43",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 34022,
              "nodeType": "StructuredDocumentation",
              "src": "3578:56:43",
              "text": "@notice The latest root of the identity merkle tree."
            },
            "mutability": "mutable",
            "name": "_latestRoot",
            "nameLocation": "3656:11:43",
            "scope": 34869,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34023,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3639:7:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34029,
            "nodeType": "VariableDeclaration",
            "src": "3821:48:43",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 34025,
              "nodeType": "StructuredDocumentation",
              "src": "3674:142:43",
              "text": "@notice A mapping from the value of the merkle tree root to the timestamp at which the root\n         was superseded by a newer one."
            },
            "mutability": "mutable",
            "name": "rootHistory",
            "nameLocation": "3858:11:43",
            "scope": 34869,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint128_$",
              "typeString": "mapping(uint256 => uint128)"
            },
            "typeName": {
              "id": 34028,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 34026,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3829:7:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3821:27:43",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint128_$",
                "typeString": "mapping(uint256 => uint128)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 34027,
                "name": "uint128",
                "nodeType": "ElementaryTypeName",
                "src": "3840:7:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34032,
            "nodeType": "VariableDeclaration",
            "src": "4069:34:43",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 34030,
              "nodeType": "StructuredDocumentation",
              "src": "3876:188:43",
              "text": "@notice The amount of time an outdated root is considered as valid.\n @dev This prevents proofs getting invalidated in the mempool by another tx modifying the\n      group."
            },
            "mutability": "mutable",
            "name": "rootHistoryExpiry",
            "nameLocation": "4086:17:43",
            "scope": 34869,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34031,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4069:7:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34036,
            "nodeType": "VariableDeclaration",
            "src": "4307:132:43",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 34033,
              "nodeType": "StructuredDocumentation",
              "src": "4110:192:43",
              "text": "@notice The `r` for the finite field `Fr` under which arithmetic is done on the proof input.\n @dev Used internally to ensure that the proof input is scaled to within the field `Fr`."
            },
            "mutability": "constant",
            "name": "SNARK_SCALAR_FIELD",
            "nameLocation": "4333:18:43",
            "scope": 34869,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34034,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4307:7:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3231383838323432383731383339323735323232323436343035373435323537323735303838353438333634343030343136303334333433363938323034313836353735383038343935363137",
              "id": 34035,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4362:77:43",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_21888242871839275222246405745257275088548364400416034343698204186575808495617_by_1",
                "typeString": "int_const 2188...(69 digits omitted)...5617"
              },
              "value": "21888242871839275222246405745257275088548364400416034343698204186575808495617"
            },
            "visibility": "internal"
          },
          {
            "id": 34039,
            "nodeType": "VariableDeclaration",
            "src": "4445:140:43",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SNARK_SCALAR_FIELD_MIN_ONE",
            "nameLocation": "4471:26:43",
            "scope": 34869,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34037,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4445:7:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3231383838323432383731383339323735323232323436343035373435323537323735303838353438333634343030343136303334333433363938323034313836353735383038343935363136",
              "id": 34038,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4508:77:43",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_21888242871839275222246405745257275088548364400416034343698204186575808495616_by_1",
                "typeString": "int_const 2188...(69 digits omitted)...5616"
              },
              "value": "21888242871839275222246405745257275088548364400416034343698204186575808495616"
            },
            "visibility": "internal"
          },
          {
            "id": 34043,
            "nodeType": "VariableDeclaration",
            "src": "4672:52:43",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 34040,
              "nodeType": "StructuredDocumentation",
              "src": "4592:75:43",
              "text": "@notice The table of verifiers for verifying batch identity insertions."
            },
            "mutability": "mutable",
            "name": "batchInsertionVerifiers",
            "nameLocation": "4701:23:43",
            "scope": 34869,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
              "typeString": "contract VerifierLookupTable"
            },
            "typeName": {
              "id": 34042,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34041,
                "name": "VerifierLookupTable",
                "nameLocations": [
                  "4672:19:43"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35388,
                "src": "4672:19:43"
              },
              "referencedDeclaration": 35388,
              "src": "4672:19:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                "typeString": "contract VerifierLookupTable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34047,
            "nodeType": "VariableDeclaration",
            "src": "4861:52:43",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 34044,
              "nodeType": "StructuredDocumentation",
              "src": "4731:125:43",
              "text": "@notice The table of verifiers for verifying identity updates.\n @dev preserved for storage reasons, no longer used"
            },
            "mutability": "mutable",
            "name": "identityUpdateVerifiers",
            "nameLocation": "4890:23:43",
            "scope": 34869,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
              "typeString": "contract VerifierLookupTable"
            },
            "typeName": {
              "id": 34046,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34045,
                "name": "VerifierLookupTable",
                "nameLocations": [
                  "4861:19:43"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35388,
                "src": "4861:19:43"
              },
              "referencedDeclaration": 35388,
              "src": "4861:19:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                "typeString": "contract VerifierLookupTable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34051,
            "nodeType": "VariableDeclaration",
            "src": "5010:45:43",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 34048,
              "nodeType": "StructuredDocumentation",
              "src": "4920:85:43",
              "text": "@notice The verifier instance needed for operating within the semaphore protocol."
            },
            "mutability": "mutable",
            "name": "semaphoreVerifier",
            "nameLocation": "5038:17:43",
            "scope": 34869,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
              "typeString": "contract ISemaphoreVerifier"
            },
            "typeName": {
              "id": 34050,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34049,
                "name": "ISemaphoreVerifier",
                "nameLocations": [
                  "5010:18:43"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35429,
                "src": "5010:18:43"
              },
              "referencedDeclaration": 35429,
              "src": "5010:18:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                "typeString": "contract ISemaphoreVerifier"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34055,
            "nodeType": "VariableDeclaration",
            "src": "5210:29:43",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 34052,
              "nodeType": "StructuredDocumentation",
              "src": "5062:143:43",
              "text": "@notice The interface of the bridge contract from L1 to supported target chains.\n @dev preserved for storage reasons, no longer used"
            },
            "mutability": "mutable",
            "name": "_stateBridge",
            "nameLocation": "5227:12:43",
            "scope": 34869,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IBridge_$35413",
              "typeString": "contract IBridge"
            },
            "typeName": {
              "id": 34054,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34053,
                "name": "IBridge",
                "nameLocations": [
                  "5210:7:43"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35413,
                "src": "5210:7:43"
              },
              "referencedDeclaration": 35413,
              "src": "5210:7:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBridge_$35413",
                "typeString": "contract IBridge"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34058,
            "nodeType": "VariableDeclaration",
            "src": "5311:35:43",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 34056,
              "nodeType": "StructuredDocumentation",
              "src": "5246:60:43",
              "text": "@notice Boolean flag to enable/disable the state bridge."
            },
            "mutability": "mutable",
            "name": "_isStateBridgeEnabled",
            "nameLocation": "5325:21:43",
            "scope": 34869,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 34057,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "5311:4:43",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34061,
            "nodeType": "VariableDeclaration",
            "src": "5409:24:43",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 34059,
              "nodeType": "StructuredDocumentation",
              "src": "5353:51:43",
              "text": "@notice The depth of the Semaphore merkle tree."
            },
            "mutability": "mutable",
            "name": "treeDepth",
            "nameLocation": "5424:9:43",
            "scope": 34869,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 34060,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "5409:5:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34069,
            "nodeType": "StructDefinition",
            "src": "6130:104:43",
            "nodes": [],
            "canonicalName": "WorldIDIdentityManagerImplV1.RootInfo",
            "documentation": {
              "id": 34062,
              "nodeType": "StructuredDocumentation",
              "src": "5693:432:43",
              "text": "@notice Provides information about a merkle tree root.\n @param root The value of the merkle tree root.\n @param supersededTimestamp The timestamp at which the root was inserted into the history.\n        This may be 0 if the requested root is the current root (which has not yet been\n        inserted into the history).\n @param isValid Whether or not the root is valid (has not expired)."
            },
            "members": [
              {
                "constant": false,
                "id": 34064,
                "mutability": "mutable",
                "name": "root",
                "nameLocation": "6164:4:43",
                "nodeType": "VariableDeclaration",
                "scope": 34069,
                "src": "6156:12:43",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 34063,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "6156:7:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34066,
                "mutability": "mutable",
                "name": "supersededTimestamp",
                "nameLocation": "6186:19:43",
                "nodeType": "VariableDeclaration",
                "scope": 34069,
                "src": "6178:27:43",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 34065,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "6178:7:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34068,
                "mutability": "mutable",
                "name": "isValid",
                "nameLocation": "6220:7:43",
                "nodeType": "VariableDeclaration",
                "scope": 34069,
                "src": "6215:12:43",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 34067,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "6215:4:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RootInfo",
            "nameLocation": "6137:8:43",
            "scope": 34869,
            "visibility": "public"
          },
          {
            "id": 34074,
            "nodeType": "EnumDefinition",
            "src": "6465:95:43",
            "nodes": [],
            "canonicalName": "WorldIDIdentityManagerImplV1.UnreducedElementType",
            "documentation": {
              "id": 34070,
              "nodeType": "StructuredDocumentation",
              "src": "6240:220:43",
              "text": "@notice Represents the kind of element that has not been provided in reduced form.\n @dev preserved for ABI backwards compatibility with V1, no longer used\n all elements come out reduced from the circuit"
            },
            "members": [
              {
                "id": 34071,
                "name": "PreRoot",
                "nameLocation": "6501:7:43",
                "nodeType": "EnumValue",
                "src": "6501:7:43"
              },
              {
                "id": 34072,
                "name": "IdentityCommitment",
                "nameLocation": "6518:18:43",
                "nodeType": "EnumValue",
                "src": "6518:18:43"
              },
              {
                "id": 34073,
                "name": "PostRoot",
                "nameLocation": "6546:8:43",
                "nodeType": "EnumValue",
                "src": "6546:8:43"
              }
            ],
            "name": "UnreducedElementType",
            "nameLocation": "6470:20:43"
          },
          {
            "id": 34078,
            "nodeType": "EnumDefinition",
            "src": "6650:59:43",
            "nodes": [],
            "canonicalName": "WorldIDIdentityManagerImplV1.TreeChange",
            "documentation": {
              "id": 34075,
              "nodeType": "StructuredDocumentation",
              "src": "6566:79:43",
              "text": "@notice Represents the kind of change that is made to the root of the tree."
            },
            "members": [
              {
                "id": 34076,
                "name": "Insertion",
                "nameLocation": "6676:9:43",
                "nodeType": "EnumValue",
                "src": "6676:9:43"
              },
              {
                "id": 34077,
                "name": "Deletion",
                "nameLocation": "6695:8:43",
                "nodeType": "EnumValue",
                "src": "6695:8:43"
              }
            ],
            "name": "TreeChange",
            "nameLocation": "6655:10:43"
          },
          {
            "id": 34084,
            "nodeType": "EnumDefinition",
            "src": "6789:145:43",
            "nodes": [],
            "canonicalName": "WorldIDIdentityManagerImplV1.Dependency",
            "documentation": {
              "id": 34079,
              "nodeType": "StructuredDocumentation",
              "src": "6715:69:43",
              "text": "@notice Represents the kinds of dependencies that can be updated."
            },
            "members": [
              {
                "id": 34080,
                "name": "StateBridge",
                "nameLocation": "6815:11:43",
                "nodeType": "EnumValue",
                "src": "6815:11:43"
              },
              {
                "id": 34081,
                "name": "InsertionVerifierLookupTable",
                "nameLocation": "6836:28:43",
                "nodeType": "EnumValue",
                "src": "6836:28:43"
              },
              {
                "id": 34082,
                "name": "DeletionVerifierLookupTable",
                "nameLocation": "6874:27:43",
                "nodeType": "EnumValue",
                "src": "6874:27:43"
              },
              {
                "id": 34083,
                "name": "SemaphoreVerifier",
                "nameLocation": "6911:17:43",
                "nodeType": "EnumValue",
                "src": "6911:17:43"
              }
            ],
            "name": "Dependency",
            "nameLocation": "6794:10:43"
          },
          {
            "id": 34098,
            "nodeType": "FunctionDefinition",
            "src": "7325:120:43",
            "nodes": [],
            "body": {
              "id": 34097,
              "nodeType": "Block",
              "src": "7396:49:43",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307830",
                        "id": 34092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7422:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x0"
                      },
                      {
                        "hexValue": "307830",
                        "id": 34093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7427:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x0"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 34094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7432:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 34091,
                      "name": "RootInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34069,
                      "src": "7413:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_RootInfo_$34069_storage_ptr_$",
                        "typeString": "type(struct WorldIDIdentityManagerImplV1.RootInfo storage pointer)"
                      }
                    },
                    "id": 34095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7413:25:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RootInfo_$34069_memory_ptr",
                      "typeString": "struct WorldIDIdentityManagerImplV1.RootInfo memory"
                    }
                  },
                  "functionReturnParameters": 34090,
                  "id": 34096,
                  "nodeType": "Return",
                  "src": "7406:32:43"
                }
              ]
            },
            "documentation": {
              "id": 34085,
              "nodeType": "StructuredDocumentation",
              "src": "7193:127:43",
              "text": "@notice A constant representing a root that doesn't exist.\n @dev Can be checked against when querying for root data."
            },
            "functionSelector": "561f204b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "NO_SUCH_ROOT",
            "nameLocation": "7334:12:43",
            "parameters": {
              "id": 34086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7346:2:43"
            },
            "returnParameters": {
              "id": 34090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34089,
                  "mutability": "mutable",
                  "name": "rootInfo",
                  "nameLocation": "7386:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34098,
                  "src": "7370:24:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RootInfo_$34069_memory_ptr",
                    "typeString": "struct WorldIDIdentityManagerImplV1.RootInfo"
                  },
                  "typeName": {
                    "id": 34088,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34087,
                      "name": "RootInfo",
                      "nameLocations": [
                        "7370:8:43"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34069,
                      "src": "7370:8:43"
                    },
                    "referencedDeclaration": 34069,
                    "src": "7370:8:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RootInfo_$34069_storage_ptr",
                      "typeString": "struct WorldIDIdentityManagerImplV1.RootInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7369:26:43"
            },
            "scope": 34869,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34106,
            "nodeType": "ErrorDefinition",
            "src": "8163:74:43",
            "nodes": [],
            "documentation": {
              "id": 34099,
              "nodeType": "StructuredDocumentation",
              "src": "7704:454:43",
              "text": "@notice Thrown when encountering an element that should be reduced as a member of `Fr` but\n         is not.\n @dev `r` in this case is given by `SNARK_SCALAR_FIELD`.\n @param elementType The kind of element that was encountered unreduced.\n @param element The value of that element.\n @dev preserved for ABI backwards compatibility with V1, no longer used,\n all elements come out reduced from the circuit"
            },
            "errorSelector": "af1e1889",
            "name": "UnreducedElement",
            "nameLocation": "8169:16:43",
            "parameters": {
              "id": 34105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34102,
                  "mutability": "mutable",
                  "name": "elementType",
                  "nameLocation": "8207:11:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34106,
                  "src": "8186:32:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_UnreducedElementType_$34074",
                    "typeString": "enum WorldIDIdentityManagerImplV1.UnreducedElementType"
                  },
                  "typeName": {
                    "id": 34101,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34100,
                      "name": "UnreducedElementType",
                      "nameLocations": [
                        "8186:20:43"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34074,
                      "src": "8186:20:43"
                    },
                    "referencedDeclaration": 34074,
                    "src": "8186:20:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UnreducedElementType_$34074",
                      "typeString": "enum WorldIDIdentityManagerImplV1.UnreducedElementType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34104,
                  "mutability": "mutable",
                  "name": "element",
                  "nameLocation": "8228:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34106,
                  "src": "8220:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8220:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8185:51:43"
            }
          },
          {
            "id": 34111,
            "nodeType": "ErrorDefinition",
            "src": "8459:33:43",
            "nodes": [],
            "documentation": {
              "id": 34107,
              "nodeType": "StructuredDocumentation",
              "src": "8243:211:43",
              "text": "@notice Thrown when trying to execute a privileged action without being the contract\n         manager.\n @param user The user that attempted the action that they were not authorised for."
            },
            "errorSelector": "8e4a23d6",
            "name": "Unauthorized",
            "nameLocation": "8465:12:43",
            "parameters": {
              "id": 34110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34109,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "8486:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34111,
                  "src": "8478:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8478:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8477:14:43"
            }
          },
          {
            "id": 34116,
            "nodeType": "ErrorDefinition",
            "src": "9030:39:43",
            "nodes": [],
            "documentation": {
              "id": 34112,
              "nodeType": "StructuredDocumentation",
              "src": "8498:527:43",
              "text": "@notice Thrown when one or more of the identity commitments to be inserted is invalid.\n @param index The index in the array of identity commitments where the invalid commitment was\n        found.\n @dev This error is no longer in use as we now verify the commitments off-chain within the circuit\n no need to check for reduced elements or invalid commitments.\n @dev preserved for ABI backwards compatibility with V1, no longer used,\n all elements are validated by the circuit"
            },
            "errorSelector": "31e63ea0",
            "name": "InvalidCommitment",
            "nameLocation": "9036:17:43",
            "parameters": {
              "id": 34115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34114,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "9062:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34116,
                  "src": "9054:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9054:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9053:15:43"
            }
          },
          {
            "id": 34119,
            "nodeType": "ErrorDefinition",
            "src": "9170:31:43",
            "nodes": [],
            "documentation": {
              "id": 34117,
              "nodeType": "StructuredDocumentation",
              "src": "9075:90:43",
              "text": "@notice Thrown when the provided proof cannot be verified for the accompanying inputs."
            },
            "errorSelector": "1e716a8b",
            "name": "ProofValidationFailure",
            "nameLocation": "9176:22:43",
            "parameters": {
              "id": 34118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9198:2:43"
            }
          },
          {
            "id": 34126,
            "nodeType": "ErrorDefinition",
            "src": "9462:62:43",
            "nodes": [],
            "documentation": {
              "id": 34120,
              "nodeType": "StructuredDocumentation",
              "src": "9207:250:43",
              "text": "@notice Thrown when the provided root is not the very latest root.\n @param providedRoot The root that was provided as the `preRoot` for a transaction.\n @param latestRoot The actual latest root at the time of the transaction."
            },
            "errorSelector": "a85f9db2",
            "name": "NotLatestRoot",
            "nameLocation": "9468:13:43",
            "parameters": {
              "id": 34125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34122,
                  "mutability": "mutable",
                  "name": "providedRoot",
                  "nameLocation": "9490:12:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34126,
                  "src": "9482:20:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9482:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34124,
                  "mutability": "mutable",
                  "name": "latestRoot",
                  "nameLocation": "9512:10:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34126,
                  "src": "9504:18:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9504:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9481:42:43"
            }
          },
          {
            "id": 34129,
            "nodeType": "ErrorDefinition",
            "src": "9697:34:43",
            "nodes": [],
            "documentation": {
              "id": 34127,
              "nodeType": "StructuredDocumentation",
              "src": "9530:162:43",
              "text": "@notice Thrown when attempting to enable the bridge when it is already enabled.\n @dev preserved for ABI backwards compatibility with V1, no longer used"
            },
            "errorSelector": "963a8d4f",
            "name": "StateBridgeAlreadyEnabled",
            "nameLocation": "9703:25:43",
            "parameters": {
              "id": 34128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9728:2:43"
            }
          },
          {
            "id": 34132,
            "nodeType": "ErrorDefinition",
            "src": "9906:35:43",
            "nodes": [],
            "documentation": {
              "id": 34130,
              "nodeType": "StructuredDocumentation",
              "src": "9737:164:43",
              "text": "@notice Thrown when attempting to disable the bridge when it is already disabled.\n @dev preserved for ABI backwards compatibility with V1, no longer used"
            },
            "errorSelector": "c6b90a44",
            "name": "StateBridgeAlreadyDisabled",
            "nameLocation": "9912:26:43",
            "parameters": {
              "id": 34131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9938:2:43"
            }
          },
          {
            "id": 34135,
            "nodeType": "ErrorDefinition",
            "src": "10118:34:43",
            "nodes": [],
            "documentation": {
              "id": 34133,
              "nodeType": "StructuredDocumentation",
              "src": "9947:166:43",
              "text": "@notice Thrown when attempting to set the state bridge address to the zero address.\n @dev preserved for ABI backwards compatibility with V1, no longer used"
            },
            "errorSelector": "ed4cf557",
            "name": "InvalidStateBridgeAddress",
            "nameLocation": "10124:25:43",
            "parameters": {
              "id": 34134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10149:2:43"
            }
          },
          {
            "id": 34140,
            "nodeType": "ErrorDefinition",
            "src": "10273:40:43",
            "nodes": [],
            "documentation": {
              "id": 34136,
              "nodeType": "StructuredDocumentation",
              "src": "10158:110:43",
              "text": "@notice Thrown when Semaphore tree depth is not supported.\n @param depth Passed tree depth."
            },
            "errorSelector": "8833b8c0",
            "name": "UnsupportedTreeDepth",
            "nameLocation": "10279:20:43",
            "parameters": {
              "id": 34139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34138,
                  "mutability": "mutable",
                  "name": "depth",
                  "nameLocation": "10306:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34140,
                  "src": "10300:11:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 34137,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "10300:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10299:13:43"
            }
          },
          {
            "id": 34143,
            "nodeType": "ErrorDefinition",
            "src": "10499:31:43",
            "nodes": [],
            "documentation": {
              "id": 34141,
              "nodeType": "StructuredDocumentation",
              "src": "10319:175:43",
              "text": "@notice Thrown when the inputs to `removeIdentities` do not match in\n         length.\n @dev preserved for ABI backwards compatibility with V1, no longer used"
            },
            "errorSelector": "a0b1d72d",
            "name": "MismatchedInputLengths",
            "nameLocation": "10505:22:43",
            "parameters": {
              "id": 34142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10527:2:43"
            }
          },
          {
            "id": 34146,
            "nodeType": "ErrorDefinition",
            "src": "10613:24:43",
            "nodes": [],
            "documentation": {
              "id": 34144,
              "nodeType": "StructuredDocumentation",
              "src": "10536:72:43",
              "text": "@notice Thrown when a verifier is initialized to be the zero address"
            },
            "errorSelector": "baa3de5f",
            "name": "InvalidVerifier",
            "nameLocation": "10619:15:43",
            "parameters": {
              "id": 34145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10634:2:43"
            }
          },
          {
            "id": 34149,
            "nodeType": "ErrorDefinition",
            "src": "10733:27:43",
            "nodes": [],
            "documentation": {
              "id": 34147,
              "nodeType": "StructuredDocumentation",
              "src": "10643:85:43",
              "text": "@notice Thrown when a verifier lookup table is initialized to be the zero address"
            },
            "errorSelector": "4fdab253",
            "name": "InvalidVerifierLUT",
            "nameLocation": "10739:18:43",
            "parameters": {
              "id": 34148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10757:2:43"
            }
          },
          {
            "id": 34159,
            "nodeType": "EventDefinition",
            "src": "11356:94:43",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 34150,
              "nodeType": "StructuredDocumentation",
              "src": "11019:332:43",
              "text": "@notice Emitted when the current root of the tree is updated.\n @param preRoot The value of the tree's root before the update.\n @param kind Either \"insertion\" or \"update\", the kind of alteration that was made to the\n        tree.\n @param postRoot The value of the tree's root after the update."
            },
            "eventSelector": "25f6d5cc356ee0b49cf708c13c68197947f5740a878a298765e4b18e4afdaf04",
            "name": "TreeChanged",
            "nameLocation": "11362:11:43",
            "parameters": {
              "id": 34158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34152,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "preRoot",
                  "nameLocation": "11390:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34159,
                  "src": "11374:23:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11374:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34155,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "kind",
                  "nameLocation": "11418:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34159,
                  "src": "11399:23:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_TreeChange_$34078",
                    "typeString": "enum WorldIDIdentityManagerImplV1.TreeChange"
                  },
                  "typeName": {
                    "id": 34154,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34153,
                      "name": "TreeChange",
                      "nameLocations": [
                        "11399:10:43"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34078,
                      "src": "11399:10:43"
                    },
                    "referencedDeclaration": 34078,
                    "src": "11399:10:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_TreeChange_$34078",
                      "typeString": "enum WorldIDIdentityManagerImplV1.TreeChange"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34157,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "postRoot",
                  "nameLocation": "11440:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34159,
                  "src": "11424:24:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11424:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11373:76:43"
            }
          },
          {
            "id": 34169,
            "nodeType": "EventDefinition",
            "src": "11733:119:43",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 34160,
              "nodeType": "StructuredDocumentation",
              "src": "11456:272:43",
              "text": "@notice Emitted when a dependency's address is updated via an admin action.\n @param kind The kind of dependency that was updated.\n @param oldAddress The old address of that dependency.\n @param newAddress The new address of that dependency."
            },
            "eventSelector": "d194b8423e9cb3c7cbebbbc3fe7f79dc2cbe0b40e03270d975abff491504c7b1",
            "name": "DependencyUpdated",
            "nameLocation": "11739:17:43",
            "parameters": {
              "id": 34168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34163,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "kind",
                  "nameLocation": "11785:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34169,
                  "src": "11766:23:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Dependency_$34084",
                    "typeString": "enum WorldIDIdentityManagerImplV1.Dependency"
                  },
                  "typeName": {
                    "id": 34162,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34161,
                      "name": "Dependency",
                      "nameLocations": [
                        "11766:10:43"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34084,
                      "src": "11766:10:43"
                    },
                    "referencedDeclaration": 34084,
                    "src": "11766:10:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Dependency_$34084",
                      "typeString": "enum WorldIDIdentityManagerImplV1.Dependency"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34165,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oldAddress",
                  "nameLocation": "11807:10:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34169,
                  "src": "11791:26:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11791:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34167,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "11835:10:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34169,
                  "src": "11819:26:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11819:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11756:95:43"
            }
          },
          {
            "id": 34174,
            "nodeType": "EventDefinition",
            "src": "12144:53:43",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 34170,
              "nodeType": "StructuredDocumentation",
              "src": "11858:281:43",
              "text": "@notice Emitted when the state bridge is enabled or disabled.\n @param isEnabled Set to `true` if the event comes from the state bridge being enabled,\n        `false` otherwise.\n @dev preserved for ABI backwards compatibility with V1, no longer used"
            },
            "eventSelector": "c2481c150ab648d8248c5a0b452a12da07a6a26d8e11b0ed6cee10375e14d5e4",
            "name": "StateBridgeStateChange",
            "nameLocation": "12150:22:43",
            "parameters": {
              "id": 34173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34172,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "isEnabled",
                  "nameLocation": "12186:9:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34174,
                  "src": "12173:22:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34171,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12173:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12172:24:43"
            }
          },
          {
            "id": 34181,
            "nodeType": "EventDefinition",
            "src": "12410:89:43",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 34175,
              "nodeType": "StructuredDocumentation",
              "src": "12203:202:43",
              "text": "@notice Emitted when the root history expiry time is changed.\n @param oldExpiryTime The expiry time prior to the change.\n @param newExpiryTime The expiry time after the change."
            },
            "eventSelector": "f62a6f06fde00a303cd5939e6b53762854412c96a196cda26720cedd28af9e70",
            "name": "RootHistoryExpirySet",
            "nameLocation": "12416:20:43",
            "parameters": {
              "id": 34180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34177,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oldExpiryTime",
                  "nameLocation": "12453:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34181,
                  "src": "12437:29:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12437:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34179,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newExpiryTime",
                  "nameLocation": "12484:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34181,
                  "src": "12468:29:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12468:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12436:62:43"
            }
          },
          {
            "id": 34188,
            "nodeType": "EventDefinition",
            "src": "12714:88:43",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 34182,
              "nodeType": "StructuredDocumentation",
              "src": "12505:204:43",
              "text": "@notice Emitted when the identity operator is changed.\n @param oldOperator The address of the old identity operator.\n @param newOperator The address of the new identity operator."
            },
            "eventSelector": "5a674c516c196404869e5f502b5634ce442416bb016dde54b5de4c812cc019e6",
            "name": "IdentityOperatorChanged",
            "nameLocation": "12720:23:43",
            "parameters": {
              "id": 34187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34184,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oldOperator",
                  "nameLocation": "12760:11:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34188,
                  "src": "12744:27:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12744:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34186,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOperator",
                  "nameLocation": "12789:11:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34188,
                  "src": "12773:27:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12773:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12743:58:43"
            }
          },
          {
            "id": 34195,
            "nodeType": "EventDefinition",
            "src": "13101:83:43",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 34189,
              "nodeType": "StructuredDocumentation",
              "src": "12885:211:43",
              "text": "@param _treeDepth The depth of the MerkeTree\n @param initialRoot The initial value for the `latestRoot` in the contract. When deploying\n        this should be set to the root of the empty tree."
            },
            "eventSelector": "d1bcc66c061c32a21f569d138c2dadef4a38a0636309881954af5f44010ec1d8",
            "name": "WorldIDIdentityManagerImplInitialized",
            "nameLocation": "13107:37:43",
            "parameters": {
              "id": 34194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34191,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_treeDepth",
                  "nameLocation": "13151:10:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34195,
                  "src": "13145:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 34190,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13145:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34193,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "initialRoot",
                  "nameLocation": "13171:11:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34195,
                  "src": "13163:19:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13163:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13144:39:43"
            }
          },
          {
            "id": 34203,
            "nodeType": "FunctionDefinition",
            "src": "13484:281:43",
            "nodes": [],
            "body": {
              "id": 34202,
              "nodeType": "Block",
              "src": "13498:267:43",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34199,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29782,
                      "src": "13736:20:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 34200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13736:22:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34201,
                  "nodeType": "ExpressionStatement",
                  "src": "13736:22:43"
                }
              ]
            },
            "documentation": {
              "id": 34196,
              "nodeType": "StructuredDocumentation",
              "src": "13443:36:43",
              "text": "@notice Constructs the contract."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 34197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13495:2:43"
            },
            "returnParameters": {
              "id": 34198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13498:0:43"
            },
            "scope": 34869,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34317,
            "nodeType": "FunctionDefinition",
            "src": "15045:1346:43",
            "nodes": [],
            "body": {
              "id": 34316,
              "nodeType": "Block",
              "src": "15302:1089:43",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 34231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 34225,
                          "name": "_batchInsertionVerifiers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34211,
                          "src": "15324:24:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                            "typeString": "contract VerifierLookupTable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                            "typeString": "contract VerifierLookupTable"
                          }
                        ],
                        "id": 34224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15316:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34223,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15316:7:43",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15316:33:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 34229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15361:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 34228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15353:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34227,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15353:7:43",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15353:10:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15316:47:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34236,
                  "nodeType": "IfStatement",
                  "src": "15312:105:43",
                  "trueBody": {
                    "id": 34235,
                    "nodeType": "Block",
                    "src": "15365:52:43",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 34232,
                            "name": "InvalidVerifierLUT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34149,
                            "src": "15386:18:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 34233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15386:20:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34234,
                        "nodeType": "RevertStatement",
                        "src": "15379:27:43"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 34245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 34239,
                          "name": "_batchUpdateVerifiers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34214,
                          "src": "15439:21:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                            "typeString": "contract VerifierLookupTable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                            "typeString": "contract VerifierLookupTable"
                          }
                        ],
                        "id": 34238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15431:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34237,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15431:7:43",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15431:30:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 34243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15473:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 34242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15465:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34241,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15465:7:43",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15465:10:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15431:44:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34250,
                  "nodeType": "IfStatement",
                  "src": "15427:102:43",
                  "trueBody": {
                    "id": 34249,
                    "nodeType": "Block",
                    "src": "15477:52:43",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 34246,
                            "name": "InvalidVerifierLUT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34149,
                            "src": "15498:18:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 34247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15498:20:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34248,
                        "nodeType": "RevertStatement",
                        "src": "15491:27:43"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 34259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 34253,
                          "name": "_semaphoreVerifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34217,
                          "src": "15551:18:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                            "typeString": "contract ISemaphoreVerifier"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                            "typeString": "contract ISemaphoreVerifier"
                          }
                        ],
                        "id": 34252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15543:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15543:7:43",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15543:27:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 34257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15582:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 34256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15574:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34255,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15574:7:43",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15574:10:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15543:41:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34264,
                  "nodeType": "IfStatement",
                  "src": "15539:96:43",
                  "trueBody": {
                    "id": 34263,
                    "nodeType": "Block",
                    "src": "15586:49:43",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 34260,
                            "name": "InvalidVerifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34146,
                            "src": "15607:15:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 34261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15607:17:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34262,
                        "nodeType": "RevertStatement",
                        "src": "15600:24:43"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34265,
                      "name": "__delegateInit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34327,
                      "src": "15719:14:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 34266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15719:16:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34267,
                  "nodeType": "ExpressionStatement",
                  "src": "15719:16:43"
                },
                {
                  "condition": {
                    "id": 34272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "15750:49:43",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 34270,
                          "name": "_treeDepth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34206,
                          "src": "15788:10:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "expression": {
                          "id": 34268,
                          "name": "SemaphoreTreeDepthValidator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48479,
                          "src": "15751:27:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SemaphoreTreeDepthValidator_$48479_$",
                            "typeString": "type(library SemaphoreTreeDepthValidator)"
                          }
                        },
                        "id": 34269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15779:8:43",
                        "memberName": "validate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48478,
                        "src": "15751:36:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$returns$_t_bool_$",
                          "typeString": "function (uint8) pure returns (bool)"
                        }
                      },
                      "id": 34271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15751:48:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34278,
                  "nodeType": "IfStatement",
                  "src": "15746:119:43",
                  "trueBody": {
                    "id": 34277,
                    "nodeType": "Block",
                    "src": "15801:64:43",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 34274,
                              "name": "_treeDepth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34206,
                              "src": "15843:10:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 34273,
                            "name": "UnsupportedTreeDepth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34140,
                            "src": "15822:20:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint8_$returns$__$",
                              "typeString": "function (uint8) pure"
                            }
                          },
                          "id": 34275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15822:32:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34276,
                        "nodeType": "RevertStatement",
                        "src": "15815:39:43"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 34281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34279,
                      "name": "treeDepth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34061,
                      "src": "15932:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 34280,
                      "name": "_treeDepth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34206,
                      "src": "15944:10:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "15932:22:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 34282,
                  "nodeType": "ExpressionStatement",
                  "src": "15932:22:43"
                },
                {
                  "expression": {
                    "id": 34285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34283,
                      "name": "rootHistoryExpiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34032,
                      "src": "15964:17:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 34284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15984:7:43",
                      "subdenomination": "hours",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3600_by_1",
                        "typeString": "int_const 3600"
                      },
                      "value": "1"
                    },
                    "src": "15964:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34286,
                  "nodeType": "ExpressionStatement",
                  "src": "15964:27:43"
                },
                {
                  "expression": {
                    "id": 34289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34287,
                      "name": "_latestRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34024,
                      "src": "16001:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 34288,
                      "name": "initialRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34208,
                      "src": "16015:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16001:25:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34290,
                  "nodeType": "ExpressionStatement",
                  "src": "16001:25:43"
                },
                {
                  "expression": {
                    "id": 34293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34291,
                      "name": "batchInsertionVerifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34043,
                      "src": "16036:23:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                        "typeString": "contract VerifierLookupTable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 34292,
                      "name": "_batchInsertionVerifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34211,
                      "src": "16062:24:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                        "typeString": "contract VerifierLookupTable"
                      }
                    },
                    "src": "16036:50:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                      "typeString": "contract VerifierLookupTable"
                    }
                  },
                  "id": 34294,
                  "nodeType": "ExpressionStatement",
                  "src": "16036:50:43"
                },
                {
                  "expression": {
                    "id": 34297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34295,
                      "name": "identityUpdateVerifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34047,
                      "src": "16096:23:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                        "typeString": "contract VerifierLookupTable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 34296,
                      "name": "_batchUpdateVerifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34214,
                      "src": "16122:21:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                        "typeString": "contract VerifierLookupTable"
                      }
                    },
                    "src": "16096:47:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                      "typeString": "contract VerifierLookupTable"
                    }
                  },
                  "id": 34298,
                  "nodeType": "ExpressionStatement",
                  "src": "16096:47:43"
                },
                {
                  "expression": {
                    "id": 34301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34299,
                      "name": "semaphoreVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34051,
                      "src": "16153:17:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                        "typeString": "contract ISemaphoreVerifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 34300,
                      "name": "_semaphoreVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34217,
                      "src": "16173:18:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                        "typeString": "contract ISemaphoreVerifier"
                      }
                    },
                    "src": "16153:38:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                      "typeString": "contract ISemaphoreVerifier"
                    }
                  },
                  "id": 34302,
                  "nodeType": "ExpressionStatement",
                  "src": "16153:38:43"
                },
                {
                  "expression": {
                    "id": 34306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34303,
                      "name": "_identityOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34021,
                      "src": "16201:17:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34304,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29166,
                        "src": "16221:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 34305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16221:7:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16201:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34307,
                  "nodeType": "ExpressionStatement",
                  "src": "16201:27:43"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34308,
                      "name": "__setInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48432,
                      "src": "16288:16:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 34309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16288:18:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34310,
                  "nodeType": "ExpressionStatement",
                  "src": "16288:18:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 34312,
                        "name": "_treeDepth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34206,
                        "src": "16360:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 34313,
                        "name": "initialRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34208,
                        "src": "16372:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34311,
                      "name": "WorldIDIdentityManagerImplInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34195,
                      "src": "16322:37:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_uint256_$returns$__$",
                        "typeString": "function (uint8,uint256)"
                      }
                    },
                    "id": 34314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16322:62:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34315,
                  "nodeType": "EmitStatement",
                  "src": "16317:67:43"
                }
              ]
            },
            "documentation": {
              "id": 34204,
              "nodeType": "StructuredDocumentation",
              "src": "13771:1269:43",
              "text": "@notice Initializes the contract.\n @dev Must be called exactly once.\n @dev This is marked `reinitializer()` to allow for updated initialisation steps when working\n      with upgrades based upon this contract. Be aware that there are only 256 (zero-indexed)\n      initialisations allowed, so decide carefully when to use them. Many cases can safely be\n      replaced by use of setters.\n @dev This function is explicitly not virtual as it does not make sense to override even when\n      upgrading. Create a separate initializer function instead.\n @param _treeDepth The depth of the MerkeTree\n @param initialRoot The initial value for the `latestRoot` in the contract. When deploying\n        this should be set to the root of the empty tree.\n @param _batchInsertionVerifiers The verifier lookup table for batch insertions.\n @param _batchUpdateVerifiers The verifier lookup table for batch updates.\n @param _semaphoreVerifier The verifier to use for semaphore protocol proofs.\n @custom:reverts string If called more than once at the same initialisation number.\n @custom:reverts UnsupportedTreeDepth If passed tree depth is not among defined values."
            },
            "functionSelector": "38c87065",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "31",
                    "id": 34220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15299:1:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  }
                ],
                "id": 34221,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34219,
                  "name": "reinitializer",
                  "nameLocations": [
                    "15285:13:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29736,
                  "src": "15285:13:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "15285:16:43"
              }
            ],
            "name": "initialize",
            "nameLocation": "15054:10:43",
            "parameters": {
              "id": 34218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34206,
                  "mutability": "mutable",
                  "name": "_treeDepth",
                  "nameLocation": "15080:10:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34317,
                  "src": "15074:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 34205,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "15074:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34208,
                  "mutability": "mutable",
                  "name": "initialRoot",
                  "nameLocation": "15108:11:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34317,
                  "src": "15100:19:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15100:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34211,
                  "mutability": "mutable",
                  "name": "_batchInsertionVerifiers",
                  "nameLocation": "15149:24:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34317,
                  "src": "15129:44:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                    "typeString": "contract VerifierLookupTable"
                  },
                  "typeName": {
                    "id": 34210,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34209,
                      "name": "VerifierLookupTable",
                      "nameLocations": [
                        "15129:19:43"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35388,
                      "src": "15129:19:43"
                    },
                    "referencedDeclaration": 35388,
                    "src": "15129:19:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                      "typeString": "contract VerifierLookupTable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34214,
                  "mutability": "mutable",
                  "name": "_batchUpdateVerifiers",
                  "nameLocation": "15203:21:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34317,
                  "src": "15183:41:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                    "typeString": "contract VerifierLookupTable"
                  },
                  "typeName": {
                    "id": 34213,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34212,
                      "name": "VerifierLookupTable",
                      "nameLocations": [
                        "15183:19:43"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35388,
                      "src": "15183:19:43"
                    },
                    "referencedDeclaration": 35388,
                    "src": "15183:19:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                      "typeString": "contract VerifierLookupTable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34217,
                  "mutability": "mutable",
                  "name": "_semaphoreVerifier",
                  "nameLocation": "15253:18:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34317,
                  "src": "15234:37:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                    "typeString": "contract ISemaphoreVerifier"
                  },
                  "typeName": {
                    "id": 34216,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34215,
                      "name": "ISemaphoreVerifier",
                      "nameLocations": [
                        "15234:18:43"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35429,
                      "src": "15234:18:43"
                    },
                    "referencedDeclaration": 35429,
                    "src": "15234:18:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                      "typeString": "contract ISemaphoreVerifier"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15064:213:43"
            },
            "returnParameters": {
              "id": 34222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15302:0:43"
            },
            "scope": 34869,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34327,
            "nodeType": "FunctionDefinition",
            "src": "16725:97:43",
            "nodes": [],
            "body": {
              "id": 34326,
              "nodeType": "Block",
              "src": "16785:37:43",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34323,
                      "name": "__WorldIDImpl_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35126,
                      "src": "16795:18:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 34324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16795:20:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34325,
                  "nodeType": "ExpressionStatement",
                  "src": "16795:20:43"
                }
              ]
            },
            "documentation": {
              "id": 34318,
              "nodeType": "StructuredDocumentation",
              "src": "16397:323:43",
              "text": "@notice Responsible for initialising all of the supertypes of this contract.\n @dev Must be called exactly once.\n @dev When adding new superclasses, ensure that any initialization that they need to perform\n      is accounted for here.\n @custom:reverts string If called more than once."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34321,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34320,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "16768:16:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29746,
                  "src": "16768:16:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "16768:16:43"
              }
            ],
            "name": "__delegateInit",
            "nameLocation": "16734:14:43",
            "parameters": {
              "id": 34319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16748:2:43"
            },
            "returnParameters": {
              "id": 34322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16785:0:43"
            },
            "scope": 34869,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 34432,
            "nodeType": "FunctionDefinition",
            "src": "19019:2122:43",
            "nodes": [],
            "body": {
              "id": 34431,
              "nodeType": "Block",
              "src": "19285:1856:43",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34350,
                      "name": "preRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34334,
                      "src": "19299:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 34351,
                      "name": "_latestRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34024,
                      "src": "19310:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19299:22:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34359,
                  "nodeType": "IfStatement",
                  "src": "19295:95:43",
                  "trueBody": {
                    "id": 34358,
                    "nodeType": "Block",
                    "src": "19323:67:43",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 34354,
                              "name": "preRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34334,
                              "src": "19358:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 34355,
                              "name": "_latestRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34024,
                              "src": "19367:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 34353,
                            "name": "NotLatestRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34126,
                            "src": "19344:13:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) pure"
                            }
                          },
                          "id": 34356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19344:35:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34357,
                        "nodeType": "RevertStatement",
                        "src": "19337:42:43"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    34361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34361,
                      "mutability": "mutable",
                      "name": "inputHash",
                      "nameLocation": "19488:9:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 34431,
                      "src": "19480:17:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 34360,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19480:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34368,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34363,
                        "name": "startIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34336,
                        "src": "19552:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 34364,
                        "name": "preRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34334,
                        "src": "19564:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34365,
                        "name": "postRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34341,
                        "src": "19573:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34366,
                        "name": "identityCommitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34339,
                        "src": "19583:19:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "id": 34362,
                      "name": "calculateIdentityRegistrationInputHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34468,
                      "src": "19500:38:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint32_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint32,uint256,uint256,uint256[] calldata) view returns (bytes32)"
                      }
                    },
                    "id": 34367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19500:112:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19480:132:43"
                },
                {
                  "assignments": [
                    34370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34370,
                      "mutability": "mutable",
                      "name": "reducedElement",
                      "nameLocation": "19919:14:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 34431,
                      "src": "19911:22:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34369,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19911:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34377,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 34373,
                          "name": "inputHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34361,
                          "src": "19944:9:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 34372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "19936:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 34371,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19936:7:43",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19936:18:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "id": 34375,
                      "name": "SNARK_SCALAR_FIELD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34036,
                      "src": "19957:18:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19936:39:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19911:64:43"
                },
                {
                  "assignments": [
                    34380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34380,
                      "mutability": "mutable",
                      "name": "insertionVerifier",
                      "nameLocation": "20073:17:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 34431,
                      "src": "20059:31:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITreeVerifier_$35445",
                        "typeString": "contract ITreeVerifier"
                      },
                      "typeName": {
                        "id": 34379,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34378,
                          "name": "ITreeVerifier",
                          "nameLocations": [
                            "20059:13:43"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35445,
                          "src": "20059:13:43"
                        },
                        "referencedDeclaration": 35445,
                        "src": "20059:13:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITreeVerifier_$35445",
                          "typeString": "contract ITreeVerifier"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34386,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34383,
                          "name": "identityCommitments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34339,
                          "src": "20144:19:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        "id": 34384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20164:6:43",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "20144:26:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34381,
                        "name": "batchInsertionVerifiers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34043,
                        "src": "20105:23:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                          "typeString": "contract VerifierLookupTable"
                        }
                      },
                      "id": 34382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20129:14:43",
                      "memberName": "getVerifierFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35260,
                      "src": "20105:38:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_ITreeVerifier_$35445_$",
                        "typeString": "function (uint256) view external returns (contract ITreeVerifier)"
                      }
                    },
                    "id": 34385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20105:66:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITreeVerifier_$35445",
                      "typeString": "contract ITreeVerifier"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20059:112:43"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 34414,
                        "nodeType": "Block",
                        "src": "20304:466:43",
                        "statements": [
                          {
                            "expression": {
                              "id": 34395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 34393,
                                "name": "_latestRoot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34024,
                                "src": "20472:11:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 34394,
                                "name": "postRoot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34341,
                                "src": "20486:8:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "20472:22:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 34396,
                            "nodeType": "ExpressionStatement",
                            "src": "20472:22:43"
                          },
                          {
                            "expression": {
                              "id": 34405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 34397,
                                  "name": "rootHistory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34029,
                                  "src": "20640:11:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint128_$",
                                    "typeString": "mapping(uint256 => uint128)"
                                  }
                                },
                                "id": 34399,
                                "indexExpression": {
                                  "id": 34398,
                                  "name": "preRoot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34334,
                                  "src": "20652:7:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "20640:20:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 34402,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "20671:5:43",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 34403,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "20677:9:43",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "20671:15:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 34401,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "20663:7:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint128_$",
                                    "typeString": "type(uint128)"
                                  },
                                  "typeName": {
                                    "id": 34400,
                                    "name": "uint128",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20663:7:43",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 34404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20663:24:43",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "src": "20640:47:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "id": 34406,
                            "nodeType": "ExpressionStatement",
                            "src": "20640:47:43"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "id": 34408,
                                  "name": "preRoot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34334,
                                  "src": "20719:7:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 34409,
                                    "name": "TreeChange",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34078,
                                    "src": "20728:10:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_TreeChange_$34078_$",
                                      "typeString": "type(enum WorldIDIdentityManagerImplV1.TreeChange)"
                                    }
                                  },
                                  "id": 34410,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "20739:9:43",
                                  "memberName": "Insertion",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 34076,
                                  "src": "20728:20:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_TreeChange_$34078",
                                    "typeString": "enum WorldIDIdentityManagerImplV1.TreeChange"
                                  }
                                },
                                {
                                  "id": 34411,
                                  "name": "postRoot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34341,
                                  "src": "20750:8:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_TreeChange_$34078",
                                    "typeString": "enum WorldIDIdentityManagerImplV1.TreeChange"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 34407,
                                "name": "TreeChanged",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34159,
                                "src": "20707:11:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_TreeChange_$34078_$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256,enum WorldIDIdentityManagerImplV1.TreeChange,uint256)"
                                }
                              },
                              "id": 34412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20707:52:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 34413,
                            "nodeType": "EmitStatement",
                            "src": "20702:57:43"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 34415,
                      "nodeType": "TryCatchClause",
                      "src": "20304:466:43"
                    },
                    {
                      "block": {
                        "id": 34423,
                        "nodeType": "Block",
                        "src": "20808:100:43",
                        "statements": [
                          {
                            "documentation": "This is not the revert we're looking for.",
                            "expression": {
                              "arguments": [
                                {
                                  "id": 34420,
                                  "name": "errString",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34417,
                                  "src": "20887:9:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 34419,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "20880:6:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 34421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20880:17:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 34422,
                            "nodeType": "ExpressionStatement",
                            "src": "20880:17:43"
                          }
                        ]
                      },
                      "errorName": "Error",
                      "id": 34424,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 34418,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 34417,
                            "mutability": "mutable",
                            "name": "errString",
                            "nameLocation": "20797:9:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 34424,
                            "src": "20783:23:43",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 34416,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "20783:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "20782:25:43"
                      },
                      "src": "20771:137:43"
                    },
                    {
                      "block": {
                        "id": 34428,
                        "nodeType": "Block",
                        "src": "20915:220:43",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 34425,
                                "name": "ProofValidationFailure",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34119,
                                "src": "21100:22:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 34426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21100:24:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 34427,
                            "nodeType": "RevertStatement",
                            "src": "21093:31:43"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 34429,
                      "nodeType": "TryCatchClause",
                      "src": "20909:226:43"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 34389,
                        "name": "insertionProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34332,
                        "src": "20270:14:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                          "typeString": "uint256[8] calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 34390,
                            "name": "reducedElement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34370,
                            "src": "20287:14:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 34391,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "20286:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                          "typeString": "uint256[1] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                          "typeString": "uint256[8] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                          "typeString": "uint256[1] memory"
                        }
                      ],
                      "expression": {
                        "id": 34387,
                        "name": "insertionVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34380,
                        "src": "20240:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITreeVerifier_$35445",
                          "typeString": "contract ITreeVerifier"
                        }
                      },
                      "id": 34388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20258:11:43",
                      "memberName": "verifyProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35444,
                      "src": "20240:29:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$8_memory_ptr_$_t_array$_t_uint256_$1_memory_ptr_$returns$__$",
                        "typeString": "function (uint256[8] memory,uint256[1] memory) external"
                      }
                    },
                    "id": 34392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20240:63:43",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34430,
                  "nodeType": "TryStatement",
                  "src": "20236:899:43"
                }
              ]
            },
            "documentation": {
              "id": 34328,
              "nodeType": "StructuredDocumentation",
              "src": "18036:978:43",
              "text": "@param startIndex The position in the tree at which the insertions were made.\n @param identityCommitments The identities that were inserted into the tree starting at\n        `startIndex` and `preRoot` to give `postRoot`. All of the commitments must be\n        elements of the field `Kr`.\n @param postRoot The root obtained after inserting all of `identityCommitments` into the tree\n        described by `preRoot`. Must be an element of the field `Kr`. (alread in reduced form)\n @custom:reverts Unauthorized If the message sender is not authorised to add identities.\n @custom:reverts NotLatestRoot If the provided `preRoot` is not the latest root.\n @custom:reverts ProofValidationFailure If `insertionProof` cannot be verified using the\n                 provided inputs.\n @custom:reverts VerifierLookupTable.NoSuchVerifier If the batch sizes doesn't match a known\n                 verifier."
            },
            "functionSelector": "2217b211",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34344,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34343,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "19238:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "19238:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "19238:9:43"
              },
              {
                "id": 34346,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34345,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "19248:15:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48444,
                  "src": "19248:15:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "19248:15:43"
              },
              {
                "id": 34348,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34347,
                  "name": "onlyIdentityOperator",
                  "nameLocations": [
                    "19264:20:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34868,
                  "src": "19264:20:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "19264:20:43"
              }
            ],
            "name": "registerIdentities",
            "nameLocation": "19028:18:43",
            "parameters": {
              "id": 34342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34332,
                  "mutability": "mutable",
                  "name": "insertionProof",
                  "nameLocation": "19076:14:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34432,
                  "src": "19056:34:43",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                    "typeString": "uint256[8]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34329,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "19056:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34331,
                    "length": {
                      "hexValue": "38",
                      "id": 34330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19064:1:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "19056:10:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
                      "typeString": "uint256[8]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34334,
                  "mutability": "mutable",
                  "name": "preRoot",
                  "nameLocation": "19108:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34432,
                  "src": "19100:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19100:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34336,
                  "mutability": "mutable",
                  "name": "startIndex",
                  "nameLocation": "19132:10:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34432,
                  "src": "19125:17:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 34335,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "19125:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34339,
                  "mutability": "mutable",
                  "name": "identityCommitments",
                  "nameLocation": "19171:19:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34432,
                  "src": "19152:38:43",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34337,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "19152:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34338,
                    "nodeType": "ArrayTypeName",
                    "src": "19152:9:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34341,
                  "mutability": "mutable",
                  "name": "postRoot",
                  "nameLocation": "19208:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34432,
                  "src": "19200:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19200:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19046:176:43"
            },
            "returnParameters": {
              "id": 34349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19285:0:43"
            },
            "scope": 34869,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 34468,
            "nodeType": "FunctionDefinition",
            "src": "22271:413:43",
            "nodes": [],
            "body": {
              "id": 34467,
              "nodeType": "Block",
              "src": "22520:164:43",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34452
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34452,
                      "mutability": "mutable",
                      "name": "bytesToHash",
                      "nameLocation": "22543:11:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 34467,
                      "src": "22530:24:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 34451,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "22530:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34460,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34455,
                        "name": "startIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34435,
                        "src": "22586:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 34456,
                        "name": "preRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34437,
                        "src": "22598:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34457,
                        "name": "postRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34439,
                        "src": "22607:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34458,
                        "name": "identityCommitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34442,
                        "src": "22617:19:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 34453,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "22569:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 34454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "22573:12:43",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "22569:16:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 34459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22569:68:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22530:107:43"
                },
                {
                  "expression": {
                    "id": 34465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34461,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34449,
                      "src": "22648:4:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 34463,
                          "name": "bytesToHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34452,
                          "src": "22665:11:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 34462,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "22655:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 34464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22655:22:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "22648:29:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 34466,
                  "nodeType": "ExpressionStatement",
                  "src": "22648:29:43"
                }
              ]
            },
            "documentation": {
              "id": 34433,
              "nodeType": "StructuredDocumentation",
              "src": "21400:866:43",
              "text": "@notice Calculates the input hash for the identity registration verifier.\n @dev Implements the computation described below.\n @param startIndex The index in the tree from which inserting started.\n @param preRoot The root value of the tree before these insertions were made.\n @param postRoot The root value of the tree after these insertions were made.\n @param identityCommitments The identities that were added to the tree to produce `postRoot`.\n @return hash The input hash calculated as described below.\n We keccak hash all input to save verification gas. Inputs are arranged as follows:\n StartIndex || PreRoot || PostRoot || IdComms[0] || IdComms[1] || ... || IdComms[batchSize-1]\n     32\t   ||   256   ||   256    ||    256     ||    256     || ... ||     256 bits"
            },
            "functionSelector": "8c76a909",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34445,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34444,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "22471:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "22471:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "22471:9:43"
              },
              {
                "id": 34447,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34446,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "22481:15:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48444,
                  "src": "22481:15:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "22481:15:43"
              }
            ],
            "name": "calculateIdentityRegistrationInputHash",
            "nameLocation": "22280:38:43",
            "parameters": {
              "id": 34443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34435,
                  "mutability": "mutable",
                  "name": "startIndex",
                  "nameLocation": "22335:10:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34468,
                  "src": "22328:17:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 34434,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22328:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34437,
                  "mutability": "mutable",
                  "name": "preRoot",
                  "nameLocation": "22363:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34468,
                  "src": "22355:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22355:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34439,
                  "mutability": "mutable",
                  "name": "postRoot",
                  "nameLocation": "22388:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34468,
                  "src": "22380:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34438,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22380:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34442,
                  "mutability": "mutable",
                  "name": "identityCommitments",
                  "nameLocation": "22425:19:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34468,
                  "src": "22406:38:43",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34440,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "22406:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34441,
                    "nodeType": "ArrayTypeName",
                    "src": "22406:9:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22318:132:43"
            },
            "returnParameters": {
              "id": 34450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34449,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "22514:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34468,
                  "src": "22506:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 34448,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22506:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22505:14:43"
            },
            "scope": 34869,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 34481,
            "nodeType": "FunctionDefinition",
            "src": "22812:121:43",
            "nodes": [],
            "body": {
              "id": 34480,
              "nodeType": "Block",
              "src": "22898:35:43",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 34478,
                    "name": "_latestRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34024,
                    "src": "22915:11:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34477,
                  "id": 34479,
                  "nodeType": "Return",
                  "src": "22908:18:43"
                }
              ]
            },
            "documentation": {
              "id": 34469,
              "nodeType": "StructuredDocumentation",
              "src": "22690:117:43",
              "text": "@notice Allows a caller to query the latest root.\n @return root The value of the latest tree root."
            },
            "functionSelector": "d7b0fef1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34472,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34471,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "22854:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "22854:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "22854:9:43"
              },
              {
                "id": 34474,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34473,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "22864:15:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48444,
                  "src": "22864:15:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "22864:15:43"
              }
            ],
            "name": "latestRoot",
            "nameLocation": "22821:10:43",
            "parameters": {
              "id": 34470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22831:2:43"
            },
            "returnParameters": {
              "id": 34477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34476,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34481,
                  "src": "22889:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22889:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22888:9:43"
            },
            "scope": 34869,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 34538,
            "nodeType": "FunctionDefinition",
            "src": "23429:567:43",
            "nodes": [],
            "body": {
              "id": 34537,
              "nodeType": "Block",
              "src": "23586:410:43",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34494,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34484,
                      "src": "23600:4:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 34495,
                      "name": "_latestRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34024,
                      "src": "23608:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23600:19:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 34535,
                    "nodeType": "Block",
                    "src": "23689:301:43",
                    "statements": [
                      {
                        "assignments": [
                          34505
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 34505,
                            "mutability": "mutable",
                            "name": "rootTimestamp",
                            "nameLocation": "23711:13:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 34535,
                            "src": "23703:21:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "typeName": {
                              "id": 34504,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "23703:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 34509,
                        "initialValue": {
                          "baseExpression": {
                            "id": 34506,
                            "name": "rootHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34029,
                            "src": "23727:11:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint128_$",
                              "typeString": "mapping(uint256 => uint128)"
                            }
                          },
                          "id": 34508,
                          "indexExpression": {
                            "id": 34507,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34484,
                            "src": "23739:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23727:17:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23703:41:43"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 34512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 34510,
                            "name": "rootTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34505,
                            "src": "23763:13:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 34511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23780:1:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "23763:18:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 34517,
                        "nodeType": "IfStatement",
                        "src": "23759:78:43",
                        "trueBody": {
                          "id": 34516,
                          "nodeType": "Block",
                          "src": "23783:54:43",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 34513,
                                  "name": "NO_SUCH_ROOT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34098,
                                  "src": "23808:12:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_RootInfo_$34069_memory_ptr_$",
                                    "typeString": "function () pure returns (struct WorldIDIdentityManagerImplV1.RootInfo memory)"
                                  }
                                },
                                "id": 34514,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23808:14:43",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RootInfo_$34069_memory_ptr",
                                  "typeString": "struct WorldIDIdentityManagerImplV1.RootInfo memory"
                                }
                              },
                              "functionReturnParameters": 34493,
                              "id": 34515,
                              "nodeType": "Return",
                              "src": "23801:21:43"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          34519
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 34519,
                            "mutability": "mutable",
                            "name": "isValid",
                            "nameLocation": "23856:7:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 34535,
                            "src": "23851:12:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 34518,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "23851:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 34528,
                        "initialValue": {
                          "id": 34527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "23866:54:43",
                          "subExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 34525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 34523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 34520,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "23868:5:43",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 34521,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "23874:9:43",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "23868:15:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 34522,
                                    "name": "rootTimestamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34505,
                                    "src": "23886:13:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "src": "23868:31:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 34524,
                                  "name": "rootHistoryExpiry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34032,
                                  "src": "23902:17:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "23868:51:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 34526,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "23867:53:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23851:69:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 34530,
                              "name": "root",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34484,
                              "src": "23950:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 34531,
                              "name": "rootTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34505,
                              "src": "23956:13:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "id": 34532,
                              "name": "isValid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34519,
                              "src": "23971:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 34529,
                            "name": "RootInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34069,
                            "src": "23941:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_RootInfo_$34069_storage_ptr_$",
                              "typeString": "type(struct WorldIDIdentityManagerImplV1.RootInfo storage pointer)"
                            }
                          },
                          "id": 34533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23941:38:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RootInfo_$34069_memory_ptr",
                            "typeString": "struct WorldIDIdentityManagerImplV1.RootInfo memory"
                          }
                        },
                        "functionReturnParameters": 34493,
                        "id": 34534,
                        "nodeType": "Return",
                        "src": "23934:45:43"
                      }
                    ]
                  },
                  "id": 34536,
                  "nodeType": "IfStatement",
                  "src": "23596:394:43",
                  "trueBody": {
                    "id": 34503,
                    "nodeType": "Block",
                    "src": "23621:62:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 34498,
                              "name": "_latestRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34024,
                              "src": "23651:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 34499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23664:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 34500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23667:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 34497,
                            "name": "RootInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34069,
                            "src": "23642:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_RootInfo_$34069_storage_ptr_$",
                              "typeString": "type(struct WorldIDIdentityManagerImplV1.RootInfo storage pointer)"
                            }
                          },
                          "id": 34501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23642:30:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RootInfo_$34069_memory_ptr",
                            "typeString": "struct WorldIDIdentityManagerImplV1.RootInfo memory"
                          }
                        },
                        "functionReturnParameters": 34493,
                        "id": 34502,
                        "nodeType": "Return",
                        "src": "23635:37:43"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 34482,
              "nodeType": "StructuredDocumentation",
              "src": "22939:485:43",
              "text": "@notice Allows a caller to query the root history for information about a given root.\n @dev Should be used sparingly as the query can be quite expensive.\n @param root The root for which you are querying information.\n @return rootInfo The information about `root`, or `NO_SUCH_ROOT` if `root` does not exist.\n         Note that if the queried root is the current, the timestamp will be invalid as the\n         root has not been superseded."
            },
            "functionSelector": "3f7c178d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34487,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34486,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "23514:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "23514:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "23514:9:43"
              },
              {
                "id": 34489,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34488,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "23532:15:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48444,
                  "src": "23532:15:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "23532:15:43"
              }
            ],
            "name": "queryRoot",
            "nameLocation": "23438:9:43",
            "parameters": {
              "id": 34485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34484,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "23456:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34538,
                  "src": "23448:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23448:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23447:14:43"
            },
            "returnParameters": {
              "id": 34493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34492,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34538,
                  "src": "23565:15:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RootInfo_$34069_memory_ptr",
                    "typeString": "struct WorldIDIdentityManagerImplV1.RootInfo"
                  },
                  "typeName": {
                    "id": 34491,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34490,
                      "name": "RootInfo",
                      "nameLocations": [
                        "23565:8:43"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34069,
                      "src": "23565:8:43"
                    },
                    "referencedDeclaration": 34069,
                    "src": "23565:8:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RootInfo_$34069_storage_ptr",
                      "typeString": "struct WorldIDIdentityManagerImplV1.RootInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23564:17:43"
            },
            "scope": 34869,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 34580,
            "nodeType": "FunctionDefinition",
            "src": "24439:638:43",
            "nodes": [],
            "body": {
              "id": 34579,
              "nodeType": "Block",
              "src": "24525:552:43",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34548,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34541,
                      "src": "24583:4:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 34549,
                      "name": "_latestRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34024,
                      "src": "24591:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24583:19:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34553,
                  "nodeType": "IfStatement",
                  "src": "24579:56:43",
                  "trueBody": {
                    "id": 34552,
                    "nodeType": "Block",
                    "src": "24604:31:43",
                    "statements": [
                      {
                        "functionReturnParameters": 34547,
                        "id": 34551,
                        "nodeType": "Return",
                        "src": "24618:7:43"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    34555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34555,
                      "mutability": "mutable",
                      "name": "rootTimestamp",
                      "nameLocation": "24718:13:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 34579,
                      "src": "24710:21:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 34554,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "24710:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34559,
                  "initialValue": {
                    "baseExpression": {
                      "id": 34556,
                      "name": "rootHistory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34029,
                      "src": "24734:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint128_$",
                        "typeString": "mapping(uint256 => uint128)"
                      }
                    },
                    "id": 34558,
                    "indexExpression": {
                      "id": 34557,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34541,
                      "src": "24746:4:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "24734:17:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24710:41:43"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 34562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34560,
                      "name": "rootTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34555,
                      "src": "24834:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 34561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24851:1:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "24834:18:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34567,
                  "nodeType": "IfStatement",
                  "src": "24830:73:43",
                  "trueBody": {
                    "id": 34566,
                    "nodeType": "Block",
                    "src": "24854:49:43",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 34563,
                            "name": "NonExistentRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35397,
                            "src": "24875:15:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 34564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24875:17:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34565,
                        "nodeType": "RevertStatement",
                        "src": "24868:24:43"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 34571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 34568,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "24973:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 34569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "24979:9:43",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "24973:15:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 34570,
                        "name": "rootTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34555,
                        "src": "24991:13:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "24973:31:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 34572,
                      "name": "rootHistoryExpiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34032,
                      "src": "25007:17:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24973:51:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34578,
                  "nodeType": "IfStatement",
                  "src": "24969:102:43",
                  "trueBody": {
                    "id": 34577,
                    "nodeType": "Block",
                    "src": "25026:45:43",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 34574,
                            "name": "ExpiredRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35394,
                            "src": "25047:11:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 34575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25047:13:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34576,
                        "nodeType": "RevertStatement",
                        "src": "25040:20:43"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 34539,
              "nodeType": "StructuredDocumentation",
              "src": "24002:432:43",
              "text": "@notice Reverts if the provided root value is not valid.\n @dev A root is valid if it is either the latest root, or not the latest root but has not\n      expired.\n @param root The root of the merkle tree to check for validity.\n @custom:reverts ExpiredRoot If the provided `root` has expired.\n @custom:reverts NonExistentRoot If the provided `root` does not exist in the history."
            },
            "functionSelector": "f2358e1d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34544,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34543,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "24499:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "24499:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "24499:9:43"
              },
              {
                "id": 34546,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34545,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "24509:15:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48444,
                  "src": "24509:15:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "24509:15:43"
              }
            ],
            "name": "requireValidRoot",
            "nameLocation": "24448:16:43",
            "parameters": {
              "id": 34542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34541,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "24473:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34580,
                  "src": "24465:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24465:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24464:14:43"
            },
            "returnParameters": {
              "id": 34547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24525:0:43"
            },
            "scope": 34869,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 34596,
            "nodeType": "FunctionDefinition",
            "src": "25309:231:43",
            "nodes": [],
            "body": {
              "id": 34595,
              "nodeType": "Block",
              "src": "25484:56:43",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34592,
                        "name": "batchInsertionVerifiers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34043,
                        "src": "25509:23:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                          "typeString": "contract VerifierLookupTable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                          "typeString": "contract VerifierLookupTable"
                        }
                      ],
                      "id": 34591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "25501:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 34590,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "25501:7:43",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 34593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25501:32:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 34589,
                  "id": 34594,
                  "nodeType": "Return",
                  "src": "25494:39:43"
                }
              ]
            },
            "documentation": {
              "id": 34581,
              "nodeType": "StructuredDocumentation",
              "src": "25083:221:43",
              "text": "@notice Gets the address for the lookup table of merkle tree verifiers used for identity\n         registrations.\n @return addr The address of the contract being used as the verifier lookup table."
            },
            "functionSelector": "8fc22e9f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34584,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34583,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "25420:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "25420:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "25420:9:43"
              },
              {
                "id": 34586,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34585,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "25438:15:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48444,
                  "src": "25438:15:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "25438:15:43"
              }
            ],
            "name": "getRegisterIdentitiesVerifierLookupTableAddress",
            "nameLocation": "25318:47:43",
            "parameters": {
              "id": 34582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25365:2:43"
            },
            "returnParameters": {
              "id": 34589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34588,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34596,
                  "src": "25471:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25471:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25470:9:43"
            },
            "scope": 34869,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 34646,
            "nodeType": "FunctionDefinition",
            "src": "25868:522:43",
            "nodes": [],
            "body": {
              "id": 34645,
              "nodeType": "Block",
              "src": "26043:347:43",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 34617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 34611,
                          "name": "newTable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34600,
                          "src": "26065:8:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                            "typeString": "contract VerifierLookupTable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                            "typeString": "contract VerifierLookupTable"
                          }
                        ],
                        "id": 34610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "26057:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34609,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "26057:7:43",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26057:17:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 34615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26086:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 34614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "26078:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34613,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "26078:7:43",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26078:10:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "26057:31:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34622,
                  "nodeType": "IfStatement",
                  "src": "26053:89:43",
                  "trueBody": {
                    "id": 34621,
                    "nodeType": "Block",
                    "src": "26090:52:43",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 34618,
                            "name": "InvalidVerifierLUT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34149,
                            "src": "26111:18:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 34619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26111:20:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34620,
                        "nodeType": "RevertStatement",
                        "src": "26104:27:43"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    34625
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34625,
                      "mutability": "mutable",
                      "name": "oldTable",
                      "nameLocation": "26172:8:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 34645,
                      "src": "26152:28:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                        "typeString": "contract VerifierLookupTable"
                      },
                      "typeName": {
                        "id": 34624,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34623,
                          "name": "VerifierLookupTable",
                          "nameLocations": [
                            "26152:19:43"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35388,
                          "src": "26152:19:43"
                        },
                        "referencedDeclaration": 35388,
                        "src": "26152:19:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                          "typeString": "contract VerifierLookupTable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34627,
                  "initialValue": {
                    "id": 34626,
                    "name": "batchInsertionVerifiers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34043,
                    "src": "26183:23:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                      "typeString": "contract VerifierLookupTable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26152:54:43"
                },
                {
                  "expression": {
                    "id": 34630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34628,
                      "name": "batchInsertionVerifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34043,
                      "src": "26216:23:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                        "typeString": "contract VerifierLookupTable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 34629,
                      "name": "newTable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34600,
                      "src": "26242:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                        "typeString": "contract VerifierLookupTable"
                      }
                    },
                    "src": "26216:34:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                      "typeString": "contract VerifierLookupTable"
                    }
                  },
                  "id": 34631,
                  "nodeType": "ExpressionStatement",
                  "src": "26216:34:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34633,
                          "name": "Dependency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34084,
                          "src": "26296:10:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Dependency_$34084_$",
                            "typeString": "type(enum WorldIDIdentityManagerImplV1.Dependency)"
                          }
                        },
                        "id": 34634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "26307:28:43",
                        "memberName": "InsertionVerifierLookupTable",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34081,
                        "src": "26296:39:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Dependency_$34084",
                          "typeString": "enum WorldIDIdentityManagerImplV1.Dependency"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34637,
                            "name": "oldTable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34625,
                            "src": "26345:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                              "typeString": "contract VerifierLookupTable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                              "typeString": "contract VerifierLookupTable"
                            }
                          ],
                          "id": 34636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "26337:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34635,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "26337:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26337:17:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34641,
                            "name": "newTable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34600,
                            "src": "26364:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                              "typeString": "contract VerifierLookupTable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                              "typeString": "contract VerifierLookupTable"
                            }
                          ],
                          "id": 34640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "26356:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34639,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "26356:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26356:17:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Dependency_$34084",
                          "typeString": "enum WorldIDIdentityManagerImplV1.Dependency"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34632,
                      "name": "DependencyUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34169,
                      "src": "26265:17:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_Dependency_$34084_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (enum WorldIDIdentityManagerImplV1.Dependency,address,address)"
                      }
                    },
                    "id": 34643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26265:118:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34644,
                  "nodeType": "EmitStatement",
                  "src": "26260:123:43"
                }
              ]
            },
            "documentation": {
              "id": 34597,
              "nodeType": "StructuredDocumentation",
              "src": "25546:317:43",
              "text": "@notice Sets the address for the lookup table of merkle tree verifiers used for identity\n         registrations.\n @dev Only the owner of the contract can call this function.\n @param newTable The new verifier lookup table to be used for verifying identity\n        registrations."
            },
            "functionSelector": "2f059fca",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34603,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34602,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "25987:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "25987:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "25987:9:43"
              },
              {
                "id": 34605,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34604,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "26005:15:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48444,
                  "src": "26005:15:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "26005:15:43"
              },
              {
                "id": 34607,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34606,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "26029:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29157,
                  "src": "26029:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "26029:9:43"
              }
            ],
            "name": "setRegisterIdentitiesVerifierLookupTable",
            "nameLocation": "25877:40:43",
            "parameters": {
              "id": 34601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34600,
                  "mutability": "mutable",
                  "name": "newTable",
                  "nameLocation": "25938:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34646,
                  "src": "25918:28:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                    "typeString": "contract VerifierLookupTable"
                  },
                  "typeName": {
                    "id": 34599,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34598,
                      "name": "VerifierLookupTable",
                      "nameLocations": [
                        "25918:19:43"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35388,
                      "src": "25918:19:43"
                    },
                    "referencedDeclaration": 35388,
                    "src": "25918:19:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VerifierLookupTable_$35388",
                      "typeString": "contract VerifierLookupTable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25917:30:43"
            },
            "returnParameters": {
              "id": 34608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26043:0:43"
            },
            "scope": 34869,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 34662,
            "nodeType": "FunctionDefinition",
            "src": "26573:205:43",
            "nodes": [],
            "body": {
              "id": 34661,
              "nodeType": "Block",
              "src": "26728:50:43",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34658,
                        "name": "semaphoreVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34051,
                        "src": "26753:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                          "typeString": "contract ISemaphoreVerifier"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                          "typeString": "contract ISemaphoreVerifier"
                        }
                      ],
                      "id": 34657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "26745:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 34656,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "26745:7:43",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 34659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26745:26:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 34655,
                  "id": 34660,
                  "nodeType": "Return",
                  "src": "26738:33:43"
                }
              ]
            },
            "documentation": {
              "id": 34647,
              "nodeType": "StructuredDocumentation",
              "src": "26396:172:43",
              "text": "@notice Gets the address of the verifier used for verification of semaphore proofs.\n @return addr The address of the contract being used as the verifier."
            },
            "functionSelector": "f2038f95",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34650,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34649,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "26664:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "26664:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "26664:9:43"
              },
              {
                "id": 34652,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34651,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "26682:15:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48444,
                  "src": "26682:15:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "26682:15:43"
              }
            ],
            "name": "getSemaphoreVerifierAddress",
            "nameLocation": "26582:27:43",
            "parameters": {
              "id": 34648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26609:2:43"
            },
            "returnParameters": {
              "id": 34655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34654,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34662,
                  "src": "26715:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26715:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26714:9:43"
            },
            "scope": 34869,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 34712,
            "nodeType": "FunctionDefinition",
            "src": "27081:492:43",
            "nodes": [],
            "body": {
              "id": 34711,
              "nodeType": "Block",
              "src": "27238:335:43",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 34683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 34677,
                          "name": "newVerifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34666,
                          "src": "27260:11:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                            "typeString": "contract ISemaphoreVerifier"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                            "typeString": "contract ISemaphoreVerifier"
                          }
                        ],
                        "id": 34676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "27252:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34675,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "27252:7:43",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "27252:20:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 34681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27284:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 34680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "27276:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34679,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "27276:7:43",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "27276:10:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "27252:34:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34688,
                  "nodeType": "IfStatement",
                  "src": "27248:89:43",
                  "trueBody": {
                    "id": 34687,
                    "nodeType": "Block",
                    "src": "27288:49:43",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 34684,
                            "name": "InvalidVerifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34146,
                            "src": "27309:15:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 34685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27309:17:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34686,
                        "nodeType": "RevertStatement",
                        "src": "27302:24:43"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    34691
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34691,
                      "mutability": "mutable",
                      "name": "oldVerifier",
                      "nameLocation": "27366:11:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 34711,
                      "src": "27347:30:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                        "typeString": "contract ISemaphoreVerifier"
                      },
                      "typeName": {
                        "id": 34690,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34689,
                          "name": "ISemaphoreVerifier",
                          "nameLocations": [
                            "27347:18:43"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35429,
                          "src": "27347:18:43"
                        },
                        "referencedDeclaration": 35429,
                        "src": "27347:18:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                          "typeString": "contract ISemaphoreVerifier"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34693,
                  "initialValue": {
                    "id": 34692,
                    "name": "semaphoreVerifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34051,
                    "src": "27380:17:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                      "typeString": "contract ISemaphoreVerifier"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27347:50:43"
                },
                {
                  "expression": {
                    "id": 34696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34694,
                      "name": "semaphoreVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34051,
                      "src": "27407:17:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                        "typeString": "contract ISemaphoreVerifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 34695,
                      "name": "newVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34666,
                      "src": "27427:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                        "typeString": "contract ISemaphoreVerifier"
                      }
                    },
                    "src": "27407:31:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                      "typeString": "contract ISemaphoreVerifier"
                    }
                  },
                  "id": 34697,
                  "nodeType": "ExpressionStatement",
                  "src": "27407:31:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34699,
                          "name": "Dependency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34084,
                          "src": "27484:10:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Dependency_$34084_$",
                            "typeString": "type(enum WorldIDIdentityManagerImplV1.Dependency)"
                          }
                        },
                        "id": 34700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "27495:17:43",
                        "memberName": "SemaphoreVerifier",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34083,
                        "src": "27484:28:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Dependency_$34084",
                          "typeString": "enum WorldIDIdentityManagerImplV1.Dependency"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34703,
                            "name": "oldVerifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34691,
                            "src": "27522:11:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                              "typeString": "contract ISemaphoreVerifier"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                              "typeString": "contract ISemaphoreVerifier"
                            }
                          ],
                          "id": 34702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "27514:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34701,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "27514:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27514:20:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34707,
                            "name": "newVerifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34666,
                            "src": "27544:11:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                              "typeString": "contract ISemaphoreVerifier"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                              "typeString": "contract ISemaphoreVerifier"
                            }
                          ],
                          "id": 34706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "27536:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34705,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "27536:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27536:20:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Dependency_$34084",
                          "typeString": "enum WorldIDIdentityManagerImplV1.Dependency"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34698,
                      "name": "DependencyUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34169,
                      "src": "27453:17:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_Dependency_$34084_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (enum WorldIDIdentityManagerImplV1.Dependency,address,address)"
                      }
                    },
                    "id": 34709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27453:113:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34710,
                  "nodeType": "EmitStatement",
                  "src": "27448:118:43"
                }
              ]
            },
            "documentation": {
              "id": 34663,
              "nodeType": "StructuredDocumentation",
              "src": "26784:292:43",
              "text": "@notice Sets the address for the semaphore verifier to be used for verification of\n         semaphore proofs.\n @dev Only the owner of the contract can call this function.\n @param newVerifier The new verifier instance to be used for verifying semaphore proofs."
            },
            "functionSelector": "0e3a12f3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34669,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34668,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "27182:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "27182:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "27182:9:43"
              },
              {
                "id": 34671,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34670,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "27200:15:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48444,
                  "src": "27200:15:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "27200:15:43"
              },
              {
                "id": 34673,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34672,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "27224:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29157,
                  "src": "27224:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "27224:9:43"
              }
            ],
            "name": "setSemaphoreVerifier",
            "nameLocation": "27090:20:43",
            "parameters": {
              "id": 34667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34666,
                  "mutability": "mutable",
                  "name": "newVerifier",
                  "nameLocation": "27130:11:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34712,
                  "src": "27111:30:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                    "typeString": "contract ISemaphoreVerifier"
                  },
                  "typeName": {
                    "id": 34665,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34664,
                      "name": "ISemaphoreVerifier",
                      "nameLocations": [
                        "27111:18:43"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35429,
                      "src": "27111:18:43"
                    },
                    "referencedDeclaration": 35429,
                    "src": "27111:18:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                      "typeString": "contract ISemaphoreVerifier"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27110:32:43"
            },
            "returnParameters": {
              "id": 34674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27238:0:43"
            },
            "scope": 34869,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 34725,
            "nodeType": "FunctionDefinition",
            "src": "27749:189:43",
            "nodes": [],
            "body": {
              "id": 34724,
              "nodeType": "Block",
              "src": "27897:41:43",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 34722,
                    "name": "rootHistoryExpiry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34032,
                    "src": "27914:17:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34721,
                  "id": 34723,
                  "nodeType": "Return",
                  "src": "27907:24:43"
                }
              ]
            },
            "documentation": {
              "id": 34713,
              "nodeType": "StructuredDocumentation",
              "src": "27579:165:43",
              "text": "@notice Gets the current amount of time used to expire roots in the history.\n @return expiryTime The amount of time it takes for a root to expire."
            },
            "functionSelector": "43f974cb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34716,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34715,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "27833:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "27833:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "27833:9:43"
              },
              {
                "id": 34718,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34717,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "27851:15:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48444,
                  "src": "27851:15:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "27851:15:43"
              }
            ],
            "name": "getRootHistoryExpiry",
            "nameLocation": "27758:20:43",
            "parameters": {
              "id": 34714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27778:2:43"
            },
            "returnParameters": {
              "id": 34721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34720,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34725,
                  "src": "27884:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34719,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27884:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27883:9:43"
            },
            "scope": 34869,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 34760,
            "nodeType": "FunctionDefinition",
            "src": "28170:402:43",
            "nodes": [],
            "body": {
              "id": 34759,
              "nodeType": "Block",
              "src": "28318:254:43",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34737,
                      "name": "newExpiryTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34728,
                      "src": "28332:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 34738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28349:1:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "28332:18:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34745,
                  "nodeType": "IfStatement",
                  "src": "28328:86:43",
                  "trueBody": {
                    "id": 34744,
                    "nodeType": "Block",
                    "src": "28352:62:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4578706972792074696d652063616e6e6f74206265207a65726f2e",
                              "id": 34741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28373:29:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_42d9ce1b1906fc6a6660b96b1a1887b9fefffe587f75da117e471256324ca69d",
                                "typeString": "literal_string \"Expiry time cannot be zero.\""
                              },
                              "value": "Expiry time cannot be zero."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_42d9ce1b1906fc6a6660b96b1a1887b9fefffe587f75da117e471256324ca69d",
                                "typeString": "literal_string \"Expiry time cannot be zero.\""
                              }
                            ],
                            "id": 34740,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "28366:6:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 34742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28366:37:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34743,
                        "nodeType": "ExpressionStatement",
                        "src": "28366:37:43"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    34747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34747,
                      "mutability": "mutable",
                      "name": "oldExpiry",
                      "nameLocation": "28431:9:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 34759,
                      "src": "28423:17:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34746,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28423:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34749,
                  "initialValue": {
                    "id": 34748,
                    "name": "rootHistoryExpiry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34032,
                    "src": "28443:17:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28423:37:43"
                },
                {
                  "expression": {
                    "id": 34752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34750,
                      "name": "rootHistoryExpiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34032,
                      "src": "28470:17:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 34751,
                      "name": "newExpiryTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34728,
                      "src": "28490:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28470:33:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34753,
                  "nodeType": "ExpressionStatement",
                  "src": "28470:33:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 34755,
                        "name": "oldExpiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34747,
                        "src": "28540:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34756,
                        "name": "newExpiryTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34728,
                        "src": "28551:13:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34754,
                      "name": "RootHistoryExpirySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34181,
                      "src": "28519:20:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28519:46:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34758,
                  "nodeType": "EmitStatement",
                  "src": "28514:51:43"
                }
              ]
            },
            "documentation": {
              "id": 34726,
              "nodeType": "StructuredDocumentation",
              "src": "27944:221:43",
              "text": "@notice Sets the time to wait before expiring a root from the root history.\n @dev Only the owner of the contract can call this function.\n @param newExpiryTime The new time to use to expire roots."
            },
            "functionSelector": "c70aa727",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34731,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34730,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "28262:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "28262:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "28262:9:43"
              },
              {
                "id": 34733,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34732,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "28280:15:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48444,
                  "src": "28280:15:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "28280:15:43"
              },
              {
                "id": 34735,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34734,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "28304:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29157,
                  "src": "28304:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "28304:9:43"
              }
            ],
            "name": "setRootHistoryExpiry",
            "nameLocation": "28179:20:43",
            "parameters": {
              "id": 34729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34728,
                  "mutability": "mutable",
                  "name": "newExpiryTime",
                  "nameLocation": "28208:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34760,
                  "src": "28200:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34727,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28200:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28199:23:43"
            },
            "returnParameters": {
              "id": 34736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28318:0:43"
            },
            "scope": 34869,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 34773,
            "nodeType": "FunctionDefinition",
            "src": "28716:119:43",
            "nodes": [],
            "body": {
              "id": 34772,
              "nodeType": "Block",
              "src": "28802:33:43",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 34770,
                    "name": "treeDepth",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34061,
                    "src": "28819:9:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 34769,
                  "id": 34771,
                  "nodeType": "Return",
                  "src": "28812:16:43"
                }
              ]
            },
            "documentation": {
              "id": 34761,
              "nodeType": "StructuredDocumentation",
              "src": "28578:133:43",
              "text": "@notice Gets the Semaphore tree depth the contract was initialized with.\n @return initializedTreeDepth Tree depth."
            },
            "functionSelector": "8e5cdd50",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34764,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34763,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "28760:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "28760:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "28760:9:43"
              },
              {
                "id": 34766,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34765,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "28770:15:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48444,
                  "src": "28770:15:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "28770:15:43"
              }
            ],
            "name": "getTreeDepth",
            "nameLocation": "28725:12:43",
            "parameters": {
              "id": 34762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28737:2:43"
            },
            "returnParameters": {
              "id": 34769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34768,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34773,
                  "src": "28795:5:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 34767,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "28795:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28794:7:43"
            },
            "scope": 34869,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 34786,
            "nodeType": "FunctionDefinition",
            "src": "29056:133:43",
            "nodes": [],
            "body": {
              "id": 34785,
              "nodeType": "Block",
              "src": "29148:41:43",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 34783,
                    "name": "_identityOperator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34021,
                    "src": "29165:17:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 34782,
                  "id": 34784,
                  "nodeType": "Return",
                  "src": "29158:24:43"
                }
              ]
            },
            "documentation": {
              "id": 34774,
              "nodeType": "StructuredDocumentation",
              "src": "28841:210:43",
              "text": "@notice Gets the address that is authorised to perform identity operations on this identity\n         manager instance.\n @return _ The address authorized to perform identity operations."
            },
            "functionSelector": "f134b6ca",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34777,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34776,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "29104:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "29104:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "29104:9:43"
              },
              {
                "id": 34779,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34778,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "29114:15:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48444,
                  "src": "29114:15:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "29114:15:43"
              }
            ],
            "name": "identityOperator",
            "nameLocation": "29065:16:43",
            "parameters": {
              "id": 34775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29081:2:43"
            },
            "returnParameters": {
              "id": 34782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34781,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34786,
                  "src": "29139:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29139:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29138:9:43"
            },
            "scope": 34869,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 34816,
            "nodeType": "FunctionDefinition",
            "src": "29482:384:43",
            "nodes": [],
            "body": {
              "id": 34815,
              "nodeType": "Block",
              "src": "29661:205:43",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34801
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34801,
                      "mutability": "mutable",
                      "name": "oldOperator",
                      "nameLocation": "29679:11:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 34815,
                      "src": "29671:19:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34800,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "29671:7:43",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34803,
                  "initialValue": {
                    "id": 34802,
                    "name": "_identityOperator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34021,
                    "src": "29693:17:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29671:39:43"
                },
                {
                  "expression": {
                    "id": 34806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34804,
                      "name": "_identityOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34021,
                      "src": "29720:17:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 34805,
                      "name": "newIdentityOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34789,
                      "src": "29740:19:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "29720:39:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34807,
                  "nodeType": "ExpressionStatement",
                  "src": "29720:39:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 34809,
                        "name": "oldOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34801,
                        "src": "29798:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34810,
                        "name": "newIdentityOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34789,
                        "src": "29811:19:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34808,
                      "name": "IdentityOperatorChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34188,
                      "src": "29774:23:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 34811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29774:57:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34812,
                  "nodeType": "EmitStatement",
                  "src": "29769:62:43"
                },
                {
                  "expression": {
                    "id": 34813,
                    "name": "oldOperator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34801,
                    "src": "29848:11:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 34799,
                  "id": 34814,
                  "nodeType": "Return",
                  "src": "29841:18:43"
                }
              ]
            },
            "documentation": {
              "id": 34787,
              "nodeType": "StructuredDocumentation",
              "src": "29195:282:43",
              "text": "@notice Sets the address that is authorised to perform identity operations on this identity\n         manager instance.\n @param newIdentityOperator The address of the new identity operator.\n @return _ The address of the old identity operator."
            },
            "functionSelector": "a7bba582",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34792,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34791,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "29579:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "29579:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "29579:9:43"
              },
              {
                "id": 34794,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34793,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "29597:15:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48444,
                  "src": "29597:15:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "29597:15:43"
              },
              {
                "id": 34796,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34795,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "29621:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29157,
                  "src": "29621:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "29621:9:43"
              }
            ],
            "name": "setIdentityOperator",
            "nameLocation": "29491:19:43",
            "parameters": {
              "id": 34790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34789,
                  "mutability": "mutable",
                  "name": "newIdentityOperator",
                  "nameLocation": "29519:19:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34816,
                  "src": "29511:27:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29511:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29510:29:43"
            },
            "returnParameters": {
              "id": 34799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34798,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34816,
                  "src": "29648:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29648:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29647:9:43"
            },
            "scope": 34869,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 34852,
            "nodeType": "FunctionDefinition",
            "src": "30701:499:43",
            "nodes": [],
            "body": {
              "id": 34851,
              "nodeType": "Block",
              "src": "30929:271:43",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34837,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34819,
                        "src": "31006:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34836,
                      "name": "requireValidRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34580,
                      "src": "30989:16:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 34838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30989:22:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34839,
                  "nodeType": "ExpressionStatement",
                  "src": "30989:22:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34843,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34829,
                        "src": "31120:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                          "typeString": "uint256[8] calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 34844,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34819,
                            "src": "31128:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 34845,
                            "name": "nullifierHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34823,
                            "src": "31134:13:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 34846,
                            "name": "signalHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34821,
                            "src": "31149:10:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 34847,
                            "name": "externalNullifierHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34825,
                            "src": "31161:21:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 34848,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "31127:56:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                          "typeString": "uint256[8] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      ],
                      "expression": {
                        "id": 34840,
                        "name": "semaphoreVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34051,
                        "src": "31077:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISemaphoreVerifier_$35429",
                          "typeString": "contract ISemaphoreVerifier"
                        }
                      },
                      "id": 34842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "31095:11:43",
                      "memberName": "verifyProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35428,
                      "src": "31077:29:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_uint256_$8_memory_ptr_$_t_array$_t_uint256_$4_memory_ptr_$returns$__$",
                        "typeString": "function (uint256[8] memory,uint256[4] memory) view external"
                      }
                    },
                    "id": 34849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31077:116:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34850,
                  "nodeType": "ExpressionStatement",
                  "src": "31077:116:43"
                }
              ]
            },
            "baseFunctions": [
              35468
            ],
            "documentation": {
              "id": 34817,
              "nodeType": "StructuredDocumentation",
              "src": "30125:571:43",
              "text": "@notice A verifier for the semaphore protocol.\n @dev Note that a double-signaling check is not included here, and should be carried by the\n      caller.\n @param proof The zero-knowledge proof\n @param root The of the Merkle tree\n @param signalHash A keccak256 hash of the Semaphore signal\n @param nullifierHash The nullifier hash\n @param externalNullifierHash A keccak256 hash of the external nullifier\n @custom:reverts string If the zero-knowledge proof cannot be verified for the public inputs."
            },
            "functionSelector": "354ca120",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34832,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34831,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "30903:9:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "30903:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "30903:9:43"
              },
              {
                "id": 34834,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34833,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "30913:15:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48444,
                  "src": "30913:15:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "30913:15:43"
              }
            ],
            "name": "verifyProof",
            "nameLocation": "30710:11:43",
            "parameters": {
              "id": 34830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34819,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "30739:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34852,
                  "src": "30731:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30731:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34821,
                  "mutability": "mutable",
                  "name": "signalHash",
                  "nameLocation": "30761:10:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34852,
                  "src": "30753:18:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30753:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34823,
                  "mutability": "mutable",
                  "name": "nullifierHash",
                  "nameLocation": "30789:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34852,
                  "src": "30781:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30781:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34825,
                  "mutability": "mutable",
                  "name": "externalNullifierHash",
                  "nameLocation": "30820:21:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34852,
                  "src": "30812:29:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30812:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34829,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "30871:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 34852,
                  "src": "30851:25:43",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                    "typeString": "uint256[8]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34826,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "30851:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34828,
                    "length": {
                      "hexValue": "38",
                      "id": 34827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "30859:1:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "30851:10:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
                      "typeString": "uint256[8]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30721:161:43"
            },
            "returnParameters": {
              "id": 34835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30929:0:43"
            },
            "scope": 34869,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 34868,
            "nodeType": "ModifierDefinition",
            "src": "31683:153:43",
            "nodes": [],
            "body": {
              "id": 34867,
              "nodeType": "Block",
              "src": "31715:121:43",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 34858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 34855,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "31729:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 34856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "31733:6:43",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "31729:10:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 34857,
                      "name": "_identityOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34021,
                      "src": "31743:17:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "31729:31:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34865,
                  "nodeType": "IfStatement",
                  "src": "31725:93:43",
                  "trueBody": {
                    "id": 34864,
                    "nodeType": "Block",
                    "src": "31762:56:43",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 34860,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "31796:3:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 34861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "31800:6:43",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "31796:10:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 34859,
                            "name": "Unauthorized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34111,
                            "src": "31783:12:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 34862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31783:24:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34863,
                        "nodeType": "RevertStatement",
                        "src": "31776:31:43"
                      }
                    ]
                  }
                },
                {
                  "id": 34866,
                  "nodeType": "PlaceholderStatement",
                  "src": "31828:1:43"
                }
              ]
            },
            "documentation": {
              "id": 34853,
              "nodeType": "StructuredDocumentation",
              "src": "31459:219:43",
              "text": "@notice Ensures that the guarded operation can only be performed by the authorized identity\n         operator contract.\n @custom:reverts Unauthorized If the caller is not the identity operator."
            },
            "name": "onlyIdentityOperator",
            "nameLocation": "31692:20:43",
            "parameters": {
              "id": 34854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31712:2:43"
            },
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34015,
              "name": "WorldIDImpl",
              "nameLocations": [
                "920:11:43"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35153,
              "src": "920:11:43"
            },
            "id": 34016,
            "nodeType": "InheritanceSpecifier",
            "src": "920:11:43"
          },
          {
            "baseName": {
              "id": 34017,
              "name": "IWorldID",
              "nameLocations": [
                "933:8:43"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35469,
              "src": "933:8:43"
            },
            "id": 34018,
            "nodeType": "InheritanceSpecifier",
            "src": "933:8:43"
          }
        ],
        "canonicalName": "WorldIDIdentityManagerImplV1",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 34014,
          "nodeType": "StructuredDocumentation",
          "src": "508:371:43",
          "text": "@title WorldID Identity Manager Implementation Version 1\n @author Worldcoin\n @notice An implementation of a batch-based identity manager for the WorldID protocol.\n @dev The manager is based on the principle of verifying externally-created Zero Knowledge Proofs\n      to perform the insertions.\n @dev This is the implementation delegated to by a proxy."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34869,
          35469,
          35398,
          35153,
          48450,
          29937,
          29622,
          29253,
          29111,
          29243,
          30263,
          29801
        ],
        "name": "WorldIDIdentityManagerImplV1",
        "nameLocation": "888:28:43",
        "scope": 34870,
        "usedErrors": [
          34106,
          34111,
          34116,
          34119,
          34126,
          34129,
          34132,
          34135,
          34140,
          34143,
          34146,
          34149,
          35129,
          35394,
          35397,
          48421
        ],
        "usedEvents": [
          29037,
          29128,
          29287,
          29431,
          29496,
          29647,
          34159,
          34169,
          34174,
          34181,
          34188,
          34195
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 43
}