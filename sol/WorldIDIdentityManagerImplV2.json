{
  "abi": [
    {
      "inputs": [],
      "name": "CannotRenounceOwnership",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpiredRoot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ImplementationNotInitialized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "InvalidCommitment",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidStateBridgeAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidVerifier",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidVerifierLUT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MismatchedInputLengths",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonExistentRoot",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "providedRoot",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "latestRoot",
          "type": "uint256"
        }
      ],
      "name": "NotLatestRoot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProofValidationFailure",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StateBridgeAlreadyDisabled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StateBridgeAlreadyEnabled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum WorldIDIdentityManagerImplV1.UnreducedElementType",
          "name": "elementType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "element",
          "type": "uint256"
        }
      ],
      "name": "UnreducedElement",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "depth",
          "type": "uint8"
        }
      ],
      "name": "UnsupportedTreeDepth",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "enum WorldIDIdentityManagerImplV1.Dependency",
          "name": "kind",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "DependencyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldOperator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "IdentityOperatorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "oldExpiryTime",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newExpiryTime",
          "type": "uint256"
        }
      ],
      "name": "RootHistoryExpirySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bool",
          "name": "isEnabled",
          "type": "bool"
        }
      ],
      "name": "StateBridgeStateChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "preRoot",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "enum WorldIDIdentityManagerImplV1.TreeChange",
          "name": "kind",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "postRoot",
          "type": "uint256"
        }
      ],
      "name": "TreeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_treeDepth",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialRoot",
          "type": "uint256"
        }
      ],
      "name": "WorldIDIdentityManagerImplInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "WorldIDIdentityManagerImplV2Initialized",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NO_SUCH_ROOT",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "supersededTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bool",
              "name": "isValid",
              "type": "bool"
            }
          ],
          "internalType": "struct WorldIDIdentityManagerImplV1.RootInfo",
          "name": "rootInfo",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "packedDeletionIndices",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "preRoot",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "postRoot",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "batchSize",
          "type": "uint32"
        }
      ],
      "name": "calculateIdentityDeletionInputHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "startIndex",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "preRoot",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "postRoot",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "identityCommitments",
          "type": "uint256[]"
        }
      ],
      "name": "calculateIdentityRegistrationInputHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[8]",
          "name": "deletionProof",
          "type": "uint256[8]"
        },
        {
          "internalType": "bytes",
          "name": "packedDeletionIndices",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "preRoot",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "postRoot",
          "type": "uint256"
        }
      ],
      "name": "deleteIdentities",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeleteIdentitiesVerifierLookupTableAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegisterIdentitiesVerifierLookupTableAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRootHistoryExpiry",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSemaphoreVerifierAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTreeDepth",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "identityOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_treeDepth",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "initialRoot",
          "type": "uint256"
        },
        {
          "internalType": "contract VerifierLookupTable",
          "name": "_batchInsertionVerifiers",
          "type": "address"
        },
        {
          "internalType": "contract VerifierLookupTable",
          "name": "_batchUpdateVerifiers",
          "type": "address"
        },
        {
          "internalType": "contract ISemaphoreVerifier",
          "name": "_semaphoreVerifier",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract VerifierLookupTable",
          "name": "_batchDeletionVerifiers",
          "type": "address"
        }
      ],
      "name": "initializeV2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "root",
          "type": "uint256"
        }
      ],
      "name": "queryRoot",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "supersededTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bool",
              "name": "isValid",
              "type": "bool"
            }
          ],
          "internalType": "struct WorldIDIdentityManagerImplV1.RootInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[8]",
          "name": "insertionProof",
          "type": "uint256[8]"
        },
        {
          "internalType": "uint256",
          "name": "preRoot",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "startIndex",
          "type": "uint32"
        },
        {
          "internalType": "uint256[]",
          "name": "identityCommitments",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "postRoot",
          "type": "uint256"
        }
      ],
      "name": "registerIdentities",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "root",
          "type": "uint256"
        }
      ],
      "name": "requireValidRoot",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract VerifierLookupTable",
          "name": "newTable",
          "type": "address"
        }
      ],
      "name": "setDeleteIdentitiesVerifierLookupTable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newIdentityOperator",
          "type": "address"
        }
      ],
      "name": "setIdentityOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract VerifierLookupTable",
          "name": "newTable",
          "type": "address"
        }
      ],
      "name": "setRegisterIdentitiesVerifierLookupTable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newExpiryTime",
          "type": "uint256"
        }
      ],
      "name": "setRootHistoryExpiry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISemaphoreVerifier",
          "name": "newVerifier",
          "type": "address"
        }
      ],
      "name": "setSemaphoreVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "root",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "signalHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nullifierHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "externalNullifierHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[8]",
          "name": "proof",
          "type": "uint256[8]"
        }
      ],
      "name": "verifyProof",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e8565b600054610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e6576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805161326562000238600039600081816105ad015281816105f6015281816106fb0152818161073b01528181610b0001528181610b4001528181610c1e01528181610c5e01528181610d0a01528181610d4a01528181610e5401528181610e9401528181611119015281816111590152818161120b0152818161124b015281816113a1015281816113e10152818161146c015281816114ac0152818161152801528181611672015281816116b201528181611775015281816117b50152818161184c0152818161188c015281816119220152818161196201528181611a4201528181611a8201528181611b5e01528181611b9e01528181611cb501528181611cf501528181611d8001528181611dc001528181612044015281816120840152818161211a0152818161215a015281816121ee0152818161222e01528181612414015261245401526132656000f3fe6080604052600436106101cd5760003560e01c806379ba5097116100f7578063c70aa72711610095578063f134b6ca11610064578063f134b6ca14610539578063f2038f951461054e578063f2358e1d14610563578063f2fde38b1461058357600080fd5b8063c70aa727146104c6578063d7b0fef1146104e6578063e30c3978146104fb578063ea10fbbe1461051957600080fd5b80638e5cdd50116100d15780638e5cdd501461044a5780638fc22e9f14610471578063a7bba58214610486578063aa4a729e146104a657600080fd5b806379ba5097146103f75780638c76a9091461040c5780638da5cb5b1461042c57600080fd5b806338c870651161016f5780634f1ef2861161013e5780634f1ef2861461037657806352d1902d14610389578063561f204b1461039e578063715018a6146103e257600080fd5b806338c87065146102c75780633e8919b6146102e75780633f7c178d1461031457806343f974cb1461036157600080fd5b80632f059fca116101ab5780632f059fca1461023457806331e4e99214610254578063354ca120146102875780633659cfe6146102a757600080fd5b80630e3a12f3146101d25780632217b211146101f457806329b6eca914610214575b600080fd5b3480156101de57600080fd5b506101f26101ed366004612a11565b6105a3565b005b34801561020057600080fd5b506101f261020f366004612aa0565b6106f1565b34801561022057600080fd5b506101f261022f366004612a11565b6109f3565b34801561024057600080fd5b506101f261024f366004612a11565b610af6565b34801561026057600080fd5b5061027461026f366004612b5f565b610c12565b6040519081526020015b60405180910390f35b34801561029357600080fd5b506101f26102a2366004612bc6565b610d00565b3480156102b357600080fd5b506101f26102c2366004612a11565b610e4a565b3480156102d357600080fd5b506101f26102e2366004612c05565b610f12565b3480156102f357600080fd5b506102fc61110d565b6040516001600160a01b03909116815260200161027e565b34801561032057600080fd5b5061033461032f366004612c73565b6111e4565b60408051825181526020808401516001600160801b0316908201529181015115159082015260600161027e565b34801561036d57600080fd5b50610274611395565b6101f2610384366004612ccf565b611462565b34801561039557600080fd5b5061027461151b565b3480156103aa57600080fd5b506040805160608082018352600080835260208084018290529284018190528351918201845280825291810182905291820152610334565b3480156103ee57600080fd5b506101f26115ce565b34801561040357600080fd5b506101f26115ef565b34801561041857600080fd5b50610274610427366004612d7b565b611666565b34801561043857600080fd5b506033546001600160a01b03166102fc565b34801561045657600080fd5b5061045f611769565b60405160ff909116815260200161027e565b34801561047d57600080fd5b506102fc611840565b34801561049257600080fd5b506102fc6104a1366004612a11565b611916565b3480156104b257600080fd5b506101f26104c1366004612a11565b611a38565b3480156104d257600080fd5b506101f26104e1366004612c73565b611b54565b3480156104f257600080fd5b50610274611ca9565b34801561050757600080fd5b506065546001600160a01b03166102fc565b34801561052557600080fd5b506101f2610534366004612de3565b611d76565b34801561054557600080fd5b506102fc612038565b34801561055a57600080fd5b506102fc61210e565b34801561056f57600080fd5b506101f261057e366004612c73565b6121e4565b34801561058f57600080fd5b506101f261059e366004612a11565b612321565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105f45760405162461bcd60e51b81526004016105eb90612e4d565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610626612392565b6001600160a01b03161461064c5760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff1661066f57604051630103019560e11b815260040160405180910390fd5b6106776123ae565b6001600160a01b03811661069e5760405163baa3de5f60e01b815260040160405180910390fd5b61013380546001600160a01b038381166001600160a01b03198316811790935516908160035b6040517fd194b8423e9cb3c7cbebbbc3fe7f79dc2cbe0b40e03270d975abff491504c7b190600090a45050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107395760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661076b612392565b6001600160a01b0316146107915760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff166107b457604051630103019560e11b815260040160405180910390fd5b61012d546001600160a01b031633146107e25760405163472511eb60e11b81523360048201526024016105eb565b61012e5485146108145761012e5460405163542fced960e11b81526105eb918791600401918252602082015260400190565b60006108238587848787611666565b905060006108517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183612efb565b61013154604051638a283fc360e01b8152600481018790529192506000916001600160a01b0390911690638a283fc390602401602060405180830381865afa1580156108a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c59190612f0f565b604080516020810182528481529051631b81f82960e01b81529192506001600160a01b03831691631b81f82991610901918d9190600401612f2c565b600060405180830381600087803b15801561091b57600080fd5b505af192505050801561092c575060015b61098c57610938612f67565b806308c379a003610971575061094c612f82565b806109575750610973565b8060405162461bcd60e51b81526004016105eb9190613030565b505b604051631e716a8b60e01b815260040160405180910390fd5b61012e849055600088815261012f6020526040812080546001600160801b031916426001600160801b031617905584906040518a907f25f6d5cc356ee0b49cf708c13c68197947f5740a878a298765e4b18e4afdaf0490600090a45b505050505050505050565b600054600290610100900460ff16158015610a15575060005460ff8083169116105b610a315760405162461bcd60e51b81526004016105eb90613063565b6000805461ffff191660ff8316176101001790556001600160a01b038216610a6c57604051634fdab25360e01b815260040160405180910390fd5b61013580546001600160a01b0319166001600160a01b0384161790556040517fe416bec7423c88399c6c76ff0386950a64e454d25b846ef46c397bf835c7df7a90600090a16000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610b3e5760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b70612392565b6001600160a01b031614610b965760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff16610bb957604051630103019560e11b815260040160405180910390fd5b610bc16123ae565b6001600160a01b038116610be857604051634fdab25360e01b815260040160405180910390fd5b61013180546001600160a01b038381166001600160a01b03198316811790935516908160016106c4565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610c5c5760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c8e612392565b6001600160a01b031614610cb45760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff16610cd757604051630103019560e11b815260040160405180910390fd5b604051600483028088833781810195865260209095019390935250506040909101902092915050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610d485760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610d7a612392565b6001600160a01b031614610da05760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff16610dc357604051630103019560e11b815260040160405180910390fd5b610dcc856121e4565b610133546040805160808101825287815260208101869052808201879052606081018590529051632357251160e01b81526001600160a01b0390921691632357251191610e1e918591906004016130b1565b60006040518083038186803b158015610e3657600080fd5b505afa1580156109e8573d6000803e3d6000fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610e925760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610ec4612392565b6001600160a01b031614610eea5760405162461bcd60e51b81526004016105eb90612e99565b610ef38161240a565b60408051600080825260208201909252610f0f918391906124b2565b50565b600054600190610100900460ff16158015610f34575060005460ff8083169116105b610f505760405162461bcd60e51b81526004016105eb90613063565b6000805461ffff191660ff8316176101001790556001600160a01b038416610f8b57604051634fdab25360e01b815260040160405180910390fd5b6001600160a01b038316610fb257604051634fdab25360e01b815260040160405180910390fd5b6001600160a01b038216610fd95760405163baa3de5f60e01b815260040160405180910390fd5b610fe1612622565b610fea86612651565b61100c57604051630220cee360e61b815260ff871660048201526024016105eb565b610134805460ff60a81b1916600160a81b60ff891602179055610e106101305561012e85905561013180546001600160a01b03199081166001600160a01b0387811691909117909255610132805482168684161790556101338054821685841617905560335461012d8054919093169116179055611088612678565b6040805160ff88168152602081018790527fd1bcc66c061c32a21f569d138c2dadef4a38a0636309881954af5f44010ec1d8910160405180910390a16000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050505050565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036111575760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611189612392565b6001600160a01b0316146111af5760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff166111d257604051630103019560e11b815260040160405180910390fd5b50610135546001600160a01b03165b90565b60408051606081018252600080825260208201819052918101919091526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036112495760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661127b612392565b6001600160a01b0316146112a15760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff166112c457604051630103019560e11b815260040160405180910390fd5b61012e5482036112f35750506040805160608101825261012e5481526000602082015260019181019190915290565b600082815261012f60205260408120546001600160801b03169081900361134e5760408051606080820183526000808352602080840182905292840181905283519182018452808252918101829052918201525b9392505050565b610130546000906113686001600160801b038416426130e2565b604080516060810182528781526001600160801b039095166020860152911015908301525090505b919050565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036113df5760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611411612392565b6001600160a01b0316146114375760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff1661145a57604051630103019560e11b815260040160405180910390fd5b506101305490565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036114aa5760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166114dc612392565b6001600160a01b0316146115025760405162461bcd60e51b81526004016105eb90612e99565b61150b8261240a565b611517828260016124b2565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115bb5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016105eb565b506000805160206131e983398151915290565b6115d66123ae565b6040516377aeb0ad60e01b815260040160405180910390fd5b60655433906001600160a01b0316811461165d5760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084016105eb565b610f0f816126ae565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036116b05760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166116e2612392565b6001600160a01b0316146117085760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff1661172b57604051630103019560e11b815260040160405180910390fd5b60008686868686604051602001611746959493929190613103565b60408051601f198184030181529190528051602090910120979650505050505050565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036117b35760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166117e5612392565b6001600160a01b03161461180b5760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff1661182e57604051630103019560e11b815260040160405180910390fd5b5061013454600160a81b900460ff1690565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361188a5760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166118bc612392565b6001600160a01b0316146118e25760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff1661190557604051630103019560e11b815260040160405180910390fd5b50610131546001600160a01b031690565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036119605760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611992612392565b6001600160a01b0316146119b85760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff166119db57604051630103019560e11b815260040160405180910390fd5b6119e36123ae565b61012d80546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f5a674c516c196404869e5f502b5634ce442416bb016dde54b5de4c812cc019e690600090a392915050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611a805760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611ab2612392565b6001600160a01b031614611ad85760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff16611afb57604051630103019560e11b815260040160405180910390fd5b611b036123ae565b6001600160a01b038116611b2a57604051634fdab25360e01b815260040160405180910390fd5b61013580546001600160a01b038381166001600160a01b03198316811790935516908160026106c4565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611b9c5760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611bce612392565b6001600160a01b031614611bf45760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff16611c1757604051630103019560e11b815260040160405180910390fd5b611c1f6123ae565b80600003611c6f5760405162461bcd60e51b815260206004820152601b60248201527f4578706972792074696d652063616e6e6f74206265207a65726f2e000000000060448201526064016105eb565b610130805490829055604051829082907ff62a6f06fde00a303cd5939e6b53762854412c96a196cda26720cedd28af9e7090600090a35050565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611cf35760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611d25612392565b6001600160a01b031614611d4b5760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff16611d6e57604051630103019560e11b815260040160405180910390fd5b5061012e5490565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611dbe5760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611df0612392565b6001600160a01b031614611e165760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff16611e3957604051630103019560e11b815260040160405180910390fd5b61012d546001600160a01b03163314611e675760405163472511eb60e11b81523360048201526024016105eb565b6000611e74600485613154565b905061012e548314611ea85761012e5460405163542fced960e11b81526105eb918591600401918252602082015260400190565b6000611eb78686868686610c12565b90506000611ee57f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183612efb565b61013554604051638a283fc360e01b815263ffffffff861660048201529192506000916001600160a01b0390911690638a283fc390602401602060405180830381865afa158015611f3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5e9190612f0f565b604080516020810182528481529051631b81f82960e01b81529192506001600160a01b03831691631b81f82991611f9a918d9190600401612f2c565b600060405180830381600087803b158015611fb457600080fd5b505af1925050508015611fc5575060015b611fd157610938612f67565b61012e859055600086815261012f6020526040902080546001600160801b031916426001600160801b031617905584600160405188907f25f6d5cc356ee0b49cf708c13c68197947f5740a878a298765e4b18e4afdaf0490600090a4505050505050505050565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036120825760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166120b4612392565b6001600160a01b0316146120da5760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff166120fd57604051630103019560e11b815260040160405180910390fd5b5061012d546001600160a01b031690565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036121585760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661218a612392565b6001600160a01b0316146121b05760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff166121d357604051630103019560e11b815260040160405180910390fd5b50610133546001600160a01b031690565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361222c5760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661225e612392565b6001600160a01b0316146122845760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff166122a757604051630103019560e11b815260040160405180910390fd5b61012e548114610f0f57600081815261012f60205260408120546001600160801b0316908190036122eb5760405163ddae3b7160e01b815260040160405180910390fd5b610130546123026001600160801b038316426130e2565b111561151757604051631d739acf60e11b815260040160405180910390fd5b6123296123ae565b606580546001600160a01b0383166001600160a01b0319909116811790915561235a6033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6000805160206131e9833981519152546001600160a01b031690565b6033546001600160a01b031633146124085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105eb565b565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036124525760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316612484612392565b6001600160a01b0316146124aa5760405162461bcd60e51b81526004016105eb90612e99565b610f0f6123ae565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156124ea576124e5836126c7565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612544575060408051601f3d908101601f1916820190925261254191810190613168565b60015b6125a75760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016105eb565b6000805160206131e983398151915281146126165760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016105eb565b506124e5838383612763565b600054610100900460ff166126495760405162461bcd60e51b81526004016105eb90613181565b61240861278e565b60006010602060ff8416821180159061267057508060ff168460ff1611155b949350505050565b600054610100900460ff1661269f5760405162461bcd60e51b81526004016105eb90613181565b60fb805460ff19166001179055565b606580546001600160a01b0319169055610f0f816127c5565b6001600160a01b0381163b6127345760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016105eb565b6000805160206131e983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61276c83612817565b6000825111806127795750805b156124e5576127888383612857565b50505050565b600054610100900460ff166127b55760405162461bcd60e51b81526004016105eb90613181565b6127bd61294d565b61240861297c565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b612820816126c7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6128bf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016105eb565b600080846001600160a01b0316846040516128da91906131cc565b600060405180830381855af49150503d8060008114612915576040519150601f19603f3d011682016040523d82523d6000602084013e61291a565b606091505b50915091506129428282604051806060016040528060278152602001613209602791396129a3565b925050505b92915050565b600054610100900460ff166129745760405162461bcd60e51b81526004016105eb90613181565b6124086129bc565b600054610100900460ff166124085760405162461bcd60e51b81526004016105eb90613181565b606083156129b2575081611347565b61134783836129ec565b600054610100900460ff166129e35760405162461bcd60e51b81526004016105eb90613181565b612408336126ae565b8151156109575781518083602001fd5b6001600160a01b0381168114610f0f57600080fd5b600060208284031215612a2357600080fd5b8135611347816129fc565b80610100810183101561294757600080fd5b803563ffffffff8116811461139057600080fd5b60008083601f840112612a6657600080fd5b50813567ffffffffffffffff811115612a7e57600080fd5b6020830191508360208260051b8501011115612a9957600080fd5b9250929050565b6000806000806000806101808789031215612aba57600080fd5b612ac48888612a2e565b95506101008701359450612adb6101208801612a40565b935061014087013567ffffffffffffffff811115612af857600080fd5b612b0489828a01612a54565b979a969950949794969561016090950135949350505050565b60008083601f840112612b2f57600080fd5b50813567ffffffffffffffff811115612b4757600080fd5b602083019150836020828501011115612a9957600080fd5b600080600080600060808688031215612b7757600080fd5b853567ffffffffffffffff811115612b8e57600080fd5b612b9a88828901612b1d565b9096509450506020860135925060408601359150612bba60608701612a40565b90509295509295909350565b60008060008060006101808688031215612bdf57600080fd5b85359450602086013593506040860135925060608601359150612bba8760808801612a2e565b600080600080600060a08688031215612c1d57600080fd5b853560ff81168114612c2e57600080fd5b9450602086013593506040860135612c45816129fc565b92506060860135612c55816129fc565b91506080860135612c65816129fc565b809150509295509295909350565b600060208284031215612c8557600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715612cc857612cc8612c8c565b6040525050565b60008060408385031215612ce257600080fd5b8235612ced816129fc565b915060208381013567ffffffffffffffff80821115612d0b57600080fd5b818601915086601f830112612d1f57600080fd5b813581811115612d3157612d31612c8c565b6040519150612d49601f8201601f1916850183612ca2565b8082528784828501011115612d5d57600080fd5b80848401858401376000848284010152508093505050509250929050565b600080600080600060808688031215612d9357600080fd5b612d9c86612a40565b94506020860135935060408601359250606086013567ffffffffffffffff811115612dc657600080fd5b612dd288828901612a54565b969995985093965092949392505050565b60008060008060006101608688031215612dfc57600080fd5b612e068787612a2e565b945061010086013567ffffffffffffffff811115612e2357600080fd5b612e2f88828901612b1d565b96999098509596610120810135966101409091013595509350505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b600082612f0a57612f0a612ee5565b500690565b600060208284031215612f2157600080fd5b8151611347816129fc565b61012081016101008085843782018360005b6001811015612f5d578151835260209283019290910190600101612f3e565b5050509392505050565b600060033d11156111e15760046000803e5060005160e01c90565b600060443d1015612f905790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612fc057505050505090565b8285019150815181811115612fd85750505050505090565b843d8701016020828501011115612ff25750505050505090565b61300160208286010187612ca2565b509095945050505050565b60005b8381101561302757818101518382015260200161300f565b50506000910152565b602081526000825180602084015261304f81604085016020870161300c565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b61018081016101008085843782018360005b6004811015612f5d5781518352602092830192909101906001016130c3565b8181038181111561294757634e487b7160e01b600052601160045260246000fd5b60e086901b6001600160e01b0319168152600481018590526024810184905260006001600160fb1b0383111561313857600080fd5b8260051b80856044850137919091016044019695505050505050565b60008261316357613163612ee5565b500490565b60006020828403121561317a57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082516131de81846020870161300c565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220988abd93bd0eacc32fed88af248acf0831a9aa2879d35aff2e53ffa3126eef5164736f6c63430008150033",
    "sourceMap": "442:11347:44:-:0;;;1332:4:23;1289:48;;442:11347:44;;;;;;;;;-1:-1:-1;13736:22:43;:20;:22::i;:::-;442:11347:44;;5928:279:22;5996:13;;;;;;;5995:14;5987:66;;;;-1:-1:-1;;;5987:66:22;;216:2:77;5987:66:22;;;198:21:77;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:77;;;338:37;392:19;;5987:66:22;;;;;;;;6067:12;;6082:15;6067:12;;;:30;6063:138;;;6113:12;:30;;-1:-1:-1;;6113:30:22;6128:15;6113:30;;;;;;6162:28;;564:36:77;;;6162:28:22;;552:2:77;537:18;6162:28:22;;;;;;;6063:138;5928:279::o;422:184:77:-;442:11347:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101cd5760003560e01c806379ba5097116100f7578063c70aa72711610095578063f134b6ca11610064578063f134b6ca14610539578063f2038f951461054e578063f2358e1d14610563578063f2fde38b1461058357600080fd5b8063c70aa727146104c6578063d7b0fef1146104e6578063e30c3978146104fb578063ea10fbbe1461051957600080fd5b80638e5cdd50116100d15780638e5cdd501461044a5780638fc22e9f14610471578063a7bba58214610486578063aa4a729e146104a657600080fd5b806379ba5097146103f75780638c76a9091461040c5780638da5cb5b1461042c57600080fd5b806338c870651161016f5780634f1ef2861161013e5780634f1ef2861461037657806352d1902d14610389578063561f204b1461039e578063715018a6146103e257600080fd5b806338c87065146102c75780633e8919b6146102e75780633f7c178d1461031457806343f974cb1461036157600080fd5b80632f059fca116101ab5780632f059fca1461023457806331e4e99214610254578063354ca120146102875780633659cfe6146102a757600080fd5b80630e3a12f3146101d25780632217b211146101f457806329b6eca914610214575b600080fd5b3480156101de57600080fd5b506101f26101ed366004612a11565b6105a3565b005b34801561020057600080fd5b506101f261020f366004612aa0565b6106f1565b34801561022057600080fd5b506101f261022f366004612a11565b6109f3565b34801561024057600080fd5b506101f261024f366004612a11565b610af6565b34801561026057600080fd5b5061027461026f366004612b5f565b610c12565b6040519081526020015b60405180910390f35b34801561029357600080fd5b506101f26102a2366004612bc6565b610d00565b3480156102b357600080fd5b506101f26102c2366004612a11565b610e4a565b3480156102d357600080fd5b506101f26102e2366004612c05565b610f12565b3480156102f357600080fd5b506102fc61110d565b6040516001600160a01b03909116815260200161027e565b34801561032057600080fd5b5061033461032f366004612c73565b6111e4565b60408051825181526020808401516001600160801b0316908201529181015115159082015260600161027e565b34801561036d57600080fd5b50610274611395565b6101f2610384366004612ccf565b611462565b34801561039557600080fd5b5061027461151b565b3480156103aa57600080fd5b506040805160608082018352600080835260208084018290529284018190528351918201845280825291810182905291820152610334565b3480156103ee57600080fd5b506101f26115ce565b34801561040357600080fd5b506101f26115ef565b34801561041857600080fd5b50610274610427366004612d7b565b611666565b34801561043857600080fd5b506033546001600160a01b03166102fc565b34801561045657600080fd5b5061045f611769565b60405160ff909116815260200161027e565b34801561047d57600080fd5b506102fc611840565b34801561049257600080fd5b506102fc6104a1366004612a11565b611916565b3480156104b257600080fd5b506101f26104c1366004612a11565b611a38565b3480156104d257600080fd5b506101f26104e1366004612c73565b611b54565b3480156104f257600080fd5b50610274611ca9565b34801561050757600080fd5b506065546001600160a01b03166102fc565b34801561052557600080fd5b506101f2610534366004612de3565b611d76565b34801561054557600080fd5b506102fc612038565b34801561055a57600080fd5b506102fc61210e565b34801561056f57600080fd5b506101f261057e366004612c73565b6121e4565b34801561058f57600080fd5b506101f261059e366004612a11565b612321565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105f45760405162461bcd60e51b81526004016105eb90612e4d565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610626612392565b6001600160a01b03161461064c5760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff1661066f57604051630103019560e11b815260040160405180910390fd5b6106776123ae565b6001600160a01b03811661069e5760405163baa3de5f60e01b815260040160405180910390fd5b61013380546001600160a01b038381166001600160a01b03198316811790935516908160035b6040517fd194b8423e9cb3c7cbebbbc3fe7f79dc2cbe0b40e03270d975abff491504c7b190600090a45050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107395760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661076b612392565b6001600160a01b0316146107915760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff166107b457604051630103019560e11b815260040160405180910390fd5b61012d546001600160a01b031633146107e25760405163472511eb60e11b81523360048201526024016105eb565b61012e5485146108145761012e5460405163542fced960e11b81526105eb918791600401918252602082015260400190565b60006108238587848787611666565b905060006108517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183612efb565b61013154604051638a283fc360e01b8152600481018790529192506000916001600160a01b0390911690638a283fc390602401602060405180830381865afa1580156108a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c59190612f0f565b604080516020810182528481529051631b81f82960e01b81529192506001600160a01b03831691631b81f82991610901918d9190600401612f2c565b600060405180830381600087803b15801561091b57600080fd5b505af192505050801561092c575060015b61098c57610938612f67565b806308c379a003610971575061094c612f82565b806109575750610973565b8060405162461bcd60e51b81526004016105eb9190613030565b505b604051631e716a8b60e01b815260040160405180910390fd5b61012e849055600088815261012f6020526040812080546001600160801b031916426001600160801b031617905584906040518a907f25f6d5cc356ee0b49cf708c13c68197947f5740a878a298765e4b18e4afdaf0490600090a45b505050505050505050565b600054600290610100900460ff16158015610a15575060005460ff8083169116105b610a315760405162461bcd60e51b81526004016105eb90613063565b6000805461ffff191660ff8316176101001790556001600160a01b038216610a6c57604051634fdab25360e01b815260040160405180910390fd5b61013580546001600160a01b0319166001600160a01b0384161790556040517fe416bec7423c88399c6c76ff0386950a64e454d25b846ef46c397bf835c7df7a90600090a16000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610b3e5760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b70612392565b6001600160a01b031614610b965760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff16610bb957604051630103019560e11b815260040160405180910390fd5b610bc16123ae565b6001600160a01b038116610be857604051634fdab25360e01b815260040160405180910390fd5b61013180546001600160a01b038381166001600160a01b03198316811790935516908160016106c4565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610c5c5760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c8e612392565b6001600160a01b031614610cb45760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff16610cd757604051630103019560e11b815260040160405180910390fd5b604051600483028088833781810195865260209095019390935250506040909101902092915050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610d485760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610d7a612392565b6001600160a01b031614610da05760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff16610dc357604051630103019560e11b815260040160405180910390fd5b610dcc856121e4565b610133546040805160808101825287815260208101869052808201879052606081018590529051632357251160e01b81526001600160a01b0390921691632357251191610e1e918591906004016130b1565b60006040518083038186803b158015610e3657600080fd5b505afa1580156109e8573d6000803e3d6000fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610e925760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610ec4612392565b6001600160a01b031614610eea5760405162461bcd60e51b81526004016105eb90612e99565b610ef38161240a565b60408051600080825260208201909252610f0f918391906124b2565b50565b600054600190610100900460ff16158015610f34575060005460ff8083169116105b610f505760405162461bcd60e51b81526004016105eb90613063565b6000805461ffff191660ff8316176101001790556001600160a01b038416610f8b57604051634fdab25360e01b815260040160405180910390fd5b6001600160a01b038316610fb257604051634fdab25360e01b815260040160405180910390fd5b6001600160a01b038216610fd95760405163baa3de5f60e01b815260040160405180910390fd5b610fe1612622565b610fea86612651565b61100c57604051630220cee360e61b815260ff871660048201526024016105eb565b610134805460ff60a81b1916600160a81b60ff891602179055610e106101305561012e85905561013180546001600160a01b03199081166001600160a01b0387811691909117909255610132805482168684161790556101338054821685841617905560335461012d8054919093169116179055611088612678565b6040805160ff88168152602081018790527fd1bcc66c061c32a21f569d138c2dadef4a38a0636309881954af5f44010ec1d8910160405180910390a16000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050505050565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036111575760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611189612392565b6001600160a01b0316146111af5760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff166111d257604051630103019560e11b815260040160405180910390fd5b50610135546001600160a01b03165b90565b60408051606081018252600080825260208201819052918101919091526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036112495760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661127b612392565b6001600160a01b0316146112a15760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff166112c457604051630103019560e11b815260040160405180910390fd5b61012e5482036112f35750506040805160608101825261012e5481526000602082015260019181019190915290565b600082815261012f60205260408120546001600160801b03169081900361134e5760408051606080820183526000808352602080840182905292840181905283519182018452808252918101829052918201525b9392505050565b610130546000906113686001600160801b038416426130e2565b604080516060810182528781526001600160801b039095166020860152911015908301525090505b919050565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036113df5760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611411612392565b6001600160a01b0316146114375760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff1661145a57604051630103019560e11b815260040160405180910390fd5b506101305490565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036114aa5760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166114dc612392565b6001600160a01b0316146115025760405162461bcd60e51b81526004016105eb90612e99565b61150b8261240a565b611517828260016124b2565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115bb5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016105eb565b506000805160206131e983398151915290565b6115d66123ae565b6040516377aeb0ad60e01b815260040160405180910390fd5b60655433906001600160a01b0316811461165d5760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084016105eb565b610f0f816126ae565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036116b05760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166116e2612392565b6001600160a01b0316146117085760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff1661172b57604051630103019560e11b815260040160405180910390fd5b60008686868686604051602001611746959493929190613103565b60408051601f198184030181529190528051602090910120979650505050505050565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036117b35760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166117e5612392565b6001600160a01b03161461180b5760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff1661182e57604051630103019560e11b815260040160405180910390fd5b5061013454600160a81b900460ff1690565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361188a5760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166118bc612392565b6001600160a01b0316146118e25760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff1661190557604051630103019560e11b815260040160405180910390fd5b50610131546001600160a01b031690565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036119605760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611992612392565b6001600160a01b0316146119b85760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff166119db57604051630103019560e11b815260040160405180910390fd5b6119e36123ae565b61012d80546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f5a674c516c196404869e5f502b5634ce442416bb016dde54b5de4c812cc019e690600090a392915050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611a805760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611ab2612392565b6001600160a01b031614611ad85760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff16611afb57604051630103019560e11b815260040160405180910390fd5b611b036123ae565b6001600160a01b038116611b2a57604051634fdab25360e01b815260040160405180910390fd5b61013580546001600160a01b038381166001600160a01b03198316811790935516908160026106c4565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611b9c5760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611bce612392565b6001600160a01b031614611bf45760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff16611c1757604051630103019560e11b815260040160405180910390fd5b611c1f6123ae565b80600003611c6f5760405162461bcd60e51b815260206004820152601b60248201527f4578706972792074696d652063616e6e6f74206265207a65726f2e000000000060448201526064016105eb565b610130805490829055604051829082907ff62a6f06fde00a303cd5939e6b53762854412c96a196cda26720cedd28af9e7090600090a35050565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611cf35760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611d25612392565b6001600160a01b031614611d4b5760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff16611d6e57604051630103019560e11b815260040160405180910390fd5b5061012e5490565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611dbe5760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611df0612392565b6001600160a01b031614611e165760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff16611e3957604051630103019560e11b815260040160405180910390fd5b61012d546001600160a01b03163314611e675760405163472511eb60e11b81523360048201526024016105eb565b6000611e74600485613154565b905061012e548314611ea85761012e5460405163542fced960e11b81526105eb918591600401918252602082015260400190565b6000611eb78686868686610c12565b90506000611ee57f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183612efb565b61013554604051638a283fc360e01b815263ffffffff861660048201529192506000916001600160a01b0390911690638a283fc390602401602060405180830381865afa158015611f3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5e9190612f0f565b604080516020810182528481529051631b81f82960e01b81529192506001600160a01b03831691631b81f82991611f9a918d9190600401612f2c565b600060405180830381600087803b158015611fb457600080fd5b505af1925050508015611fc5575060015b611fd157610938612f67565b61012e859055600086815261012f6020526040902080546001600160801b031916426001600160801b031617905584600160405188907f25f6d5cc356ee0b49cf708c13c68197947f5740a878a298765e4b18e4afdaf0490600090a4505050505050505050565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036120825760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166120b4612392565b6001600160a01b0316146120da5760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff166120fd57604051630103019560e11b815260040160405180910390fd5b5061012d546001600160a01b031690565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036121585760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661218a612392565b6001600160a01b0316146121b05760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff166121d357604051630103019560e11b815260040160405180910390fd5b50610133546001600160a01b031690565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361222c5760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661225e612392565b6001600160a01b0316146122845760405162461bcd60e51b81526004016105eb90612e99565b60fb5460ff166122a757604051630103019560e11b815260040160405180910390fd5b61012e548114610f0f57600081815261012f60205260408120546001600160801b0316908190036122eb5760405163ddae3b7160e01b815260040160405180910390fd5b610130546123026001600160801b038316426130e2565b111561151757604051631d739acf60e11b815260040160405180910390fd5b6123296123ae565b606580546001600160a01b0383166001600160a01b0319909116811790915561235a6033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6000805160206131e9833981519152546001600160a01b031690565b6033546001600160a01b031633146124085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105eb565b565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036124525760405162461bcd60e51b81526004016105eb90612e4d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316612484612392565b6001600160a01b0316146124aa5760405162461bcd60e51b81526004016105eb90612e99565b610f0f6123ae565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156124ea576124e5836126c7565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612544575060408051601f3d908101601f1916820190925261254191810190613168565b60015b6125a75760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016105eb565b6000805160206131e983398151915281146126165760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016105eb565b506124e5838383612763565b600054610100900460ff166126495760405162461bcd60e51b81526004016105eb90613181565b61240861278e565b60006010602060ff8416821180159061267057508060ff168460ff1611155b949350505050565b600054610100900460ff1661269f5760405162461bcd60e51b81526004016105eb90613181565b60fb805460ff19166001179055565b606580546001600160a01b0319169055610f0f816127c5565b6001600160a01b0381163b6127345760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016105eb565b6000805160206131e983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61276c83612817565b6000825111806127795750805b156124e5576127888383612857565b50505050565b600054610100900460ff166127b55760405162461bcd60e51b81526004016105eb90613181565b6127bd61294d565b61240861297c565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b612820816126c7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6128bf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016105eb565b600080846001600160a01b0316846040516128da91906131cc565b600060405180830381855af49150503d8060008114612915576040519150601f19603f3d011682016040523d82523d6000602084013e61291a565b606091505b50915091506129428282604051806060016040528060278152602001613209602791396129a3565b925050505b92915050565b600054610100900460ff166129745760405162461bcd60e51b81526004016105eb90613181565b6124086129bc565b600054610100900460ff166124085760405162461bcd60e51b81526004016105eb90613181565b606083156129b2575081611347565b61134783836129ec565b600054610100900460ff166129e35760405162461bcd60e51b81526004016105eb90613181565b612408336126ae565b8151156109575781518083602001fd5b6001600160a01b0381168114610f0f57600080fd5b600060208284031215612a2357600080fd5b8135611347816129fc565b80610100810183101561294757600080fd5b803563ffffffff8116811461139057600080fd5b60008083601f840112612a6657600080fd5b50813567ffffffffffffffff811115612a7e57600080fd5b6020830191508360208260051b8501011115612a9957600080fd5b9250929050565b6000806000806000806101808789031215612aba57600080fd5b612ac48888612a2e565b95506101008701359450612adb6101208801612a40565b935061014087013567ffffffffffffffff811115612af857600080fd5b612b0489828a01612a54565b979a969950949794969561016090950135949350505050565b60008083601f840112612b2f57600080fd5b50813567ffffffffffffffff811115612b4757600080fd5b602083019150836020828501011115612a9957600080fd5b600080600080600060808688031215612b7757600080fd5b853567ffffffffffffffff811115612b8e57600080fd5b612b9a88828901612b1d565b9096509450506020860135925060408601359150612bba60608701612a40565b90509295509295909350565b60008060008060006101808688031215612bdf57600080fd5b85359450602086013593506040860135925060608601359150612bba8760808801612a2e565b600080600080600060a08688031215612c1d57600080fd5b853560ff81168114612c2e57600080fd5b9450602086013593506040860135612c45816129fc565b92506060860135612c55816129fc565b91506080860135612c65816129fc565b809150509295509295909350565b600060208284031215612c8557600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715612cc857612cc8612c8c565b6040525050565b60008060408385031215612ce257600080fd5b8235612ced816129fc565b915060208381013567ffffffffffffffff80821115612d0b57600080fd5b818601915086601f830112612d1f57600080fd5b813581811115612d3157612d31612c8c565b6040519150612d49601f8201601f1916850183612ca2565b8082528784828501011115612d5d57600080fd5b80848401858401376000848284010152508093505050509250929050565b600080600080600060808688031215612d9357600080fd5b612d9c86612a40565b94506020860135935060408601359250606086013567ffffffffffffffff811115612dc657600080fd5b612dd288828901612a54565b969995985093965092949392505050565b60008060008060006101608688031215612dfc57600080fd5b612e068787612a2e565b945061010086013567ffffffffffffffff811115612e2357600080fd5b612e2f88828901612b1d565b96999098509596610120810135966101409091013595509350505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b600082612f0a57612f0a612ee5565b500690565b600060208284031215612f2157600080fd5b8151611347816129fc565b61012081016101008085843782018360005b6001811015612f5d578151835260209283019290910190600101612f3e565b5050509392505050565b600060033d11156111e15760046000803e5060005160e01c90565b600060443d1015612f905790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612fc057505050505090565b8285019150815181811115612fd85750505050505090565b843d8701016020828501011115612ff25750505050505090565b61300160208286010187612ca2565b509095945050505050565b60005b8381101561302757818101518382015260200161300f565b50506000910152565b602081526000825180602084015261304f81604085016020870161300c565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b61018081016101008085843782018360005b6004811015612f5d5781518352602092830192909101906001016130c3565b8181038181111561294757634e487b7160e01b600052601160045260246000fd5b60e086901b6001600160e01b0319168152600481018590526024810184905260006001600160fb1b0383111561313857600080fd5b8260051b80856044850137919091016044019695505050505050565b60008261316357613163612ee5565b500490565b60006020828403121561317a57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082516131de81846020870161300c565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220988abd93bd0eacc32fed88af248acf0831a9aa2879d35aff2e53ffa3126eef5164736f6c63430008150033",
    "sourceMap": "442:11347:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27081:492:43;;;;;;;;;;-1:-1:-1;27081:492:43;;;;;:::i;:::-;;:::i;:::-;;19019:2122;;;;;;;;;;-1:-1:-1;19019:2122:43;;;;;:::i;:::-;;:::i;4039:327:44:-;;;;;;;;;;-1:-1:-1;4039:327:44;;;;;:::i;:::-;;:::i;25868:522:43:-;;;;;;;;;;-1:-1:-1;25868:522:43;;;;;:::i;:::-;;:::i;11102:685:44:-;;;;;;;;;;-1:-1:-1;11102:685:44;;;;;:::i;:::-;;:::i;:::-;;;3375:25:77;;;3363:2;3348:18;11102:685:44;;;;;;;;30701:499:43;;;;;;;;;;-1:-1:-1;30701:499:43;;;;;:::i;:::-;;:::i;3317:197:23:-;;;;;;;;;;-1:-1:-1;3317:197:23;;;;;:::i;:::-;;:::i;15045:1346:43:-;;;;;;;;;;-1:-1:-1;15045:1346:43;;;;;:::i;:::-;;:::i;8798:228:44:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;5274:32:77;;;5256:51;;5244:2;5229:18;8798:228:44;5110:203:77;23429:567:43;;;;;;;;;;-1:-1:-1;23429:567:43;;;;;:::i;:::-;;:::i;:::-;;;;5721:13:77;;5703:32;;5795:4;5783:17;;;5777:24;-1:-1:-1;;;;;5773:65:77;5751:20;;;5744:95;5897:17;;;5891:24;5884:32;5877:40;5855:20;;;5848:70;5691:2;5676:18;23429:567:43;5503:421:77;27749:189:43;;;;;;;;;;;;;:::i;3763:222:23:-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;7325:120:43:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;7413:25:43;;;;;;;;;;;;;;;;;;;;7325:120;;4649:109:45;;;;;;;;;;;;;:::i;2010:206:17:-;;;;;;;;;;;;;:::i;22271:413:43:-;;;;;;;;;;-1:-1:-1;22271:413:43;;;;;:::i;:::-;;:::i;1441:85:18:-;;;;;;;;;;-1:-1:-1;1513:6:18;;-1:-1:-1;;;;;1513:6:18;1441:85;;28716:119:43;;;;;;;;;;;;;:::i;:::-;;;8278:4:77;8266:17;;;8248:36;;8236:2;8221:18;28716:119:43;8106:184:77;25309:231:43;;;;;;;;;;;;;:::i;29482:384::-;;;;;;;;;;-1:-1:-1;29482:384:43;;;;;:::i;:::-;;:::i;9346:517:44:-;;;;;;;;;;-1:-1:-1;9346:517:44;;;;;:::i;:::-;;:::i;28170:402:43:-;;;;;;;;;;-1:-1:-1;28170:402:43;;;;;:::i;:::-;;:::i;22812:121::-;;;;;;;;;;;;;:::i;1123:99:17:-;;;;;;;;;;-1:-1:-1;1202:13:17;;-1:-1:-1;;;;;1202:13:17;1123:99;;6347:2113:44;;;;;;;;;;-1:-1:-1;6347:2113:44;;;;;:::i;:::-;;:::i;29056:133:43:-;;;;;;;;;;;;;:::i;26573:205::-;;;;;;;;;;;;;:::i;24439:638::-;;;;;;;;;;-1:-1:-1;24439:638:43;;;;;:::i;:::-;;:::i;1415:178:17:-;;;;;;;;;;-1:-1:-1;1415:178:17;;;;;:::i;:::-;;:::i;27081:492:43:-;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;;;;;;;;;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;1334:13:18::2;:11;:13::i;:::-;-1:-1:-1::0;;;;;27252:34:43;::::3;27248:89;;27309:17;;-1:-1:-1::0;;;27309:17:43::3;;;;;;;;;;;27248:89;27380:17;::::0;;-1:-1:-1;;;;;27407:31:43;;::::3;-1:-1:-1::0;;;;;;27407:31:43;::::3;::::0;::::3;::::0;;;27380:17:::3;::::0;;27484:28:::3;27453:113;;::::0;::::3;::::0;;;::::3;27238:335;27081:492:::0;:::o;19019:2122::-;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;31743:17:43::2;::::0;-1:-1:-1;;;;;31743:17:43::2;31729:10;:31;31725:93;;31783:24;::::0;-1:-1:-1;;;31783:24:43;;31796:10:::2;31783:24;::::0;::::2;5256:51:77::0;5229:18;;31783:24:43::2;5110:203:77::0;31725:93:43::2;19310:11:::3;;19299:7;:22;19295:95;;19367:11;::::0;19344:35:::3;::::0;-1:-1:-1;;;19344:35:43;;::::3;::::0;19358:7;;19344:35:::3;;10104:25:77::0;;;10160:2;10145:18;;10138:34;10092:2;10077:18;;9930:248;19295:95:43::3;19480:17;19500:112;19552:10;19564:7;19573:8;19583:19;;19500:38;:112::i;:::-;19480:132:::0;-1:-1:-1;19911:22:43::3;19936:39;4362:77;19480:132:::0;19936:39:::3;:::i;:::-;20105:23;::::0;:66:::3;::::0;-1:-1:-1;;;20105:66:43;;::::3;::::0;::::3;3375:25:77::0;;;19911:64:43;;-1:-1:-1;20059:31:43::3;::::0;-1:-1:-1;;;;;20105:23:43;;::::3;::::0;:38:::3;::::0;3348:18:77;;20105:66:43::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20240:63;::::0;;::::3;::::0;::::3;::::0;;;;;;;-1:-1:-1;;;20240:63:43;;20059:112;;-1:-1:-1;;;;;;20240:29:43;::::3;::::0;::::3;::::0;:63:::3;::::0;20270:14;;20240:63;::::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;20236:899;;;;:::i;:::-;;;::::0;::::3;;;;;:::i;:::-;;;;;;;;20887:9;20880:17;;-1:-1:-1::0;;;20880:17:43::3;;;;;;;;:::i;20236:899::-;;;21100:24;;-1:-1:-1::0;;;21100:24:43::3;;;;;;;;;;;20236:899;20472:11;:22:::0;;;20640:20:::3;::::0;;;:11:::3;:20;::::0;;;;:47;;-1:-1:-1;;;;;;20640:47:43::3;20671:15;-1:-1:-1::0;;;;;20640:47:43::3;;::::0;;20472:22;;20707:52:::3;::::0;20719:7;;20707:52:::3;::::0;;;::::3;20236:899;19285:1856;;;19019:2122:::0;;;;;;:::o;4039:327:44:-;4871:13:22;;4127:1:44;;4871:13:22;;;;;4870:14;:40;;;;-1:-1:-1;4888:12:22;;:22;;;;:12;;:22;4870:40;4862:99;;;;-1:-1:-1;;;4862:99:22;;;;;;;:::i;:::-;4971:12;:22;;-1:-1:-1;;5003:20:22;4971:22;;;5003:20;4971:22;5003:20;;;-1:-1:-1;;;;;4144:46:44;::::1;4140:104;;4213:20;;-1:-1:-1::0;;;4213:20:44::1;;;;;;;;;;;4140:104;4254:22;:48:::0;;-1:-1:-1;;;;;;4254:48:44::1;-1:-1:-1::0;;;;;4254:48:44;::::1;;::::0;;4318:41:::1;::::0;::::1;::::0;-1:-1:-1;;4318:41:44::1;5060:5:22::0;5044:21;;-1:-1:-1;;5044:21:22;;;5080:20;;8278:4:77;8266:17;;8248:36;;5080:20:22;;8236:2:77;8221:18;5080:20:22;;;;;;;4039:327:44;;:::o;25868:522:43:-;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;1334:13:18::2;:11;:13::i;:::-;-1:-1:-1::0;;;;;26057:31:43;::::3;26053:89;;26111:20;;-1:-1:-1::0;;;26111:20:43::3;;;;;;;;;;;26053:89;26183:23;::::0;;-1:-1:-1;;;;;26216:34:43;;::::3;-1:-1:-1::0;;;;;;26216:34:43;::::3;::::0;::::3;::::0;;;26183:23:::3;::::0;;;26265:118:::3;::::0;11102:685:44;11330:12;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;11402:4:44::2;11396:11;11458:1;11447:9;11443:17;11529:15;11499:28;11486:11;11473:72;11577:33:::0;;::::2;11623:28:::0;;;11688:2:::2;11671:20:::0;;::::2;11664:38:::0;;;;-1:-1:-1;;11750:2:44::2;11746:24:::0;;::::2;11723:48:::0;;;11102:685;-1:-1:-1;;11102:685:44:o;30701:499:43:-;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;30989:22:43::2;31006:4;30989:16;:22::i;:::-;31077:17;::::0;:116:::2;::::0;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;;;;;;;;;;;;;;;-1:-1:-1;;;31077:116:43;;-1:-1:-1;;;;;31077:17:43;;::::2;::::0;:29:::2;::::0;:116:::2;::::0;31120:5;;31077:116;::::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;3317:197:23::0;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;3400:36:::1;3418:17;3400;:36::i;:::-;3487:12;::::0;;3497:1:::1;3487:12:::0;;;::::1;::::0;::::1;::::0;;;3446:61:::1;::::0;3468:17;;3487:12;3446:21:::1;:61::i;:::-;3317:197:::0;:::o;15045:1346:43:-;4871:13:22;;15299:1:43;;4871:13:22;;;;;4870:14;:40;;;;-1:-1:-1;4888:12:22;;:22;;;;:12;;:22;4870:40;4862:99;;;;-1:-1:-1;;;4862:99:22;;;;;;;:::i;:::-;4971:12;:22;;-1:-1:-1;;5003:20:22;4971:22;;;5003:20;4971:22;5003:20;;;-1:-1:-1;;;;;15316:47:43;::::1;15312:105;;15386:20;;-1:-1:-1::0;;;15386:20:43::1;;;;;;;;;;;15312:105;-1:-1:-1::0;;;;;15431:44:43;::::1;15427:102;;15498:20;;-1:-1:-1::0;;;15498:20:43::1;;;;;;;;;;;15427:102;-1:-1:-1::0;;;;;15543:41:43;::::1;15539:96;;15607:17;;-1:-1:-1::0;;;15607:17:43::1;;;;;;;;;;;15539:96;15719:16;:14;:16::i;:::-;15751:48;15788:10;15751:36;:48::i;:::-;15746:119;;15822:32;::::0;-1:-1:-1;;;15822:32:43;;8278:4:77;8266:17;;15822:32:43::1;::::0;::::1;8248:36:77::0;8221:18;;15822:32:43::1;8106:184:77::0;15746:119:43::1;15932:9;:22:::0;;-1:-1:-1;;;;15932:22:43::1;-1:-1:-1::0;;;15932:22:43::1;::::0;::::1;;;::::0;;15984:7:::1;15964:17;:27:::0;16001:11:::1;:25:::0;;;16036:23:::1;:50:::0;;-1:-1:-1;;;;;;16036:50:43;;::::1;-1:-1:-1::0;;;;;16036:50:43;;::::1;::::0;;;::::1;::::0;;;16096:23:::1;:47:::0;;;::::1;::::0;;::::1;;::::0;;16153:17:::1;:38:::0;;;::::1;::::0;;::::1;;::::0;;1513:6:18;;16201:17:43::1;:27:::0;;1513:6:18;;;;16201:27:43;::::1;;::::0;;16288:18:::1;:16;:18::i;:::-;16322:62;::::0;;14161:4:77;14149:17;;14131:36;;14198:2;14183:18;;14176:34;;;16322:62:43::1;::::0;14104:18:77;16322:62:43::1;;;;;;;5060:5:22::0;5044:21;;-1:-1:-1;;5044:21:22;;;5080:20;;8278:4:77;8266:17;;8248:36;;5080:20:22;;8236:2:77;8221:18;5080:20:22;;;;;;;15045:1346:43;;;;;;:::o;8798:228:44:-;8958:7;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;-1:-1:-1::0;8996:22:44::2;::::0;-1:-1:-1;;;;;8996:22:44::2;1144:1:74;8798:228:44::0;:::o;23429:567:43:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;23608:11:43::2;;23600:4;:19:::0;23596:394:::2;;-1:-1:-1::0;;23642:30:43::2;::::0;;::::2;::::0;::::2;::::0;;23651:11:::2;::::0;23642:30;;-1:-1:-1;23642:30:43::2;::::0;::::2;::::0;23667:4:::2;23642:30:::0;;;;;;;;23429:567::o;23596:394::-:2;23703:21;23727:17:::0;;;:11:::2;:17;::::0;;;;;-1:-1:-1;;;;;23727:17:43::2;::::0;23763:18;;;23759:78:::2;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;7413:25:43;;;;;;;;;;;;;;;;;;;;23808:14:::2;23801:21:::0;23429:567;-1:-1:-1;;;23429:567:43:o;23759:78::-:2;23902:17;::::0;23851:12:::2;::::0;23868:31:::2;-1:-1:-1::0;;;;;23868:31:43;::::2;:15;:31;:::i;:::-;23941:38;::::0;;::::2;::::0;::::2;::::0;;;;;-1:-1:-1;;;;;23941:38:43;;::::2;;::::0;::::2;::::0;23868:51;-1:-1:-1;23866:54:43::2;23941:38:::0;;;;-1:-1:-1;23941:38:43;-1:-1:-1;23596:394:43::2;23429:567:::0;;;:::o;27749:189::-;27884:7;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;-1:-1:-1::0;27914:17:43::2;::::0;27749:189;:::o;3763:222:23:-;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;3880:36:::1;3898:17;3880;:36::i;:::-;3926:52;3948:17;3967:4;3973;3926:21;:52::i;:::-;3763:222:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:23;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:23;;14653:2:77;2308:92:23;;;14635:21:77;14692:2;14672:18;;;14665:30;14731:34;14711:18;;;14704:62;14802:26;14782:18;;;14775:54;14846:19;;2308:92:23;14451:420:77;2308:92:23;-1:-1:-1;;;;;;;;;;;;3006:131:23;:::o;4649:109:45:-;1334:13:18;:11;:13::i;:::-;4726:25:45::1;;-1:-1:-1::0;;;4726:25:45::1;;;;;;;;;;;2010:206:17::0;1202:13;;929:10:25;;-1:-1:-1;;;;;1202:13:17;2103:24;;2095:78;;;;-1:-1:-1;;;2095:78:17;;15078:2:77;2095:78:17;;;15060:21:77;15117:2;15097:18;;;15090:30;15156:34;15136:18;;;15129:62;-1:-1:-1;;;15207:18:77;;;15200:39;15256:19;;2095:78:17;14876:405:77;2095:78:17;2183:26;2202:6;2183:18;:26::i;22271:413:43:-;22506:12;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;22530:24:43::2;22586:10;22598:7;22607:8;22617:19;;22569:68;;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;22569:68:43;;::::2;::::0;;;;;;22655:22;;22569:68:::2;22655:22:::0;;::::2;::::0;;22271:413;-1:-1:-1;;;;;;;22271:413:43:o;28716:119::-;28795:5;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;-1:-1:-1::0;28819:9:43::2;::::0;-1:-1:-1;;;28819:9:43;::::2;;;::::0;28716:119::o;25309:231::-;25471:7;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;-1:-1:-1::0;25509:23:43::2;::::0;-1:-1:-1;;;;;25509:23:43::2;25309:231:::0;:::o;29482:384::-;29648:7;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;1334:13:18::2;:11;:13::i;:::-;29693:17:43::3;::::0;;-1:-1:-1;;;;;29720:39:43;;::::3;-1:-1:-1::0;;;;;;29720:39:43;::::3;::::0;::::3;::::0;;;29774:57:::3;::::0;29693:17;::::3;::::0;29720:39;29693:17;;29774:57:::3;::::0;29671:19:::3;::::0;29774:57:::3;29848:11:::0;29482:384;-1:-1:-1;;29482:384:43:o;9346:517:44:-;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;1334:13:18::2;:11;:13::i;:::-;-1:-1:-1::0;;;;;9533:31:44;::::3;9529:89;;9587:20;;-1:-1:-1::0;;;9587:20:44::3;;;;;;;;;;;9529:89;9659:22;::::0;;-1:-1:-1;;;;;9691:33:44;;::::3;-1:-1:-1::0;;;;;;9691:33:44;::::3;::::0;::::3;::::0;;;9659:22:::3;::::0;;9770:38:::3;9739:117;::::0;28170:402:43;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;1334:13:18::2;:11;:13::i;:::-;28332::43::3;28349:1;28332:18:::0;28328:86:::3;;28366:37;::::0;-1:-1:-1;;;28366:37:43;;16088:2:77;28366:37:43::3;::::0;::::3;16070:21:77::0;16127:2;16107:18;;;16100:30;16166:29;16146:18;;;16139:57;16213:18;;28366:37:43::3;15886:351:77::0;28328:86:43::3;28443:17;::::0;;28470:33;;;;28519:46:::3;::::0;28490:13;;28443:17;;28519:46:::3;::::0;28423:17:::3;::::0;28519:46:::3;28318:254;28170:402:::0;:::o;22812:121::-;22889:7;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;-1:-1:-1::0;22915:11:43::2;::::0;22812:121;:::o;6347:2113:44:-;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;31743:17:43::2;::::0;-1:-1:-1;;;;;31743:17:43::2;31729:10;:31;31725:93;;31783:24;::::0;-1:-1:-1;;;31783:24:43;;31796:10:::2;31783:24;::::0;::::2;5256:51:77::0;5229:18;;31783:24:43::2;5110:203:77::0;31725:93:43::2;6591:16:44::3;6617:32;6648:1;6617:21:::0;:32:::3;:::i;:::-;6591:59;;6676:11;;6665:7;:22;6661:95;;6733:11;::::0;6710:35:::3;::::0;-1:-1:-1;;;6710:35:44;;::::3;::::0;6724:7;;6710:35:::3;;10104:25:77::0;;;10160:2;10145:18;;10138:34;10092:2;10077:18;;9930:248;6661:95:44::3;6847:17;6879:87;6914:21;;6937:7;6946:8;6956:9;6879:34;:87::i;:::-;6847:119:::0;-1:-1:-1;7265:22:44::3;7290:39;4362:77:43;6847:119:44::0;7290:39:::3;:::i;:::-;7446:22;::::0;:48:::3;::::0;-1:-1:-1;;;7446:48:44;;16542:10:77;16530:23;;7446:48:44::3;::::0;::::3;16512:42:77::0;7265:64:44;;-1:-1:-1;7413:30:44::3;::::0;-1:-1:-1;;;;;7446:22:44;;::::3;::::0;:37:::3;::::0;16485:18:77;;7446:48:44::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7563:61;::::0;;::::3;::::0;::::3;::::0;;;;;;;-1:-1:-1;;;7563:61:44;;7413:81;;-1:-1:-1;;;;;;7563:28:44;::::3;::::0;::::3;::::0;:61:::3;::::0;7592:13;;7563:61;::::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;7559:895;;;;:::i;:::-;7792:11;:22:::0;;;7960:20:::3;::::0;;;:11:::3;:20;::::0;;;;:47;;-1:-1:-1;;;;;;7960:47:44::3;7991:15;-1:-1:-1::0;;;;;7960:47:44::3;;::::0;;7792:22;-1:-1:-1;8027:51:44::3;::::0;8039:7;;8027:51:::3;::::0;;;::::3;6581:1879;;;;6347:2113:::0;;;;;:::o;29056:133:43:-;29139:7;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;-1:-1:-1::0;29165:17:43::2;::::0;-1:-1:-1;;;;;29165:17:43::2;29056:133:::0;:::o;26573:205::-;26715:7;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;-1:-1:-1::0;26753:17:43::2;::::0;-1:-1:-1;;;;;26753:17:43::2;26573:205:::0;:::o;24439:638::-;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1059:12:74::1;::::0;::::1;;1054:81;;1094:30;;-1:-1:-1::0;;;1094:30:74::1;;;;;;;;;;;1054:81;24591:11:43::2;::::0;24579:56;;24618:7:::2;24579:56;24710:21;24734:17:::0;;;:11:::2;:17;::::0;;;;;-1:-1:-1;;;;;24734:17:43::2;::::0;24834:18;;;24830:73:::2;;24875:17;;-1:-1:-1::0;;;24875:17:43::2;;;;;;;;;;;24830:73;25007:17;::::0;24973:31:::2;-1:-1:-1::0;;;;;24973:31:43;::::2;:15;:31;:::i;:::-;:51;24969:102;;;25047:13;;-1:-1:-1::0;;;25047:13:43::2;;;;;;;;;;;1415:178:17::0;1334:13:18;:11;:13::i;:::-;1504::17::1;:24:::0;;-1:-1:-1;;;;;1504:24:17;::::1;-1:-1:-1::0;;;;;;1504:24:17;;::::1;::::0;::::1;::::0;;;1568:7:::1;1513:6:18::0;;-1:-1:-1;;;;;1513:6:18;;1441:85;1568:7:17::1;-1:-1:-1::0;;;;;1543:43:17::1;;;;;;;;;;;1415:178:::0;:::o;1563:151:20:-;-1:-1:-1;;;;;;;;;;;1642:65:20;-1:-1:-1;;;;;1642:65:20;;1563:151::o;1599:130:18:-;1513:6;;-1:-1:-1;;;;;1513:6:18;929:10:25;1662:23:18;1654:68;;;;-1:-1:-1;;;1654:68:18;;16767:2:77;1654:68:18;;;16749:21:77;;;16786:18;;;16779:30;16845:34;16825:18;;;16818:62;16897:18;;1654:68:18;16565:356:77;1654:68:18;1599:130::o;4067:204:45:-;-1:-1:-1;;;;;1898:6:23;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:23;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:23;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:23;;1963:87;;;;-1:-1:-1;;;1963:87:23;;;;;;;:::i;:::-;1334:13:18::1;:11;:13::i;2938:974:20:-:0;951:66;3384:59;;;3380:526;;;3459:37;3478:17;3459:18;:37::i;:::-;2938:974;;;:::o;3380:526::-;3560:17;-1:-1:-1;;;;;3531:61:20;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3531:63:20;;;;;;;;-1:-1:-1;;3531:63:20;;;;;;;;;;;;:::i;:::-;;;3527:302;;3758:56;;-1:-1:-1;;;3758:56:20;;17317:2:77;3758:56:20;;;17299:21:77;17356:2;17336:18;;;17329:30;17395:34;17375:18;;;17368:62;-1:-1:-1;;;17446:18:77;;;17439:44;17500:19;;3758:56:20;17115:410:77;3527:302:20;-1:-1:-1;;;;;;;;;;;3644:28:20;;3636:82;;;;-1:-1:-1;;;3636:82:20;;17732:2:77;3636:82:20;;;17714:21:77;17771:2;17751:18;;;17744:30;17810:34;17790:18;;;17783:62;-1:-1:-1;;;17861:18:77;;;17854:39;17910:19;;3636:82:20;17530:405:77;3636:82:20;3595:138;3842:53;3860:17;3879:4;3885:9;3842:17;:53::i;16725:97:43:-;5363:13:22;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:22;;;;;;;:::i;:::-;16795:20:43::1;:18;:20::i;434:207:75:-:0;492:19;540:2;569;588:21;;;;-1:-1:-1;588:21:75;;;:46;;;626:8;613:21;;:9;:21;;;;588:46;581:53;434:207;-1:-1:-1;;;;434:207:75:o;794:90:74:-;5363:13:22;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:22;;;;;;;:::i;:::-;858:12:74::1;:19:::0;;-1:-1:-1;;858:19:74::1;873:4;858:19;::::0;;794:90::o;1777:153:17:-;1866:13;1859:20;;-1:-1:-1;;;;;;1859:20:17;;;1889:34;1914:8;1889:24;:34::i;1805:281:20:-;-1:-1:-1;;;;;1476:19:24;;;1878:106:20;;;;-1:-1:-1;;;1878:106:20;;18554:2:77;1878:106:20;;;18536:21:77;18593:2;18573:18;;;18566:30;18632:34;18612:18;;;18605:62;-1:-1:-1;;;18683:18:77;;;18676:43;18736:19;;1878:106:20;18352:409:77;1878:106:20;-1:-1:-1;;;;;;;;;;;1994:85:20;;-1:-1:-1;;;;;;1994:85:20;-1:-1:-1;;;;;1994:85:20;;;;;;;;;;1805:281::o;2478:288::-;2616:29;2627:17;2616:10;:29::i;:::-;2673:1;2659:4;:11;:15;:28;;;;2678:9;2659:28;2655:105;;;2703:46;2725:17;2744:4;2703:21;:46::i;:::-;;2478:288;;;:::o;3048:131:45:-;5363:13:22;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:22;;;;;;;:::i;:::-;3122:16:45::1;:14;:16::i;:::-;3148:24;:22;:24::i;2673:187:18:-:0;2765:6;;;-1:-1:-1;;;;;2781:17:18;;;-1:-1:-1;;;;;;2781:17:18;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;2192:152:20:-;2258:37;2277:17;2258:18;:37::i;:::-;2310:27;;-1:-1:-1;;;;;2310:27:20;;;;;;;;2192:152;:::o;7088:455::-;7171:12;-1:-1:-1;;;;;1476:19:24;;;7195:88:20;;;;-1:-1:-1;;;7195:88:20;;18968:2:77;7195:88:20;;;18950:21:77;19007:2;18987:18;;;18980:30;19046:34;19026:18;;;19019:62;-1:-1:-1;;;19097:18:77;;;19090:36;19143:19;;7195:88:20;18766:402:77;7195:88:20;7354:12;7368:23;7395:6;-1:-1:-1;;;;;7395:19:20;7415:4;7395:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7353:67;;;;7437:99;7473:7;7482:10;7437:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;7430:106;;;;7088:455;;;;;:::o;1003:95:18:-;5363:13:22;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:22;;;;;;;:::i;:::-;1065:26:18::1;:24;:26::i;1042:67:23:-:0;5363:13:22;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:22;;;;;;;:::i;7438:295:24:-;7584:12;7612:7;7608:119;;;-1:-1:-1;7642:10:24;7635:17;;7608:119;7683:33;7691:10;7703:12;7683:7;:33::i;1104:111:18:-;5363:13:22;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:22;;;;;;;:::i;:::-;1176:32:18::1;929:10:25::0;1176:18:18::1;:32::i;7739:540:24:-:0;7898:17;;:21;7894:379;;8126:10;8120:17;8182:15;8169:10;8165:2;8161:19;8154:44;14:151:77;-1:-1:-1;;;;;109:31:77;;99:42;;89:70;;155:1;152;145:12;170:295;257:6;310:2;298:9;289:7;285:23;281:32;278:52;;;326:1;323;316:12;278:52;365:9;352:23;384:51;429:5;384:51;:::i;470:160::-;564:6;597:3;585:16;;582:25;-1:-1:-1;579:45:77;;;620:1;617;610:12;635:163;702:20;;762:10;751:22;;741:33;;731:61;;788:1;785;778:12;803:367;866:8;876:6;930:3;923:4;915:6;911:17;907:27;897:55;;948:1;945;938:12;897:55;-1:-1:-1;971:20:77;;1014:18;1003:30;;1000:50;;;1046:1;1043;1036:12;1000:50;1083:4;1075:6;1071:17;1059:29;;1143:3;1136:4;1126:6;1123:1;1119:14;1111:6;1107:27;1103:38;1100:47;1097:67;;;1160:1;1157;1150:12;1097:67;803:367;;;;;:::o;1175:773::-;1321:6;1329;1337;1345;1353;1361;1414:3;1402:9;1393:7;1389:23;1385:33;1382:53;;;1431:1;1428;1421:12;1382:53;1454;1499:7;1488:9;1454:53;:::i;:::-;1444:63;;1554:3;1543:9;1539:19;1526:33;1516:43;;1578:38;1611:3;1600:9;1596:19;1578:38;:::i;:::-;1568:48;;1667:3;1656:9;1652:19;1639:33;1695:18;1687:6;1684:30;1681:50;;;1727:1;1724;1717:12;1681:50;1766:70;1828:7;1819:6;1808:9;1804:22;1766:70;:::i;:::-;1175:773;;;;-1:-1:-1;1175:773:77;;;;;1937:3;1922:19;;;1909:33;;1175:773;-1:-1:-1;;;;1175:773:77:o;2254:347::-;2305:8;2315:6;2369:3;2362:4;2354:6;2350:17;2346:27;2336:55;;2387:1;2384;2377:12;2336:55;-1:-1:-1;2410:20:77;;2453:18;2442:30;;2439:50;;;2485:1;2482;2475:12;2439:50;2522:4;2514:6;2510:17;2498:29;;2574:3;2567:4;2558:6;2550;2546:19;2542:30;2539:39;2536:59;;;2591:1;2588;2581:12;2606:618;2702:6;2710;2718;2726;2734;2787:3;2775:9;2766:7;2762:23;2758:33;2755:53;;;2804:1;2801;2794:12;2755:53;2844:9;2831:23;2877:18;2869:6;2866:30;2863:50;;;2909:1;2906;2899:12;2863:50;2948:58;2998:7;2989:6;2978:9;2974:22;2948:58;:::i;:::-;3025:8;;-1:-1:-1;2922:84:77;-1:-1:-1;;3107:2:77;3092:18;;3079:32;;-1:-1:-1;3158:2:77;3143:18;;3130:32;;-1:-1:-1;3181:37:77;3214:2;3199:18;;3181:37;:::i;:::-;3171:47;;2606:618;;;;;;;;:::o;3411:509::-;3531:6;3539;3547;3555;3563;3616:3;3604:9;3595:7;3591:23;3587:33;3584:53;;;3633:1;3630;3623:12;3584:53;3669:9;3656:23;3646:33;;3726:2;3715:9;3711:18;3698:32;3688:42;;3777:2;3766:9;3762:18;3749:32;3739:42;;3828:2;3817:9;3813:18;3800:32;3790:42;;3851:63;3906:7;3900:3;3889:9;3885:19;3851:63;:::i;4197:908::-;4376:6;4384;4392;4400;4408;4461:3;4449:9;4440:7;4436:23;4432:33;4429:53;;;4478:1;4475;4468:12;4429:53;4517:9;4504:23;4567:4;4560:5;4556:16;4549:5;4546:27;4536:55;;4587:1;4584;4577:12;4536:55;4610:5;-1:-1:-1;4662:2:77;4647:18;;4634:32;;-1:-1:-1;4718:2:77;4703:18;;4690:32;4731:53;4690:32;4731:53;:::i;:::-;4803:7;-1:-1:-1;4862:2:77;4847:18;;4834:32;4875:53;4834:32;4875:53;:::i;:::-;4947:7;-1:-1:-1;5006:3:77;4991:19;;4978:33;5020:53;4978:33;5020:53;:::i;:::-;5092:7;5082:17;;;4197:908;;;;;;;;:::o;5318:180::-;5377:6;5430:2;5418:9;5409:7;5405:23;5401:32;5398:52;;;5446:1;5443;5436:12;5398:52;-1:-1:-1;5469:23:77;;5318:180;-1:-1:-1;5318:180:77:o;6111:127::-;6172:10;6167:3;6163:20;6160:1;6153:31;6203:4;6200:1;6193:15;6227:4;6224:1;6217:15;6243:249;6353:2;6334:13;;-1:-1:-1;;6330:27:77;6318:40;;6388:18;6373:34;;6409:22;;;6370:62;6367:88;;;6435:18;;:::i;:::-;6471:2;6464:22;-1:-1:-1;;6243:249:77:o;6497:953::-;6574:6;6582;6635:2;6623:9;6614:7;6610:23;6606:32;6603:52;;;6651:1;6648;6641:12;6603:52;6690:9;6677:23;6709:51;6754:5;6709:51;:::i;:::-;6779:5;-1:-1:-1;6803:2:77;6841:18;;;6828:32;6879:18;6909:14;;;6906:34;;;6936:1;6933;6926:12;6906:34;6974:6;6963:9;6959:22;6949:32;;7019:7;7012:4;7008:2;7004:13;7000:27;6990:55;;7041:1;7038;7031:12;6990:55;7077:2;7064:16;7099:2;7095;7092:10;7089:36;;;7105:18;;:::i;:::-;7154:2;7148:9;;-1:-1:-1;7166:65:77;7221:2;7202:13;;-1:-1:-1;;7198:27:77;7194:36;;7148:9;7166:65;:::i;:::-;7255:2;7247:6;7240:18;7295:7;7290:2;7285;7281;7277:11;7273:20;7270:33;7267:53;;;7316:1;7313;7306:12;7267:53;7372:2;7367;7363;7359:11;7354:2;7346:6;7342:15;7329:46;7417:1;7412:2;7407;7399:6;7395:15;7391:24;7384:35;;7438:6;7428:16;;;;;6497:953;;;;;:::o;7455:646::-;7567:6;7575;7583;7591;7599;7652:3;7640:9;7631:7;7627:23;7623:33;7620:53;;;7669:1;7666;7659:12;7620:53;7692:28;7710:9;7692:28;:::i;:::-;7682:38;;7767:2;7756:9;7752:18;7739:32;7729:42;;7818:2;7807:9;7803:18;7790:32;7780:42;;7873:2;7862:9;7858:18;7845:32;7900:18;7892:6;7889:30;7886:50;;;7932:1;7929;7922:12;7886:50;7971:70;8033:7;8024:6;8013:9;8009:22;7971:70;:::i;:::-;7455:646;;;;-1:-1:-1;7455:646:77;;-1:-1:-1;8060:8:77;;7945:96;7455:646;-1:-1:-1;;;7455:646:77:o;8295:672::-;8417:6;8425;8433;8441;8449;8502:3;8490:9;8481:7;8477:23;8473:33;8470:53;;;8519:1;8516;8509:12;8470:53;8542;8587:7;8576:9;8542:53;:::i;:::-;8532:63;;8646:3;8635:9;8631:19;8618:33;8674:18;8666:6;8663:30;8660:50;;;8706:1;8703;8696:12;8660:50;8745:58;8795:7;8786:6;8775:9;8771:22;8745:58;:::i;:::-;8295:672;;8822:8;;-1:-1:-1;8719:84:77;;8904:3;8889:19;;8876:33;;8956:3;8941:19;;;8928:33;;-1:-1:-1;8295:672:77;-1:-1:-1;;;;8295:672:77:o;8972:408::-;9174:2;9156:21;;;9213:2;9193:18;;;9186:30;9252:34;9247:2;9232:18;;9225:62;-1:-1:-1;;;9318:2:77;9303:18;;9296:42;9370:3;9355:19;;8972:408::o;9385:::-;9587:2;9569:21;;;9626:2;9606:18;;;9599:30;9665:34;9660:2;9645:18;;9638:62;-1:-1:-1;;;9731:2:77;9716:18;;9709:42;9783:3;9768:19;;9385:408::o;10183:127::-;10244:10;10239:3;10235:20;10232:1;10225:31;10275:4;10272:1;10265:15;10299:4;10296:1;10289:15;10315:112;10347:1;10373;10363:35;;10378:18;;:::i;:::-;-1:-1:-1;10412:9:77;;10315:112::o;10432:294::-;10525:6;10578:2;10566:9;10557:7;10553:23;10549:32;10546:52;;;10594:1;10591;10584:12;10546:52;10626:9;10620:16;10645:51;10690:5;10645:51;:::i;10731:646::-;10987:3;10972:19;;11010:6;;11049;10976:9;11025:35;11080:18;;11140:6;11164:1;11174:197;11188:4;11185:1;11182:11;11174:197;;;11250:13;;11238:26;;11287:4;11311:12;;;;11346:15;;;;11208:4;11201:12;11174:197;;;11178:3;;;10731:646;;;;;:::o;11382:179::-;11417:3;11459:1;11441:16;11438:23;11435:120;;;11505:1;11502;11499;11484:23;-1:-1:-1;11542:1:77;11536:8;11531:3;11527:18;11382:179;:::o;11566:671::-;11605:3;11647:4;11629:16;11626:26;11623:39;;;11566:671;:::o;11623:39::-;11689:2;11683:9;-1:-1:-1;;11754:16:77;11750:25;;11747:1;11683:9;11726:50;11805:4;11799:11;11829:16;11864:18;11935:2;11928:4;11920:6;11916:17;11913:25;11908:2;11900:6;11897:14;11894:45;11891:58;;;11942:5;;;;;11566:671;:::o;11891:58::-;11979:6;11973:4;11969:17;11958:28;;12015:3;12009:10;12042:2;12034:6;12031:14;12028:27;;;12048:5;;;;;;11566:671;:::o;12028:27::-;12132:2;12113:16;12107:4;12103:27;12099:36;12092:4;12083:6;12078:3;12074:16;12070:27;12067:69;12064:82;;;12139:5;;;;;;11566:671;:::o;12064:82::-;12155:57;12206:4;12197:6;12189;12185:19;12181:30;12175:4;12155:57;:::i;:::-;-1:-1:-1;12228:3:77;;11566:671;-1:-1:-1;;;;;11566:671:77:o;12242:250::-;12327:1;12337:113;12351:6;12348:1;12345:13;12337:113;;;12427:11;;;12421:18;12408:11;;;12401:39;12373:2;12366:10;12337:113;;;-1:-1:-1;;12484:1:77;12466:16;;12459:27;12242:250::o;12497:396::-;12646:2;12635:9;12628:21;12609:4;12678:6;12672:13;12721:6;12716:2;12705:9;12701:18;12694:34;12737:79;12809:6;12804:2;12793:9;12789:18;12784:2;12776:6;12772:15;12737:79;:::i;:::-;12877:2;12856:15;-1:-1:-1;;12852:29:77;12837:45;;;;12884:2;12833:54;;12497:396;-1:-1:-1;;12497:396:77:o;12898:410::-;13100:2;13082:21;;;13139:2;13119:18;;;13112:30;13178:34;13173:2;13158:18;;13151:62;-1:-1:-1;;;13244:2:77;13229:18;;13222:44;13298:3;13283:19;;12898:410::o;13313:643::-;13569:3;13554:19;;13592:6;;13631;13558:9;13607:35;13662:18;;13722:6;13746:1;13756:194;13770:4;13767:1;13764:11;13756:194;;;13829:13;;13817:26;;13866:4;13890:12;;;;13925:15;;;;13790:1;13783:9;13756:194;;14221:225;14288:9;;;14309:11;;;14306:134;;;14362:10;14357:3;14353:20;14350:1;14343:31;14397:4;14394:1;14387:15;14425:4;14422:1;14415:15;15286:595;15595:3;15573:16;;;-1:-1:-1;;;;;;15569:43:77;15557:56;;15638:1;15629:11;;15622:27;;;15674:2;15665:12;;15658:28;;;-1:-1:-1;;;;;;15698:31:77;;15695:51;;;15742:1;15739;15732:12;15695:51;15776:6;15773:1;15769:14;15827:6;15819;15814:2;15809:3;15805:12;15792:42;15854:16;;;;15872:2;15850:25;;15286:595;-1:-1:-1;;;;;;15286:595:77:o;16242:120::-;16282:1;16308;16298:35;;16313:18;;:::i;:::-;-1:-1:-1;16347:9:77;;16242:120::o;16926:184::-;16996:6;17049:2;17037:9;17028:7;17024:23;17020:32;17017:52;;;17065:1;17062;17055:12;17017:52;-1:-1:-1;17088:16:77;;16926:184;-1:-1:-1;16926:184:77:o;17940:407::-;18142:2;18124:21;;;18181:2;18161:18;;;18154:30;18220:34;18215:2;18200:18;;18193:62;-1:-1:-1;;;18286:2:77;18271:18;;18264:41;18337:3;18322:19;;17940:407::o;19173:287::-;19302:3;19340:6;19334:13;19356:66;19415:6;19410:3;19403:4;19395:6;19391:17;19356:66;:::i;:::-;19438:16;;;;;19173:287;-1:-1:-1;;19173:287:77:o",
    "linkReferences": {},
    "immutableReferences": {
      "29832": [
        {
          "start": 1453,
          "length": 32
        },
        {
          "start": 1526,
          "length": 32
        },
        {
          "start": 1787,
          "length": 32
        },
        {
          "start": 1851,
          "length": 32
        },
        {
          "start": 2816,
          "length": 32
        },
        {
          "start": 2880,
          "length": 32
        },
        {
          "start": 3102,
          "length": 32
        },
        {
          "start": 3166,
          "length": 32
        },
        {
          "start": 3338,
          "length": 32
        },
        {
          "start": 3402,
          "length": 32
        },
        {
          "start": 3668,
          "length": 32
        },
        {
          "start": 3732,
          "length": 32
        },
        {
          "start": 4377,
          "length": 32
        },
        {
          "start": 4441,
          "length": 32
        },
        {
          "start": 4619,
          "length": 32
        },
        {
          "start": 4683,
          "length": 32
        },
        {
          "start": 5025,
          "length": 32
        },
        {
          "start": 5089,
          "length": 32
        },
        {
          "start": 5228,
          "length": 32
        },
        {
          "start": 5292,
          "length": 32
        },
        {
          "start": 5416,
          "length": 32
        },
        {
          "start": 5746,
          "length": 32
        },
        {
          "start": 5810,
          "length": 32
        },
        {
          "start": 6005,
          "length": 32
        },
        {
          "start": 6069,
          "length": 32
        },
        {
          "start": 6220,
          "length": 32
        },
        {
          "start": 6284,
          "length": 32
        },
        {
          "start": 6434,
          "length": 32
        },
        {
          "start": 6498,
          "length": 32
        },
        {
          "start": 6722,
          "length": 32
        },
        {
          "start": 6786,
          "length": 32
        },
        {
          "start": 7006,
          "length": 32
        },
        {
          "start": 7070,
          "length": 32
        },
        {
          "start": 7349,
          "length": 32
        },
        {
          "start": 7413,
          "length": 32
        },
        {
          "start": 7552,
          "length": 32
        },
        {
          "start": 7616,
          "length": 32
        },
        {
          "start": 8260,
          "length": 32
        },
        {
          "start": 8324,
          "length": 32
        },
        {
          "start": 8474,
          "length": 32
        },
        {
          "start": 8538,
          "length": 32
        },
        {
          "start": 8686,
          "length": 32
        },
        {
          "start": 8750,
          "length": 32
        },
        {
          "start": 9236,
          "length": 32
        },
        {
          "start": 9300,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "NO_SUCH_ROOT()": "561f204b",
    "acceptOwnership()": "79ba5097",
    "calculateIdentityDeletionInputHash(bytes,uint256,uint256,uint32)": "31e4e992",
    "calculateIdentityRegistrationInputHash(uint32,uint256,uint256,uint256[])": "8c76a909",
    "deleteIdentities(uint256[8],bytes,uint256,uint256)": "ea10fbbe",
    "getDeleteIdentitiesVerifierLookupTableAddress()": "3e8919b6",
    "getRegisterIdentitiesVerifierLookupTableAddress()": "8fc22e9f",
    "getRootHistoryExpiry()": "43f974cb",
    "getSemaphoreVerifierAddress()": "f2038f95",
    "getTreeDepth()": "8e5cdd50",
    "identityOperator()": "f134b6ca",
    "initialize(uint8,uint256,address,address,address)": "38c87065",
    "initializeV2(address)": "29b6eca9",
    "latestRoot()": "d7b0fef1",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "proxiableUUID()": "52d1902d",
    "queryRoot(uint256)": "3f7c178d",
    "registerIdentities(uint256[8],uint256,uint32,uint256[],uint256)": "2217b211",
    "renounceOwnership()": "715018a6",
    "requireValidRoot(uint256)": "f2358e1d",
    "setDeleteIdentitiesVerifierLookupTable(address)": "aa4a729e",
    "setIdentityOperator(address)": "a7bba582",
    "setRegisterIdentitiesVerifierLookupTable(address)": "2f059fca",
    "setRootHistoryExpiry(uint256)": "c70aa727",
    "setSemaphoreVerifier(address)": "0e3a12f3",
    "transferOwnership(address)": "f2fde38b",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
    "verifyProof(uint256,uint256,uint256,uint256,uint256[8])": "354ca120"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CannotRenounceOwnership\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpiredRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImplementationNotInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"InvalidCommitment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStateBridgeAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVerifier\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVerifierLUT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedInputLengths\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonExistentRoot\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"providedRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"latestRoot\",\"type\":\"uint256\"}],\"name\":\"NotLatestRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProofValidationFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StateBridgeAlreadyDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StateBridgeAlreadyEnabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum WorldIDIdentityManagerImplV1.UnreducedElementType\",\"name\":\"elementType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"element\",\"type\":\"uint256\"}],\"name\":\"UnreducedElement\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"depth\",\"type\":\"uint8\"}],\"name\":\"UnsupportedTreeDepth\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum WorldIDIdentityManagerImplV1.Dependency\",\"name\":\"kind\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"DependencyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"IdentityOperatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldExpiryTime\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newExpiryTime\",\"type\":\"uint256\"}],\"name\":\"RootHistoryExpirySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"}],\"name\":\"StateBridgeStateChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"preRoot\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enum WorldIDIdentityManagerImplV1.TreeChange\",\"name\":\"kind\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"postRoot\",\"type\":\"uint256\"}],\"name\":\"TreeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_treeDepth\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialRoot\",\"type\":\"uint256\"}],\"name\":\"WorldIDIdentityManagerImplInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"WorldIDIdentityManagerImplV2Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NO_SUCH_ROOT\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"supersededTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"internalType\":\"struct WorldIDIdentityManagerImplV1.RootInfo\",\"name\":\"rootInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"packedDeletionIndices\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"preRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"batchSize\",\"type\":\"uint32\"}],\"name\":\"calculateIdentityDeletionInputHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"startIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"preRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"identityCommitments\",\"type\":\"uint256[]\"}],\"name\":\"calculateIdentityRegistrationInputHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[8]\",\"name\":\"deletionProof\",\"type\":\"uint256[8]\"},{\"internalType\":\"bytes\",\"name\":\"packedDeletionIndices\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"preRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postRoot\",\"type\":\"uint256\"}],\"name\":\"deleteIdentities\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeleteIdentitiesVerifierLookupTableAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegisterIdentitiesVerifierLookupTableAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRootHistoryExpiry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSemaphoreVerifierAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreeDepth\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_treeDepth\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialRoot\",\"type\":\"uint256\"},{\"internalType\":\"contract VerifierLookupTable\",\"name\":\"_batchInsertionVerifiers\",\"type\":\"address\"},{\"internalType\":\"contract VerifierLookupTable\",\"name\":\"_batchUpdateVerifiers\",\"type\":\"address\"},{\"internalType\":\"contract ISemaphoreVerifier\",\"name\":\"_semaphoreVerifier\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract VerifierLookupTable\",\"name\":\"_batchDeletionVerifiers\",\"type\":\"address\"}],\"name\":\"initializeV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"}],\"name\":\"queryRoot\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"supersededTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"internalType\":\"struct WorldIDIdentityManagerImplV1.RootInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[8]\",\"name\":\"insertionProof\",\"type\":\"uint256[8]\"},{\"internalType\":\"uint256\",\"name\":\"preRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"identityCommitments\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"postRoot\",\"type\":\"uint256\"}],\"name\":\"registerIdentities\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"}],\"name\":\"requireValidRoot\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract VerifierLookupTable\",\"name\":\"newTable\",\"type\":\"address\"}],\"name\":\"setDeleteIdentitiesVerifierLookupTable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newIdentityOperator\",\"type\":\"address\"}],\"name\":\"setIdentityOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract VerifierLookupTable\",\"name\":\"newTable\",\"type\":\"address\"}],\"name\":\"setRegisterIdentitiesVerifierLookupTable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newExpiryTime\",\"type\":\"uint256\"}],\"name\":\"setRootHistoryExpiry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISemaphoreVerifier\",\"name\":\"newVerifier\",\"type\":\"address\"}],\"name\":\"setSemaphoreVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signalHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nullifierHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalNullifierHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[8]\",\"name\":\"proof\",\"type\":\"uint256[8]\"}],\"name\":\"verifyProof\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Worldcoin\",\"details\":\"The manager is based on the principle of verifying externally-created Zero Knowledge Proofs      to perform the deletions.This is the implementation delegated to by a proxy.\",\"errors\":{\"InvalidCommitment(uint256)\":[{\"details\":\"This error is no longer in use as we now verify the commitments off-chain within the circuit no need to check for reduced elements or invalid commitments.preserved for ABI backwards compatibility with V1, no longer used, all elements are validated by the circuit\",\"params\":{\"index\":\"The index in the array of identity commitments where the invalid commitment was        found.\"}}],\"InvalidStateBridgeAddress()\":[{\"details\":\"preserved for ABI backwards compatibility with V1, no longer used\"}],\"MismatchedInputLengths()\":[{\"details\":\"preserved for ABI backwards compatibility with V1, no longer used\"}],\"NotLatestRoot(uint256,uint256)\":[{\"params\":{\"latestRoot\":\"The actual latest root at the time of the transaction.\",\"providedRoot\":\"The root that was provided as the `preRoot` for a transaction.\"}}],\"StateBridgeAlreadyDisabled()\":[{\"details\":\"preserved for ABI backwards compatibility with V1, no longer used\"}],\"StateBridgeAlreadyEnabled()\":[{\"details\":\"preserved for ABI backwards compatibility with V1, no longer used\"}],\"Unauthorized(address)\":[{\"params\":{\"user\":\"The user that attempted the action that they were not authorised for.\"}}],\"UnreducedElement(uint8,uint256)\":[{\"details\":\"`r` in this case is given by `SNARK_SCALAR_FIELD`.preserved for ABI backwards compatibility with V1, no longer used, all elements come out reduced from the circuit\",\"params\":{\"element\":\"The value of that element.\",\"elementType\":\"The kind of element that was encountered unreduced.\"}}],\"UnsupportedTreeDepth(uint8)\":[{\"params\":{\"depth\":\"Passed tree depth.\"}}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"DependencyUpdated(uint8,address,address)\":{\"params\":{\"kind\":\"The kind of dependency that was updated.\",\"newAddress\":\"The new address of that dependency.\",\"oldAddress\":\"The old address of that dependency.\"}},\"IdentityOperatorChanged(address,address)\":{\"params\":{\"newOperator\":\"The address of the new identity operator.\",\"oldOperator\":\"The address of the old identity operator.\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RootHistoryExpirySet(uint256,uint256)\":{\"params\":{\"newExpiryTime\":\"The expiry time after the change.\",\"oldExpiryTime\":\"The expiry time prior to the change.\"}},\"StateBridgeStateChange(bool)\":{\"details\":\"preserved for ABI backwards compatibility with V1, no longer used\",\"params\":{\"isEnabled\":\"Set to `true` if the event comes from the state bridge being enabled,        `false` otherwise.\"}},\"TreeChanged(uint256,uint8,uint256)\":{\"params\":{\"kind\":\"Either \\\"insertion\\\" or \\\"update\\\", the kind of alteration that was made to the        tree.\",\"postRoot\":\"The value of the tree's root after the update.\",\"preRoot\":\"The value of the tree's root before the update.\"}},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"},\"WorldIDIdentityManagerImplInitialized(uint8,uint256)\":{\"params\":{\"_treeDepth\":\"The depth of the MerkeTree\",\"initialRoot\":\"The initial value for the `latestRoot` in the contract. When deploying        this should be set to the root of the empty tree.\"}}},\"kind\":\"dev\",\"methods\":{\"NO_SUCH_ROOT()\":{\"details\":\"Can be checked against when querying for root data.\"},\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"calculateIdentityDeletionInputHash(bytes,uint256,uint256,uint32)\":{\"details\":\"Implements the computation described below.the deletion indices are packed into bytes calldata where each deletion index is 32 bits     wide. The indices are encoded using abi.encodePacked for testing. We keccak hash all input to save verification gas. Inputs for the hash are arranged as follows: packedDeletionIndices || PreRoot || PostRoot   32 bits * batchSize ||   256   ||    256\",\"params\":{\"batchSize\":\"The number of identities that were deleted in this batch\",\"packedDeletionIndices\":\"The indices of the identities that were deleted from the tree.\",\"postRoot\":\"The root value of the tree after these deletions were made.\",\"preRoot\":\"The root value of the tree before these deletions were made.\"},\"returns\":{\"hash\":\"The input hash calculated as described below.\"}},\"calculateIdentityRegistrationInputHash(uint32,uint256,uint256,uint256[])\":{\"details\":\"Implements the computation described below.\",\"params\":{\"identityCommitments\":\"The identities that were added to the tree to produce `postRoot`.\",\"postRoot\":\"The root value of the tree after these insertions were made.\",\"preRoot\":\"The root value of the tree before these insertions were made.\",\"startIndex\":\"The index in the tree from which inserting started.\"},\"returns\":{\"hash\":\"The input hash calculated as described below. We keccak hash all input to save verification gas. Inputs are arranged as follows: StartIndex || PreRoot || PostRoot || IdComms[0] || IdComms[1] || ... || IdComms[batchSize-1]     32\\t   ||   256   ||   256    ||    256     ||    256     || ... ||     256 bits\"}},\"deleteIdentities(uint256[8],bytes,uint256,uint256)\":{\"custom:reverts\":\"Unauthorized If the message sender is not authorised to add identities.NotLatestRoot If the provided `preRoot` is not the latest root.ProofValidationFailure If `deletionProof` cannot be verified using the                 provided inputs.VerifierLookupTable.NoSuchVerifier If the batch sizes doesn't match a known                 verifier.\",\"params\":{\"postRoot\":\"The root obtained after deleting all of `identityCommitments` into the tree        described by `preRoot`. Must be an element of the field `Kr`.\",\"preRoot\":\"The value for the root of the tree before the corresponding identity commitments have been deleted. Must be an element of the field `Kr`.\"}},\"getDeleteIdentitiesVerifierLookupTableAddress()\":{\"details\":\"The deletion verifier supports batch deletions of size 10, 100 and 1000 members per batch.\",\"returns\":{\"_0\":\"addr The address of the contract being used as the verifier lookup table.\"}},\"getRegisterIdentitiesVerifierLookupTableAddress()\":{\"returns\":{\"_0\":\"addr The address of the contract being used as the verifier lookup table.\"}},\"getRootHistoryExpiry()\":{\"returns\":{\"_0\":\"expiryTime The amount of time it takes for a root to expire.\"}},\"getSemaphoreVerifierAddress()\":{\"returns\":{\"_0\":\"addr The address of the contract being used as the verifier.\"}},\"getTreeDepth()\":{\"returns\":{\"_0\":\"initializedTreeDepth Tree depth.\"}},\"identityOperator()\":{\"returns\":{\"_0\":\"_ The address authorized to perform identity operations.\"}},\"initialize(uint8,uint256,address,address,address)\":{\"custom:reverts\":\"string If called more than once at the same initialisation number.UnsupportedTreeDepth If passed tree depth is not among defined values.\",\"details\":\"Must be called exactly once.This is marked `reinitializer()` to allow for updated initialisation steps when working      with upgrades based upon this contract. Be aware that there are only 256 (zero-indexed)      initialisations allowed, so decide carefully when to use them. Many cases can safely be      replaced by use of setters.This function is explicitly not virtual as it does not make sense to override even when      upgrading. Create a separate initializer function instead.\",\"params\":{\"_batchInsertionVerifiers\":\"The verifier lookup table for batch insertions.\",\"_batchUpdateVerifiers\":\"The verifier lookup table for batch updates.\",\"_semaphoreVerifier\":\"The verifier to use for semaphore protocol proofs.\",\"_treeDepth\":\"The depth of the MerkeTree\",\"initialRoot\":\"The initial value for the `latestRoot` in the contract. When deploying        this should be set to the root of the empty tree.\"}},\"initializeV2(address)\":{\"details\":\"Must be called exactly onceThis is marked `reinitializer()` to allow for updated initialisation steps when working      with upgrades based upon this contract. Be aware that there are only 256 (zero-indexed)      initialisations allowed, so decide carefully when to use them. Many cases can safely be      replaced by use of setters.This function is explicitly not virtual as it does not make sense to override even when      upgrading. Create a separate initializer function instead.\",\"params\":{\"_batchDeletionVerifiers\":\"The table of verifiers for verifying batch identity deletions.\"}},\"latestRoot()\":{\"returns\":{\"_0\":\"root The value of the latest tree root.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"queryRoot(uint256)\":{\"details\":\"Should be used sparingly as the query can be quite expensive.\",\"params\":{\"root\":\"The root for which you are querying information.\"},\"returns\":{\"_0\":\"rootInfo The information about `root`, or `NO_SUCH_ROOT` if `root` does not exist.         Note that if the queried root is the current, the timestamp will be invalid as the         root has not been superseded.\"}},\"registerIdentities(uint256[8],uint256,uint32,uint256[],uint256)\":{\"custom:reverts\":\"Unauthorized If the message sender is not authorised to add identities.NotLatestRoot If the provided `preRoot` is not the latest root.ProofValidationFailure If `insertionProof` cannot be verified using the                 provided inputs.VerifierLookupTable.NoSuchVerifier If the batch sizes doesn't match a known                 verifier.\",\"params\":{\"identityCommitments\":\"The identities that were inserted into the tree starting at        `startIndex` and `preRoot` to give `postRoot`. All of the commitments must be        elements of the field `Kr`.\",\"postRoot\":\"The root obtained after inserting all of `identityCommitments` into the tree        described by `preRoot`. Must be an element of the field `Kr`. (alread in reduced form)\",\"startIndex\":\"The position in the tree at which the insertions were made.\"}},\"renounceOwnership()\":{\"details\":\"This function is intentionally not `virtual` as we do not want it to be possible to      renounce ownership for any WorldID implementation.This function is marked as `onlyOwner` to maintain the access restriction from the base      contract.\"},\"requireValidRoot(uint256)\":{\"custom:reverts\":\"ExpiredRoot If the provided `root` has expired.NonExistentRoot If the provided `root` does not exist in the history.\",\"details\":\"A root is valid if it is either the latest root, or not the latest root but has not      expired.\",\"params\":{\"root\":\"The root of the merkle tree to check for validity.\"}},\"setDeleteIdentitiesVerifierLookupTable(address)\":{\"details\":\"Only the owner of the contract can call this function.\",\"params\":{\"newTable\":\"The new verifier lookup table to be used for verifying identity        deletions.\"}},\"setIdentityOperator(address)\":{\"params\":{\"newIdentityOperator\":\"The address of the new identity operator.\"},\"returns\":{\"_0\":\"_ The address of the old identity operator.\"}},\"setRegisterIdentitiesVerifierLookupTable(address)\":{\"details\":\"Only the owner of the contract can call this function.\",\"params\":{\"newTable\":\"The new verifier lookup table to be used for verifying identity        registrations.\"}},\"setRootHistoryExpiry(uint256)\":{\"details\":\"Only the owner of the contract can call this function.\",\"params\":{\"newExpiryTime\":\"The new time to use to expire roots.\"}},\"setSemaphoreVerifier(address)\":{\"details\":\"Only the owner of the contract can call this function.\",\"params\":{\"newVerifier\":\"The new verifier instance to be used for verifying semaphore proofs.\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"verifyProof(uint256,uint256,uint256,uint256,uint256[8])\":{\"custom:reverts\":\"string If the zero-knowledge proof cannot be verified for the public inputs.\",\"details\":\"Note that a double-signaling check is not included here, and should be carried by the      caller.\",\"params\":{\"externalNullifierHash\":\"A keccak256 hash of the external nullifier\",\"nullifierHash\":\"The nullifier hash\",\"proof\":\"The zero-knowledge proof\",\"root\":\"The of the Merkle tree\",\"signalHash\":\"A keccak256 hash of the Semaphore signal\"}}},\"title\":\"WorldID Identity Manager Implementation Version 2\",\"version\":1},\"userdoc\":{\"errors\":{\"CannotRenounceOwnership()\":[{\"notice\":\"Thrown when an attempt is made to renounce ownership.\"}],\"ExpiredRoot()\":[{\"notice\":\"Thrown when attempting to validate a root that has expired.\"}],\"ImplementationNotInitialized()\":[{\"notice\":\"Thrown when attempting to call a function while the implementation has not been         initialized.\"}],\"InvalidCommitment(uint256)\":[{\"notice\":\"Thrown when one or more of the identity commitments to be inserted is invalid.\"}],\"InvalidStateBridgeAddress()\":[{\"notice\":\"Thrown when attempting to set the state bridge address to the zero address.\"}],\"InvalidVerifier()\":[{\"notice\":\"Thrown when a verifier is initialized to be the zero address\"}],\"InvalidVerifierLUT()\":[{\"notice\":\"Thrown when a verifier lookup table is initialized to be the zero address\"}],\"MismatchedInputLengths()\":[{\"notice\":\"Thrown when the inputs to `removeIdentities` do not match in         length.\"}],\"NonExistentRoot()\":[{\"notice\":\"Thrown when attempting to validate a root that has yet to be added to the root         history.\"}],\"NotLatestRoot(uint256,uint256)\":[{\"notice\":\"Thrown when the provided root is not the very latest root.\"}],\"ProofValidationFailure()\":[{\"notice\":\"Thrown when the provided proof cannot be verified for the accompanying inputs.\"}],\"StateBridgeAlreadyDisabled()\":[{\"notice\":\"Thrown when attempting to disable the bridge when it is already disabled.\"}],\"StateBridgeAlreadyEnabled()\":[{\"notice\":\"Thrown when attempting to enable the bridge when it is already enabled.\"}],\"Unauthorized(address)\":[{\"notice\":\"Thrown when trying to execute a privileged action without being the contract         manager.\"}],\"UnreducedElement(uint8,uint256)\":[{\"notice\":\"Thrown when encountering an element that should be reduced as a member of `Fr` but         is not.\"}],\"UnsupportedTreeDepth(uint8)\":[{\"notice\":\"Thrown when Semaphore tree depth is not supported.\"}]},\"events\":{\"DependencyUpdated(uint8,address,address)\":{\"notice\":\"Emitted when a dependency's address is updated via an admin action.\"},\"IdentityOperatorChanged(address,address)\":{\"notice\":\"Emitted when the identity operator is changed.\"},\"RootHistoryExpirySet(uint256,uint256)\":{\"notice\":\"Emitted when the root history expiry time is changed.\"},\"StateBridgeStateChange(bool)\":{\"notice\":\"Emitted when the state bridge is enabled or disabled.\"},\"TreeChanged(uint256,uint8,uint256)\":{\"notice\":\"Emitted when the current root of the tree is updated.\"},\"WorldIDIdentityManagerImplV2Initialized()\":{\"notice\":\"Thrown when the WorldIDIdentityManagerImplV2 contract is initalized\"}},\"kind\":\"user\",\"methods\":{\"NO_SUCH_ROOT()\":{\"notice\":\"A constant representing a root that doesn't exist.\"},\"calculateIdentityDeletionInputHash(bytes,uint256,uint256,uint32)\":{\"notice\":\"Calculates the input hash for the identity deletion verifier.\"},\"calculateIdentityRegistrationInputHash(uint32,uint256,uint256,uint256[])\":{\"notice\":\"Calculates the input hash for the identity registration verifier.\"},\"getDeleteIdentitiesVerifierLookupTableAddress()\":{\"notice\":\"Gets the address for the lookup table of merkle tree verifiers used for batch identity         deletions.\"},\"getRegisterIdentitiesVerifierLookupTableAddress()\":{\"notice\":\"Gets the address for the lookup table of merkle tree verifiers used for identity         registrations.\"},\"getRootHistoryExpiry()\":{\"notice\":\"Gets the current amount of time used to expire roots in the history.\"},\"getSemaphoreVerifierAddress()\":{\"notice\":\"Gets the address of the verifier used for verification of semaphore proofs.\"},\"getTreeDepth()\":{\"notice\":\"Gets the Semaphore tree depth the contract was initialized with.\"},\"identityOperator()\":{\"notice\":\"Gets the address that is authorised to perform identity operations on this identity         manager instance.\"},\"initialize(uint8,uint256,address,address,address)\":{\"notice\":\"Initializes the contract.\"},\"initializeV2(address)\":{\"notice\":\"Initializes the V2 implementation contract.\"},\"latestRoot()\":{\"notice\":\"Allows a caller to query the latest root.\"},\"queryRoot(uint256)\":{\"notice\":\"Allows a caller to query the root history for information about a given root.\"},\"renounceOwnership()\":{\"notice\":\"Ensures that ownership of WorldID implementations cannot be renounced.\"},\"requireValidRoot(uint256)\":{\"notice\":\"Reverts if the provided root value is not valid.\"},\"setDeleteIdentitiesVerifierLookupTable(address)\":{\"notice\":\"Sets the address for the lookup table of merkle tree verifiers used for identity         deletions.\"},\"setIdentityOperator(address)\":{\"notice\":\"Sets the address that is authorised to perform identity operations on this identity         manager instance.\"},\"setRegisterIdentitiesVerifierLookupTable(address)\":{\"notice\":\"Sets the address for the lookup table of merkle tree verifiers used for identity         registrations.\"},\"setRootHistoryExpiry(uint256)\":{\"notice\":\"Sets the time to wait before expiring a root from the root history.\"},\"setSemaphoreVerifier(address)\":{\"notice\":\"Sets the address for the semaphore verifier to be used for verification of         semaphore proofs.\"},\"verifyProof(uint256,uint256,uint256,uint256,uint256[8])\":{\"notice\":\"A verifier for the semaphore protocol.\"}},\"notice\":\"An implementation of a batch-based identity manager for the WorldID protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/WorldIDIdentityManagerImplV2.sol\":\"WorldIDIdentityManagerImplV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@zk-kit/=lib/zk-kit/packages/\",\":contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":semaphore/=lib/semaphore/packages/contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":zk-kit/=lib/zk-kit/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xd712fb45b3ea0ab49679164e3895037adc26ce12879d5184feb040e01c1c07a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ecc0838b0649460c0a538a4adb55b2b530e726c5526afc5e09c8eea4f3af13\",\"dweb:/ipfs/QmUxugyGDGGeLzDFi8QDH2vQMtCFaheiujWv58SuGVx4bZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x923b9774b81c1abfb992262ae7763b6e6de77b077a7180d53c6ebb7b1c8bd648\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53445dc0431f9b45c06f567c6091da961d4087bec0010cca5bd62100fa624a38\",\"dweb:/ipfs/QmNvBYpBv183czrAqNXr76E8M3LF93ouAJFeAcHfb59Rcx\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0x7cdab82b437a17902683a413c86d14f512674a0710007bf44c584a2d2d3ca833\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffe4db7a9f3cdd5a5d019462c2859f4f98f7aae08704afdcb3ef0d08d966bbeb\",\"dweb:/ipfs/QmTCHSuoi22dAu55qv4TcENyTmv5mTpAoxmYWD8cRnEp3M\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/WorldIDIdentityManagerImplV1.sol\":{\"keccak256\":\"0x5d05b909d5ea55446c4b3009ed6283924992fdb7bd9f93179b92f84b60d583ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://27eae247b4e8ce77ae921a4ba0a947d82a19eb303451a28ccc2771b99f348123\",\"dweb:/ipfs/QmUKTYz3UTNBEF3zBrS82mmrDzcZ992LEBSUAiS4cmMBtX\"]},\"src/WorldIDIdentityManagerImplV2.sol\":{\"keccak256\":\"0x4c1ffc1d6343e9a042dd6e4529bc79e6963bcc77751d2cde91fd5f52bea5729e\",\"urls\":[\"bzz-raw://31536585c39fe12bd08df0e8deef3d5af0de294271ad26ed061d28c92c6639ce\",\"dweb:/ipfs/QmUbsD3cuNnFygtEyiLBzGyHFgn9aXknnhhCjposVzQhru\"]},\"src/abstract/WorldIDImpl.sol\":{\"keccak256\":\"0xccfff2c5d7af4e505ed13b7d46011d5544317343ea92e7beb874e4d69358e6d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://428860598ca38e42e29892a0b4759c4d3010378f54c3b3e4392f965ff091076e\",\"dweb:/ipfs/QmYPjcDRTr1UEeSbS7ssdGjbDHzAqjRNKBsYJqKJWeL8bZ\"]},\"src/data/VerifierLookupTable.sol\":{\"keccak256\":\"0xfd213b79aaec8d205c50ab3ed5c4ebed06ae602ed526a820340adc1c76745fbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6af992a56a7cee8124af7f16d74dc8a2a7ae5f8b3059b92d46862e44c3804b83\",\"dweb:/ipfs/QmV9bQtJ9PjnwsiiZMUGJANB3znSxJ6ACTqWv9WkQeoeB3\"]},\"src/interfaces/IBaseWorldID.sol\":{\"keccak256\":\"0xcec58605726864d72e35d62c85e002acc98d3f8fa19d01b49fff461c2767c144\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57714fcbceb0497f3fe8906778a837082939489fbb0bd930d015ad6e971913d5\",\"dweb:/ipfs/QmQVVmLr9CEkR727ByMF96a8MbwAeB4AQQWvxneg2Avkq8\"]},\"src/interfaces/IBridge.sol\":{\"keccak256\":\"0x0931c789450d21479da5d4de8c6435fca965660f6e1bd746fff958f4c20cf2ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c564b4d4a15e8075555077a043d773bb20133548376402ff3dbc0eccb57435d\",\"dweb:/ipfs/QmXQRihAFdtfyjTNeHmx9nmNHiS1wy2658Y5aXCXo2tKSQ\"]},\"src/interfaces/ISemaphoreVerifier.sol\":{\"keccak256\":\"0xc18d214e10a4debdc5d7e0f9bfb920211debf93f99524438ced0fae03854f787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59414e42fadace7b853ed04842d4e7b6597fb3168fda03e771c2cacd7e04720b\",\"dweb:/ipfs/QmcjV2prwiyHBaUrwpqL7f6CZBpJqscZspaDKzUnDGcaUa\"]},\"src/interfaces/ITreeVerifier.sol\":{\"keccak256\":\"0x0f4c39de6e476791f28510b61c3fb781468d1ecfd88ab15c1bdcb730e90fbd4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4facca90510d2efbb44a3ddeace04da1d5396b914b9e5d93f55d5253605c20a4\",\"dweb:/ipfs/QmSg8fYNFXLUse5xmBaayeTsk7QuuHaVLuXmJXZ4E3Mvuw\"]},\"src/interfaces/IWorldID.sol\":{\"keccak256\":\"0x577908eff2d29d96354a06ab2602ffe6b97aa9d491330efcc2fcd0a88a8acbb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa0a36a598a851b88cff364b4211dc32081f51940aa8076d9c9b7de8ab126b2f\",\"dweb:/ipfs/QmSne8aRiE8C8RuwEUSk4doETKAGaavrEYyUkwiJc5H8qc\"]},\"src/utils/CheckInitialized.sol\":{\"keccak256\":\"0xfab096b633efd580548007e97920f6088e6d8a5287db84b9aa3d595c02fefcf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dee612c9dbad59d535e7a72b79191187fd91c06af9cb5b6f68d60274d0ee2c04\",\"dweb:/ipfs/QmVJbSQ8DAN6igasbgHjZTM4NRZ3EjrhK8wFcvUG1wPYtZ\"]},\"src/utils/SemaphoreTreeDepthValidator.sol\":{\"keccak256\":\"0x50140161de381aa963457cfd2ee8831a435bd79040f38794e6ef07365c49c872\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcc5b8a3a6f5146aa3fdee550c3e80d828b55df63223485da3d5655a591ad661\",\"dweb:/ipfs/QmWfUzbeFoSaPV1E8QxagUnpt5zfmPXgiropUg1GcV6oZs\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "CannotRenounceOwnership"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExpiredRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ImplementationNotInitialized"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidCommitment"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidStateBridgeAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidVerifier"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidVerifierLUT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MismatchedInputLengths"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonExistentRoot"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "providedRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "latestRoot",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NotLatestRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProofValidationFailure"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StateBridgeAlreadyDisabled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StateBridgeAlreadyEnabled"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "enum WorldIDIdentityManagerImplV1.UnreducedElementType",
              "name": "elementType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "element",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnreducedElement"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "depth",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "UnsupportedTreeDepth"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum WorldIDIdentityManagerImplV1.Dependency",
              "name": "kind",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "oldAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DependencyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldOperator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOperator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "IdentityOperatorChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldExpiryTime",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newExpiryTime",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RootHistoryExpirySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StateBridgeStateChange",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "preRoot",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "enum WorldIDIdentityManagerImplV1.TreeChange",
              "name": "kind",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "postRoot",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TreeChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "_treeDepth",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "initialRoot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WorldIDIdentityManagerImplInitialized",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "WorldIDIdentityManagerImplV2Initialized",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "NO_SUCH_ROOT",
          "outputs": [
            {
              "internalType": "struct WorldIDIdentityManagerImplV1.RootInfo",
              "name": "rootInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "root",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "supersededTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bool",
                  "name": "isValid",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "packedDeletionIndices",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "preRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "postRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "batchSize",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateIdentityDeletionInputHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "startIndex",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "preRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "postRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "identityCommitments",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateIdentityRegistrationInputHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[8]",
              "name": "deletionProof",
              "type": "uint256[8]"
            },
            {
              "internalType": "bytes",
              "name": "packedDeletionIndices",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "preRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "postRoot",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteIdentities"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeleteIdentitiesVerifierLookupTableAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRegisterIdentitiesVerifierLookupTableAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRootHistoryExpiry",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSemaphoreVerifierAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTreeDepth",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "identityOperator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "_treeDepth",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "initialRoot",
              "type": "uint256"
            },
            {
              "internalType": "contract VerifierLookupTable",
              "name": "_batchInsertionVerifiers",
              "type": "address"
            },
            {
              "internalType": "contract VerifierLookupTable",
              "name": "_batchUpdateVerifiers",
              "type": "address"
            },
            {
              "internalType": "contract ISemaphoreVerifier",
              "name": "_semaphoreVerifier",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "contract VerifierLookupTable",
              "name": "_batchDeletionVerifiers",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeV2"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "latestRoot",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "queryRoot",
          "outputs": [
            {
              "internalType": "struct WorldIDIdentityManagerImplV1.RootInfo",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "root",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "supersededTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bool",
                  "name": "isValid",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[8]",
              "name": "insertionProof",
              "type": "uint256[8]"
            },
            {
              "internalType": "uint256",
              "name": "preRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "startIndex",
              "type": "uint32"
            },
            {
              "internalType": "uint256[]",
              "name": "identityCommitments",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "postRoot",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerIdentities"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "requireValidRoot"
        },
        {
          "inputs": [
            {
              "internalType": "contract VerifierLookupTable",
              "name": "newTable",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDeleteIdentitiesVerifierLookupTable"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newIdentityOperator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setIdentityOperator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract VerifierLookupTable",
              "name": "newTable",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRegisterIdentitiesVerifierLookupTable"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newExpiryTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRootHistoryExpiry"
        },
        {
          "inputs": [
            {
              "internalType": "contract ISemaphoreVerifier",
              "name": "newVerifier",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSemaphoreVerifier"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "signalHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nullifierHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "externalNullifierHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256[8]",
              "name": "proof",
              "type": "uint256[8]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyProof"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "NO_SUCH_ROOT()": {
            "details": "Can be checked against when querying for root data."
          },
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "calculateIdentityDeletionInputHash(bytes,uint256,uint256,uint32)": {
            "details": "Implements the computation described below.the deletion indices are packed into bytes calldata where each deletion index is 32 bits     wide. The indices are encoded using abi.encodePacked for testing. We keccak hash all input to save verification gas. Inputs for the hash are arranged as follows: packedDeletionIndices || PreRoot || PostRoot   32 bits * batchSize ||   256   ||    256",
            "params": {
              "batchSize": "The number of identities that were deleted in this batch",
              "packedDeletionIndices": "The indices of the identities that were deleted from the tree.",
              "postRoot": "The root value of the tree after these deletions were made.",
              "preRoot": "The root value of the tree before these deletions were made."
            },
            "returns": {
              "hash": "The input hash calculated as described below."
            }
          },
          "calculateIdentityRegistrationInputHash(uint32,uint256,uint256,uint256[])": {
            "details": "Implements the computation described below.",
            "params": {
              "identityCommitments": "The identities that were added to the tree to produce `postRoot`.",
              "postRoot": "The root value of the tree after these insertions were made.",
              "preRoot": "The root value of the tree before these insertions were made.",
              "startIndex": "The index in the tree from which inserting started."
            },
            "returns": {
              "hash": "The input hash calculated as described below. We keccak hash all input to save verification gas. Inputs are arranged as follows: StartIndex || PreRoot || PostRoot || IdComms[0] || IdComms[1] || ... || IdComms[batchSize-1]     32\t   ||   256   ||   256    ||    256     ||    256     || ... ||     256 bits"
            }
          },
          "deleteIdentities(uint256[8],bytes,uint256,uint256)": {
            "custom:reverts": "Unauthorized If the message sender is not authorised to add identities.NotLatestRoot If the provided `preRoot` is not the latest root.ProofValidationFailure If `deletionProof` cannot be verified using the                 provided inputs.VerifierLookupTable.NoSuchVerifier If the batch sizes doesn't match a known                 verifier.",
            "params": {
              "postRoot": "The root obtained after deleting all of `identityCommitments` into the tree        described by `preRoot`. Must be an element of the field `Kr`.",
              "preRoot": "The value for the root of the tree before the corresponding identity commitments have been deleted. Must be an element of the field `Kr`."
            }
          },
          "getDeleteIdentitiesVerifierLookupTableAddress()": {
            "details": "The deletion verifier supports batch deletions of size 10, 100 and 1000 members per batch.",
            "returns": {
              "_0": "addr The address of the contract being used as the verifier lookup table."
            }
          },
          "getRegisterIdentitiesVerifierLookupTableAddress()": {
            "returns": {
              "_0": "addr The address of the contract being used as the verifier lookup table."
            }
          },
          "getRootHistoryExpiry()": {
            "returns": {
              "_0": "expiryTime The amount of time it takes for a root to expire."
            }
          },
          "getSemaphoreVerifierAddress()": {
            "returns": {
              "_0": "addr The address of the contract being used as the verifier."
            }
          },
          "getTreeDepth()": {
            "returns": {
              "_0": "initializedTreeDepth Tree depth."
            }
          },
          "identityOperator()": {
            "returns": {
              "_0": "_ The address authorized to perform identity operations."
            }
          },
          "initialize(uint8,uint256,address,address,address)": {
            "custom:reverts": "string If called more than once at the same initialisation number.UnsupportedTreeDepth If passed tree depth is not among defined values.",
            "details": "Must be called exactly once.This is marked `reinitializer()` to allow for updated initialisation steps when working      with upgrades based upon this contract. Be aware that there are only 256 (zero-indexed)      initialisations allowed, so decide carefully when to use them. Many cases can safely be      replaced by use of setters.This function is explicitly not virtual as it does not make sense to override even when      upgrading. Create a separate initializer function instead.",
            "params": {
              "_batchInsertionVerifiers": "The verifier lookup table for batch insertions.",
              "_batchUpdateVerifiers": "The verifier lookup table for batch updates.",
              "_semaphoreVerifier": "The verifier to use for semaphore protocol proofs.",
              "_treeDepth": "The depth of the MerkeTree",
              "initialRoot": "The initial value for the `latestRoot` in the contract. When deploying        this should be set to the root of the empty tree."
            }
          },
          "initializeV2(address)": {
            "details": "Must be called exactly onceThis is marked `reinitializer()` to allow for updated initialisation steps when working      with upgrades based upon this contract. Be aware that there are only 256 (zero-indexed)      initialisations allowed, so decide carefully when to use them. Many cases can safely be      replaced by use of setters.This function is explicitly not virtual as it does not make sense to override even when      upgrading. Create a separate initializer function instead.",
            "params": {
              "_batchDeletionVerifiers": "The table of verifiers for verifying batch identity deletions."
            }
          },
          "latestRoot()": {
            "returns": {
              "_0": "root The value of the latest tree root."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "queryRoot(uint256)": {
            "details": "Should be used sparingly as the query can be quite expensive.",
            "params": {
              "root": "The root for which you are querying information."
            },
            "returns": {
              "_0": "rootInfo The information about `root`, or `NO_SUCH_ROOT` if `root` does not exist.         Note that if the queried root is the current, the timestamp will be invalid as the         root has not been superseded."
            }
          },
          "registerIdentities(uint256[8],uint256,uint32,uint256[],uint256)": {
            "custom:reverts": "Unauthorized If the message sender is not authorised to add identities.NotLatestRoot If the provided `preRoot` is not the latest root.ProofValidationFailure If `insertionProof` cannot be verified using the                 provided inputs.VerifierLookupTable.NoSuchVerifier If the batch sizes doesn't match a known                 verifier.",
            "params": {
              "identityCommitments": "The identities that were inserted into the tree starting at        `startIndex` and `preRoot` to give `postRoot`. All of the commitments must be        elements of the field `Kr`.",
              "postRoot": "The root obtained after inserting all of `identityCommitments` into the tree        described by `preRoot`. Must be an element of the field `Kr`. (alread in reduced form)",
              "startIndex": "The position in the tree at which the insertions were made."
            }
          },
          "renounceOwnership()": {
            "details": "This function is intentionally not `virtual` as we do not want it to be possible to      renounce ownership for any WorldID implementation.This function is marked as `onlyOwner` to maintain the access restriction from the base      contract."
          },
          "requireValidRoot(uint256)": {
            "custom:reverts": "ExpiredRoot If the provided `root` has expired.NonExistentRoot If the provided `root` does not exist in the history.",
            "details": "A root is valid if it is either the latest root, or not the latest root but has not      expired.",
            "params": {
              "root": "The root of the merkle tree to check for validity."
            }
          },
          "setDeleteIdentitiesVerifierLookupTable(address)": {
            "details": "Only the owner of the contract can call this function.",
            "params": {
              "newTable": "The new verifier lookup table to be used for verifying identity        deletions."
            }
          },
          "setIdentityOperator(address)": {
            "params": {
              "newIdentityOperator": "The address of the new identity operator."
            },
            "returns": {
              "_0": "_ The address of the old identity operator."
            }
          },
          "setRegisterIdentitiesVerifierLookupTable(address)": {
            "details": "Only the owner of the contract can call this function.",
            "params": {
              "newTable": "The new verifier lookup table to be used for verifying identity        registrations."
            }
          },
          "setRootHistoryExpiry(uint256)": {
            "details": "Only the owner of the contract can call this function.",
            "params": {
              "newExpiryTime": "The new time to use to expire roots."
            }
          },
          "setSemaphoreVerifier(address)": {
            "details": "Only the owner of the contract can call this function.",
            "params": {
              "newVerifier": "The new verifier instance to be used for verifying semaphore proofs."
            }
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "verifyProof(uint256,uint256,uint256,uint256,uint256[8])": {
            "custom:reverts": "string If the zero-knowledge proof cannot be verified for the public inputs.",
            "details": "Note that a double-signaling check is not included here, and should be carried by the      caller.",
            "params": {
              "externalNullifierHash": "A keccak256 hash of the external nullifier",
              "nullifierHash": "The nullifier hash",
              "proof": "The zero-knowledge proof",
              "root": "The of the Merkle tree",
              "signalHash": "A keccak256 hash of the Semaphore signal"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "NO_SUCH_ROOT()": {
            "notice": "A constant representing a root that doesn't exist."
          },
          "calculateIdentityDeletionInputHash(bytes,uint256,uint256,uint32)": {
            "notice": "Calculates the input hash for the identity deletion verifier."
          },
          "calculateIdentityRegistrationInputHash(uint32,uint256,uint256,uint256[])": {
            "notice": "Calculates the input hash for the identity registration verifier."
          },
          "getDeleteIdentitiesVerifierLookupTableAddress()": {
            "notice": "Gets the address for the lookup table of merkle tree verifiers used for batch identity         deletions."
          },
          "getRegisterIdentitiesVerifierLookupTableAddress()": {
            "notice": "Gets the address for the lookup table of merkle tree verifiers used for identity         registrations."
          },
          "getRootHistoryExpiry()": {
            "notice": "Gets the current amount of time used to expire roots in the history."
          },
          "getSemaphoreVerifierAddress()": {
            "notice": "Gets the address of the verifier used for verification of semaphore proofs."
          },
          "getTreeDepth()": {
            "notice": "Gets the Semaphore tree depth the contract was initialized with."
          },
          "identityOperator()": {
            "notice": "Gets the address that is authorised to perform identity operations on this identity         manager instance."
          },
          "initialize(uint8,uint256,address,address,address)": {
            "notice": "Initializes the contract."
          },
          "initializeV2(address)": {
            "notice": "Initializes the V2 implementation contract."
          },
          "latestRoot()": {
            "notice": "Allows a caller to query the latest root."
          },
          "queryRoot(uint256)": {
            "notice": "Allows a caller to query the root history for information about a given root."
          },
          "renounceOwnership()": {
            "notice": "Ensures that ownership of WorldID implementations cannot be renounced."
          },
          "requireValidRoot(uint256)": {
            "notice": "Reverts if the provided root value is not valid."
          },
          "setDeleteIdentitiesVerifierLookupTable(address)": {
            "notice": "Sets the address for the lookup table of merkle tree verifiers used for identity         deletions."
          },
          "setIdentityOperator(address)": {
            "notice": "Sets the address that is authorised to perform identity operations on this identity         manager instance."
          },
          "setRegisterIdentitiesVerifierLookupTable(address)": {
            "notice": "Sets the address for the lookup table of merkle tree verifiers used for identity         registrations."
          },
          "setRootHistoryExpiry(uint256)": {
            "notice": "Sets the time to wait before expiring a root from the root history."
          },
          "setSemaphoreVerifier(address)": {
            "notice": "Sets the address for the semaphore verifier to be used for verification of         semaphore proofs."
          },
          "verifyProof(uint256,uint256,uint256,uint256,uint256[8])": {
            "notice": "A verifier for the semaphore protocol."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@zk-kit/=lib/zk-kit/packages/",
        "contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "ds-test/=lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "semaphore/=lib/semaphore/packages/contracts/contracts/",
        "solmate/=lib/solmate/src/",
        "zk-kit/=lib/zk-kit/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/WorldIDIdentityManagerImplV2.sol": "WorldIDIdentityManagerImplV2"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0xd712fb45b3ea0ab49679164e3895037adc26ce12879d5184feb040e01c1c07a9",
        "urls": [
          "bzz-raw://79ecc0838b0649460c0a538a4adb55b2b530e726c5526afc5e09c8eea4f3af13",
          "dweb:/ipfs/QmUxugyGDGGeLzDFi8QDH2vQMtCFaheiujWv58SuGVx4bZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823",
        "urls": [
          "bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2",
          "dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
        "urls": [
          "bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
          "dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778",
        "urls": [
          "bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1",
          "dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a",
        "urls": [
          "bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3",
          "dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0x923b9774b81c1abfb992262ae7763b6e6de77b077a7180d53c6ebb7b1c8bd648",
        "urls": [
          "bzz-raw://53445dc0431f9b45c06f567c6091da961d4087bec0010cca5bd62100fa624a38",
          "dweb:/ipfs/QmNvBYpBv183czrAqNXr76E8M3LF93ouAJFeAcHfb59Rcx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0x7cdab82b437a17902683a413c86d14f512674a0710007bf44c584a2d2d3ca833",
        "urls": [
          "bzz-raw://ffe4db7a9f3cdd5a5d019462c2859f4f98f7aae08704afdcb3ef0d08d966bbeb",
          "dweb:/ipfs/QmTCHSuoi22dAu55qv4TcENyTmv5mTpAoxmYWD8cRnEp3M"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/WorldIDIdentityManagerImplV1.sol": {
        "keccak256": "0x5d05b909d5ea55446c4b3009ed6283924992fdb7bd9f93179b92f84b60d583ad",
        "urls": [
          "bzz-raw://27eae247b4e8ce77ae921a4ba0a947d82a19eb303451a28ccc2771b99f348123",
          "dweb:/ipfs/QmUKTYz3UTNBEF3zBrS82mmrDzcZ992LEBSUAiS4cmMBtX"
        ],
        "license": "MIT"
      },
      "src/WorldIDIdentityManagerImplV2.sol": {
        "keccak256": "0x4c1ffc1d6343e9a042dd6e4529bc79e6963bcc77751d2cde91fd5f52bea5729e",
        "urls": [
          "bzz-raw://31536585c39fe12bd08df0e8deef3d5af0de294271ad26ed061d28c92c6639ce",
          "dweb:/ipfs/QmUbsD3cuNnFygtEyiLBzGyHFgn9aXknnhhCjposVzQhru"
        ],
        "license": null
      },
      "src/abstract/WorldIDImpl.sol": {
        "keccak256": "0xccfff2c5d7af4e505ed13b7d46011d5544317343ea92e7beb874e4d69358e6d0",
        "urls": [
          "bzz-raw://428860598ca38e42e29892a0b4759c4d3010378f54c3b3e4392f965ff091076e",
          "dweb:/ipfs/QmYPjcDRTr1UEeSbS7ssdGjbDHzAqjRNKBsYJqKJWeL8bZ"
        ],
        "license": "MIT"
      },
      "src/data/VerifierLookupTable.sol": {
        "keccak256": "0xfd213b79aaec8d205c50ab3ed5c4ebed06ae602ed526a820340adc1c76745fbc",
        "urls": [
          "bzz-raw://6af992a56a7cee8124af7f16d74dc8a2a7ae5f8b3059b92d46862e44c3804b83",
          "dweb:/ipfs/QmV9bQtJ9PjnwsiiZMUGJANB3znSxJ6ACTqWv9WkQeoeB3"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBaseWorldID.sol": {
        "keccak256": "0xcec58605726864d72e35d62c85e002acc98d3f8fa19d01b49fff461c2767c144",
        "urls": [
          "bzz-raw://57714fcbceb0497f3fe8906778a837082939489fbb0bd930d015ad6e971913d5",
          "dweb:/ipfs/QmQVVmLr9CEkR727ByMF96a8MbwAeB4AQQWvxneg2Avkq8"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBridge.sol": {
        "keccak256": "0x0931c789450d21479da5d4de8c6435fca965660f6e1bd746fff958f4c20cf2ac",
        "urls": [
          "bzz-raw://0c564b4d4a15e8075555077a043d773bb20133548376402ff3dbc0eccb57435d",
          "dweb:/ipfs/QmXQRihAFdtfyjTNeHmx9nmNHiS1wy2658Y5aXCXo2tKSQ"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISemaphoreVerifier.sol": {
        "keccak256": "0xc18d214e10a4debdc5d7e0f9bfb920211debf93f99524438ced0fae03854f787",
        "urls": [
          "bzz-raw://59414e42fadace7b853ed04842d4e7b6597fb3168fda03e771c2cacd7e04720b",
          "dweb:/ipfs/QmcjV2prwiyHBaUrwpqL7f6CZBpJqscZspaDKzUnDGcaUa"
        ],
        "license": "MIT"
      },
      "src/interfaces/ITreeVerifier.sol": {
        "keccak256": "0x0f4c39de6e476791f28510b61c3fb781468d1ecfd88ab15c1bdcb730e90fbd4f",
        "urls": [
          "bzz-raw://4facca90510d2efbb44a3ddeace04da1d5396b914b9e5d93f55d5253605c20a4",
          "dweb:/ipfs/QmSg8fYNFXLUse5xmBaayeTsk7QuuHaVLuXmJXZ4E3Mvuw"
        ],
        "license": "MIT"
      },
      "src/interfaces/IWorldID.sol": {
        "keccak256": "0x577908eff2d29d96354a06ab2602ffe6b97aa9d491330efcc2fcd0a88a8acbb1",
        "urls": [
          "bzz-raw://fa0a36a598a851b88cff364b4211dc32081f51940aa8076d9c9b7de8ab126b2f",
          "dweb:/ipfs/QmSne8aRiE8C8RuwEUSk4doETKAGaavrEYyUkwiJc5H8qc"
        ],
        "license": "MIT"
      },
      "src/utils/CheckInitialized.sol": {
        "keccak256": "0xfab096b633efd580548007e97920f6088e6d8a5287db84b9aa3d595c02fefcf4",
        "urls": [
          "bzz-raw://dee612c9dbad59d535e7a72b79191187fd91c06af9cb5b6f68d60274d0ee2c04",
          "dweb:/ipfs/QmVJbSQ8DAN6igasbgHjZTM4NRZ3EjrhK8wFcvUG1wPYtZ"
        ],
        "license": "MIT"
      },
      "src/utils/SemaphoreTreeDepthValidator.sol": {
        "keccak256": "0x50140161de381aa963457cfd2ee8831a435bd79040f38794e6ef07365c49c872",
        "urls": [
          "bzz-raw://bcc5b8a3a6f5146aa3fdee550c3e80d828b55df63223485da3d5655a591ad661",
          "dweb:/ipfs/QmWfUzbeFoSaPV1E8QxagUnpt5zfmPXgiropUg1GcV6oZs"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/WorldIDIdentityManagerImplV2.sol",
    "id": 35113,
    "exportedSymbols": {
      "IBridge": [
        35427
      ],
      "ISemaphoreVerifier": [
        35443
      ],
      "ITreeVerifier": [
        35459
      ],
      "IWorldID": [
        35483
      ],
      "SemaphoreTreeDepthValidator": [
        48493
      ],
      "VerifierLookupTable": [
        35402
      ],
      "WorldIDIdentityManagerImplV1": [
        34869
      ],
      "WorldIDIdentityManagerImplV2": [
        35112
      ],
      "WorldIDImpl": [
        35167
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:11790:44",
    "nodes": [
      {
        "id": 34871,
        "nodeType": "PragmaDirective",
        "src": "0:24:44",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 34872,
        "nodeType": "ImportDirective",
        "src": "26:44:44",
        "nodes": [],
        "absolutePath": "src/WorldIDIdentityManagerImplV1.sol",
        "file": "./WorldIDIdentityManagerImplV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35113,
        "sourceUnit": 34870,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35112,
        "nodeType": "ContractDefinition",
        "src": "442:11347:44",
        "nodes": [
          {
            "id": 34879,
            "nodeType": "VariableDeclaration",
            "src": "3107:51:44",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 34876,
              "nodeType": "StructuredDocumentation",
              "src": "3028:74:44",
              "text": "@notice The table of verifiers for verifying batch identity deletions."
            },
            "mutability": "mutable",
            "name": "batchDeletionVerifiers",
            "nameLocation": "3136:22:44",
            "scope": 35112,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
              "typeString": "contract VerifierLookupTable"
            },
            "typeName": {
              "id": 34878,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34877,
                "name": "VerifierLookupTable",
                "nameLocations": [
                  "3107:19:44"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35402,
                "src": "3107:19:44"
              },
              "referencedDeclaration": 35402,
              "src": "3107:19:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                "typeString": "contract VerifierLookupTable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34882,
            "nodeType": "EventDefinition",
            "src": "3249:48:44",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 34880,
              "nodeType": "StructuredDocumentation",
              "src": "3165:79:44",
              "text": "@notice Thrown when the WorldIDIdentityManagerImplV2 contract is initalized"
            },
            "eventSelector": "e416bec7423c88399c6c76ff0386950a64e454d25b846ef46c397bf835c7df7a",
            "name": "WorldIDIdentityManagerImplV2Initialized",
            "nameLocation": "3255:39:44",
            "parameters": {
              "id": 34881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3294:2:44"
            }
          },
          {
            "id": 34914,
            "nodeType": "FunctionDefinition",
            "src": "4039:327:44",
            "nodes": [],
            "body": {
              "id": 34913,
              "nodeType": "Block",
              "src": "4130:236:44",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 34900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 34894,
                          "name": "_batchDeletionVerifiers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34886,
                          "src": "4152:23:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                            "typeString": "contract VerifierLookupTable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                            "typeString": "contract VerifierLookupTable"
                          }
                        ],
                        "id": 34893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4144:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34892,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4144:7:44",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4144:32:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 34898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4188:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 34897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4180:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34896,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4180:7:44",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4180:10:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4144:46:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34905,
                  "nodeType": "IfStatement",
                  "src": "4140:104:44",
                  "trueBody": {
                    "id": 34904,
                    "nodeType": "Block",
                    "src": "4192:52:44",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 34901,
                            "name": "InvalidVerifierLUT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34149,
                            "src": "4213:18:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 34902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4213:20:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34903,
                        "nodeType": "RevertStatement",
                        "src": "4206:27:44"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 34908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34906,
                      "name": "batchDeletionVerifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34879,
                      "src": "4254:22:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                        "typeString": "contract VerifierLookupTable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 34907,
                      "name": "_batchDeletionVerifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34886,
                      "src": "4279:23:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                        "typeString": "contract VerifierLookupTable"
                      }
                    },
                    "src": "4254:48:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                      "typeString": "contract VerifierLookupTable"
                    }
                  },
                  "id": 34909,
                  "nodeType": "ExpressionStatement",
                  "src": "4254:48:44"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34910,
                      "name": "WorldIDIdentityManagerImplV2Initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34882,
                      "src": "4318:39:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 34911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4318:41:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34912,
                  "nodeType": "EmitStatement",
                  "src": "4313:46:44"
                }
              ]
            },
            "documentation": {
              "id": 34883,
              "nodeType": "StructuredDocumentation",
              "src": "3303:731:44",
              "text": "@notice Initializes the V2 implementation contract.\n @param _batchDeletionVerifiers The table of verifiers for verifying batch identity deletions.\n @dev Must be called exactly once\n @dev This is marked `reinitializer()` to allow for updated initialisation steps when working\n      with upgrades based upon this contract. Be aware that there are only 256 (zero-indexed)\n      initialisations allowed, so decide carefully when to use them. Many cases can safely be\n      replaced by use of setters.\n @dev This function is explicitly not virtual as it does not make sense to override even when\n      upgrading. Create a separate initializer function instead."
            },
            "functionSelector": "29b6eca9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "32",
                    "id": 34889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4127:1:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  }
                ],
                "id": 34890,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34888,
                  "name": "reinitializer",
                  "nameLocations": [
                    "4113:13:44"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29736,
                  "src": "4113:13:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "4113:16:44"
              }
            ],
            "name": "initializeV2",
            "nameLocation": "4048:12:44",
            "parameters": {
              "id": 34887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34886,
                  "mutability": "mutable",
                  "name": "_batchDeletionVerifiers",
                  "nameLocation": "4081:23:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 34914,
                  "src": "4061:43:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                    "typeString": "contract VerifierLookupTable"
                  },
                  "typeName": {
                    "id": 34885,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34884,
                      "name": "VerifierLookupTable",
                      "nameLocations": [
                        "4061:19:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35402,
                      "src": "4061:19:44"
                    },
                    "referencedDeclaration": 35402,
                    "src": "4061:19:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                      "typeString": "contract VerifierLookupTable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4060:45:44"
            },
            "returnParameters": {
              "id": 34891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4130:0:44"
            },
            "scope": 35112,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35025,
            "nodeType": "FunctionDefinition",
            "src": "6347:2113:44",
            "nodes": [],
            "body": {
              "id": 35024,
              "nodeType": "Block",
              "src": "6581:1879:44",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34935
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34935,
                      "mutability": "mutable",
                      "name": "batchSize",
                      "nameLocation": "6598:9:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 35024,
                      "src": "6591:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 34934,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6591:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34943,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 34941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 34938,
                            "name": "packedDeletionIndices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34921,
                            "src": "6617:21:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 34939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6639:6:44",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6617:28:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 34940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6648:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "6617:32:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6610:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint32_$",
                        "typeString": "type(uint32)"
                      },
                      "typeName": {
                        "id": 34936,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6610:6:44",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 34942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6610:40:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6591:59:44"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34944,
                      "name": "preRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34923,
                      "src": "6665:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 34945,
                      "name": "_latestRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34024,
                      "src": "6676:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6665:22:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34953,
                  "nodeType": "IfStatement",
                  "src": "6661:95:44",
                  "trueBody": {
                    "id": 34952,
                    "nodeType": "Block",
                    "src": "6689:67:44",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 34948,
                              "name": "preRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34923,
                              "src": "6724:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 34949,
                              "name": "_latestRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34024,
                              "src": "6733:11:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 34947,
                            "name": "NotLatestRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34126,
                            "src": "6710:13:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) pure"
                            }
                          },
                          "id": 34950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6710:35:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34951,
                        "nodeType": "RevertStatement",
                        "src": "6703:42:44"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    34955
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34955,
                      "mutability": "mutable",
                      "name": "inputHash",
                      "nameLocation": "6855:9:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 35024,
                      "src": "6847:17:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 34954,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6847:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34962,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34957,
                        "name": "packedDeletionIndices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34921,
                        "src": "6914:21:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 34958,
                        "name": "preRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34923,
                        "src": "6937:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34959,
                        "name": "postRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34925,
                        "src": "6946:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34960,
                        "name": "batchSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34935,
                        "src": "6956:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 34956,
                      "name": "calculateIdentityDeletionInputHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35111,
                      "src": "6879:34:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint256_$_t_uint32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes calldata,uint256,uint256,uint32) view returns (bytes32)"
                      }
                    },
                    "id": 34961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6879:87:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6847:119:44"
                },
                {
                  "assignments": [
                    34964
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34964,
                      "mutability": "mutable",
                      "name": "reducedElement",
                      "nameLocation": "7273:14:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 35024,
                      "src": "7265:22:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34963,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7265:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34971,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 34967,
                          "name": "inputHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34955,
                          "src": "7298:9:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 34966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7290:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 34965,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7290:7:44",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7290:18:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "id": 34969,
                      "name": "SNARK_SCALAR_FIELD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34036,
                      "src": "7311:18:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7290:39:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7265:64:44"
                },
                {
                  "assignments": [
                    34974
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34974,
                      "mutability": "mutable",
                      "name": "deletionVerifier",
                      "nameLocation": "7427:16:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 35024,
                      "src": "7413:30:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITreeVerifier_$35459",
                        "typeString": "contract ITreeVerifier"
                      },
                      "typeName": {
                        "id": 34973,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34972,
                          "name": "ITreeVerifier",
                          "nameLocations": [
                            "7413:13:44"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35459,
                          "src": "7413:13:44"
                        },
                        "referencedDeclaration": 35459,
                        "src": "7413:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITreeVerifier_$35459",
                          "typeString": "contract ITreeVerifier"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34979,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34977,
                        "name": "batchSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34935,
                        "src": "7484:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 34975,
                        "name": "batchDeletionVerifiers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34879,
                        "src": "7446:22:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                          "typeString": "contract VerifierLookupTable"
                        }
                      },
                      "id": 34976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7469:14:44",
                      "memberName": "getVerifierFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35274,
                      "src": "7446:37:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_ITreeVerifier_$35459_$",
                        "typeString": "function (uint256) view external returns (contract ITreeVerifier)"
                      }
                    },
                    "id": 34978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7446:48:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITreeVerifier_$35459",
                      "typeString": "contract ITreeVerifier"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7413:81:44"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 35007,
                        "nodeType": "Block",
                        "src": "7625:464:44",
                        "statements": [
                          {
                            "expression": {
                              "id": 34988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 34986,
                                "name": "_latestRoot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34024,
                                "src": "7792:11:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 34987,
                                "name": "postRoot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34925,
                                "src": "7806:8:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7792:22:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 34989,
                            "nodeType": "ExpressionStatement",
                            "src": "7792:22:44"
                          },
                          {
                            "expression": {
                              "id": 34998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 34990,
                                  "name": "rootHistory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34029,
                                  "src": "7960:11:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint128_$",
                                    "typeString": "mapping(uint256 => uint128)"
                                  }
                                },
                                "id": 34992,
                                "indexExpression": {
                                  "id": 34991,
                                  "name": "preRoot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34923,
                                  "src": "7972:7:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "7960:20:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 34995,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "7991:5:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 34996,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7997:9:44",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "7991:15:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 34994,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7983:7:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint128_$",
                                    "typeString": "type(uint128)"
                                  },
                                  "typeName": {
                                    "id": 34993,
                                    "name": "uint128",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7983:7:44",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 34997,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7983:24:44",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "src": "7960:47:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "id": 34999,
                            "nodeType": "ExpressionStatement",
                            "src": "7960:47:44"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "id": 35001,
                                  "name": "preRoot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34923,
                                  "src": "8039:7:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 35002,
                                    "name": "TreeChange",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34078,
                                    "src": "8048:10:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_TreeChange_$34078_$",
                                      "typeString": "type(enum WorldIDIdentityManagerImplV1.TreeChange)"
                                    }
                                  },
                                  "id": 35003,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "8059:8:44",
                                  "memberName": "Deletion",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 34077,
                                  "src": "8048:19:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_TreeChange_$34078",
                                    "typeString": "enum WorldIDIdentityManagerImplV1.TreeChange"
                                  }
                                },
                                {
                                  "id": 35004,
                                  "name": "postRoot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34925,
                                  "src": "8069:8:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_TreeChange_$34078",
                                    "typeString": "enum WorldIDIdentityManagerImplV1.TreeChange"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 35000,
                                "name": "TreeChanged",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34159,
                                "src": "8027:11:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_TreeChange_$34078_$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256,enum WorldIDIdentityManagerImplV1.TreeChange,uint256)"
                                }
                              },
                              "id": 35005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8027:51:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 35006,
                            "nodeType": "EmitStatement",
                            "src": "8022:56:44"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 35008,
                      "nodeType": "TryCatchClause",
                      "src": "7625:464:44"
                    },
                    {
                      "block": {
                        "id": 35016,
                        "nodeType": "Block",
                        "src": "8127:100:44",
                        "statements": [
                          {
                            "documentation": "This is not the revert we're looking for.",
                            "expression": {
                              "arguments": [
                                {
                                  "id": 35013,
                                  "name": "errString",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35010,
                                  "src": "8206:9:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 35012,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "8199:6:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 35014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8199:17:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 35015,
                            "nodeType": "ExpressionStatement",
                            "src": "8199:17:44"
                          }
                        ]
                      },
                      "errorName": "Error",
                      "id": 35017,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 35011,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 35010,
                            "mutability": "mutable",
                            "name": "errString",
                            "nameLocation": "8116:9:44",
                            "nodeType": "VariableDeclaration",
                            "scope": 35017,
                            "src": "8102:23:44",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 35009,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "8102:6:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "8101:25:44"
                      },
                      "src": "8090:137:44"
                    },
                    {
                      "block": {
                        "id": 35021,
                        "nodeType": "Block",
                        "src": "8234:220:44",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 35018,
                                "name": "ProofValidationFailure",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34119,
                                "src": "8419:22:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 35019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8419:24:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 35020,
                            "nodeType": "RevertStatement",
                            "src": "8412:31:44"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 35022,
                      "nodeType": "TryCatchClause",
                      "src": "8228:226:44"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 34982,
                        "name": "deletionProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34919,
                        "src": "7592:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                          "typeString": "uint256[8] calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 34983,
                            "name": "reducedElement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34964,
                            "src": "7608:14:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 34984,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7607:16:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                          "typeString": "uint256[1] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                          "typeString": "uint256[8] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                          "typeString": "uint256[1] memory"
                        }
                      ],
                      "expression": {
                        "id": 34980,
                        "name": "deletionVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34974,
                        "src": "7563:16:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITreeVerifier_$35459",
                          "typeString": "contract ITreeVerifier"
                        }
                      },
                      "id": 34981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7580:11:44",
                      "memberName": "verifyProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35458,
                      "src": "7563:28:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$8_memory_ptr_$_t_array$_t_uint256_$1_memory_ptr_$returns$__$",
                        "typeString": "function (uint256[8] memory,uint256[1] memory) external"
                      }
                    },
                    "id": 34985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7563:61:44",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35023,
                  "nodeType": "TryStatement",
                  "src": "7559:895:44"
                }
              ]
            },
            "documentation": {
              "id": 34915,
              "nodeType": "StructuredDocumentation",
              "src": "5539:803:44",
              "text": "@param preRoot The value for the root of the tree before the corresponding identity commitments have\n been deleted. Must be an element of the field `Kr`.\n @param postRoot The root obtained after deleting all of `identityCommitments` into the tree\n        described by `preRoot`. Must be an element of the field `Kr`.\n @custom:reverts Unauthorized If the message sender is not authorised to add identities.\n @custom:reverts NotLatestRoot If the provided `preRoot` is not the latest root.\n @custom:reverts ProofValidationFailure If `deletionProof` cannot be verified using the\n                 provided inputs.\n @custom:reverts VerifierLookupTable.NoSuchVerifier If the batch sizes doesn't match a known\n                 verifier."
            },
            "functionSelector": "ea10fbbe",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34928,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34927,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "6534:9:44"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "6534:9:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "6534:9:44"
              },
              {
                "id": 34930,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34929,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "6544:15:44"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48458,
                  "src": "6544:15:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "6544:15:44"
              },
              {
                "id": 34932,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34931,
                  "name": "onlyIdentityOperator",
                  "nameLocations": [
                    "6560:20:44"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34868,
                  "src": "6560:20:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "6560:20:44"
              }
            ],
            "name": "deleteIdentities",
            "nameLocation": "6356:16:44",
            "parameters": {
              "id": 34926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34919,
                  "mutability": "mutable",
                  "name": "deletionProof",
                  "nameLocation": "6402:13:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 35025,
                  "src": "6382:33:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                    "typeString": "uint256[8]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34916,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6382:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34918,
                    "length": {
                      "hexValue": "38",
                      "id": 34917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6390:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "6382:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
                      "typeString": "uint256[8]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34921,
                  "mutability": "mutable",
                  "name": "packedDeletionIndices",
                  "nameLocation": "6440:21:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 35025,
                  "src": "6425:36:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 34920,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6425:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34923,
                  "mutability": "mutable",
                  "name": "preRoot",
                  "nameLocation": "6479:7:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 35025,
                  "src": "6471:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6471:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34925,
                  "mutability": "mutable",
                  "name": "postRoot",
                  "nameLocation": "6504:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 35025,
                  "src": "6496:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6496:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6372:146:44"
            },
            "returnParameters": {
              "id": 34933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6581:0:44"
            },
            "scope": 35112,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 35041,
            "nodeType": "FunctionDefinition",
            "src": "8798:228:44",
            "nodes": [],
            "body": {
              "id": 35040,
              "nodeType": "Block",
              "src": "8971:55:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35037,
                        "name": "batchDeletionVerifiers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34879,
                        "src": "8996:22:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                          "typeString": "contract VerifierLookupTable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                          "typeString": "contract VerifierLookupTable"
                        }
                      ],
                      "id": 35036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8988:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 35035,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8988:7:44",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 35038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8988:31:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 35034,
                  "id": 35039,
                  "nodeType": "Return",
                  "src": "8981:38:44"
                }
              ]
            },
            "documentation": {
              "id": 35026,
              "nodeType": "StructuredDocumentation",
              "src": "8466:327:44",
              "text": "@notice Gets the address for the lookup table of merkle tree verifiers used for batch identity\n         deletions.\n @dev The deletion verifier supports batch deletions of size 10, 100 and 1000 members per batch.\n @return addr The address of the contract being used as the verifier lookup table."
            },
            "functionSelector": "3e8919b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 35029,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 35028,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "8907:9:44"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "8907:9:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "8907:9:44"
              },
              {
                "id": 35031,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 35030,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "8925:15:44"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48458,
                  "src": "8925:15:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "8925:15:44"
              }
            ],
            "name": "getDeleteIdentitiesVerifierLookupTableAddress",
            "nameLocation": "8807:45:44",
            "parameters": {
              "id": 35027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8852:2:44"
            },
            "returnParameters": {
              "id": 35034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35033,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35041,
                  "src": "8958:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8958:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8957:9:44"
            },
            "scope": 35112,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 35091,
            "nodeType": "FunctionDefinition",
            "src": "9346:517:44",
            "nodes": [],
            "body": {
              "id": 35090,
              "nodeType": "Block",
              "src": "9519:344:44",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 35062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 35056,
                          "name": "newTable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35045,
                          "src": "9541:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                            "typeString": "contract VerifierLookupTable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                            "typeString": "contract VerifierLookupTable"
                          }
                        ],
                        "id": 35055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9533:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 35054,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9533:7:44",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 35057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9533:17:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 35060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9562:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 35059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9554:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 35058,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9554:7:44",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 35061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9554:10:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9533:31:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35067,
                  "nodeType": "IfStatement",
                  "src": "9529:89:44",
                  "trueBody": {
                    "id": 35066,
                    "nodeType": "Block",
                    "src": "9566:52:44",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35063,
                            "name": "InvalidVerifierLUT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34149,
                            "src": "9587:18:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 35064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9587:20:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35065,
                        "nodeType": "RevertStatement",
                        "src": "9580:27:44"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    35070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35070,
                      "mutability": "mutable",
                      "name": "oldTable",
                      "nameLocation": "9648:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 35090,
                      "src": "9628:28:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                        "typeString": "contract VerifierLookupTable"
                      },
                      "typeName": {
                        "id": 35069,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 35068,
                          "name": "VerifierLookupTable",
                          "nameLocations": [
                            "9628:19:44"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35402,
                          "src": "9628:19:44"
                        },
                        "referencedDeclaration": 35402,
                        "src": "9628:19:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                          "typeString": "contract VerifierLookupTable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35072,
                  "initialValue": {
                    "id": 35071,
                    "name": "batchDeletionVerifiers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34879,
                    "src": "9659:22:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                      "typeString": "contract VerifierLookupTable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9628:53:44"
                },
                {
                  "expression": {
                    "id": 35075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35073,
                      "name": "batchDeletionVerifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34879,
                      "src": "9691:22:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                        "typeString": "contract VerifierLookupTable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 35074,
                      "name": "newTable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35045,
                      "src": "9716:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                        "typeString": "contract VerifierLookupTable"
                      }
                    },
                    "src": "9691:33:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                      "typeString": "contract VerifierLookupTable"
                    }
                  },
                  "id": 35076,
                  "nodeType": "ExpressionStatement",
                  "src": "9691:33:44"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 35078,
                          "name": "Dependency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34084,
                          "src": "9770:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Dependency_$34084_$",
                            "typeString": "type(enum WorldIDIdentityManagerImplV1.Dependency)"
                          }
                        },
                        "id": 35079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "9781:27:44",
                        "memberName": "DeletionVerifierLookupTable",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34082,
                        "src": "9770:38:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Dependency_$34084",
                          "typeString": "enum WorldIDIdentityManagerImplV1.Dependency"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 35082,
                            "name": "oldTable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35070,
                            "src": "9818:8:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                              "typeString": "contract VerifierLookupTable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                              "typeString": "contract VerifierLookupTable"
                            }
                          ],
                          "id": 35081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9810:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35080,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9810:7:44",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9810:17:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 35086,
                            "name": "newTable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35045,
                            "src": "9837:8:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                              "typeString": "contract VerifierLookupTable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                              "typeString": "contract VerifierLookupTable"
                            }
                          ],
                          "id": 35085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9829:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35084,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9829:7:44",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9829:17:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Dependency_$34084",
                          "typeString": "enum WorldIDIdentityManagerImplV1.Dependency"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35077,
                      "name": "DependencyUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34169,
                      "src": "9739:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_Dependency_$34084_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (enum WorldIDIdentityManagerImplV1.Dependency,address,address)"
                      }
                    },
                    "id": 35088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9739:117:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35089,
                  "nodeType": "EmitStatement",
                  "src": "9734:122:44"
                }
              ]
            },
            "documentation": {
              "id": 35042,
              "nodeType": "StructuredDocumentation",
              "src": "9032:309:44",
              "text": "@notice Sets the address for the lookup table of merkle tree verifiers used for identity\n         deletions.\n @dev Only the owner of the contract can call this function.\n @param newTable The new verifier lookup table to be used for verifying identity\n        deletions."
            },
            "functionSelector": "aa4a729e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 35048,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 35047,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "9463:9:44"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "9463:9:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "9463:9:44"
              },
              {
                "id": 35050,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 35049,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "9481:15:44"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48458,
                  "src": "9481:15:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "9481:15:44"
              },
              {
                "id": 35052,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 35051,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "9505:9:44"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29157,
                  "src": "9505:9:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "9505:9:44"
              }
            ],
            "name": "setDeleteIdentitiesVerifierLookupTable",
            "nameLocation": "9355:38:44",
            "parameters": {
              "id": 35046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35045,
                  "mutability": "mutable",
                  "name": "newTable",
                  "nameLocation": "9414:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 35091,
                  "src": "9394:28:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                    "typeString": "contract VerifierLookupTable"
                  },
                  "typeName": {
                    "id": 35044,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35043,
                      "name": "VerifierLookupTable",
                      "nameLocations": [
                        "9394:19:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35402,
                      "src": "9394:19:44"
                    },
                    "referencedDeclaration": 35402,
                    "src": "9394:19:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VerifierLookupTable_$35402",
                      "typeString": "contract VerifierLookupTable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9393:30:44"
            },
            "returnParameters": {
              "id": 35053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9519:0:44"
            },
            "scope": 35112,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 35111,
            "nodeType": "FunctionDefinition",
            "src": "11102:685:44",
            "nodes": [],
            "body": {
              "id": 35110,
              "nodeType": "Block",
              "src": "11344:443:44",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nativeSrc": "11363:418:44",
                    "nodeType": "YulBlock",
                    "src": "11363:418:44",
                    "statements": [
                      {
                        "nativeSrc": "11377:30:44",
                        "nodeType": "YulVariableDeclaration",
                        "src": "11377:30:44",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "11402:4:44",
                              "nodeType": "YulLiteral",
                              "src": "11402:4:44",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nativeSrc": "11396:5:44",
                            "nodeType": "YulIdentifier",
                            "src": "11396:5:44"
                          },
                          "nativeSrc": "11396:11:44",
                          "nodeType": "YulFunctionCall",
                          "src": "11396:11:44"
                        },
                        "variables": [
                          {
                            "name": "startOffset",
                            "nativeSrc": "11381:11:44",
                            "nodeType": "YulTypedName",
                            "src": "11381:11:44",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nativeSrc": "11420:40:44",
                        "nodeType": "YulVariableDeclaration",
                        "src": "11420:40:44",
                        "value": {
                          "arguments": [
                            {
                              "name": "batchSize",
                              "nativeSrc": "11447:9:44",
                              "nodeType": "YulIdentifier",
                              "src": "11447:9:44"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "11458:1:44",
                              "nodeType": "YulLiteral",
                              "src": "11458:1:44",
                              "type": "",
                              "value": "4"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nativeSrc": "11443:3:44",
                            "nodeType": "YulIdentifier",
                            "src": "11443:3:44"
                          },
                          "nativeSrc": "11443:17:44",
                          "nodeType": "YulFunctionCall",
                          "src": "11443:17:44"
                        },
                        "variables": [
                          {
                            "name": "indicesByteSize",
                            "nativeSrc": "11424:15:44",
                            "nodeType": "YulTypedName",
                            "src": "11424:15:44",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "startOffset",
                              "nativeSrc": "11486:11:44",
                              "nodeType": "YulIdentifier",
                              "src": "11486:11:44"
                            },
                            {
                              "name": "packedDeletionIndices.offset",
                              "nativeSrc": "11499:28:44",
                              "nodeType": "YulIdentifier",
                              "src": "11499:28:44"
                            },
                            {
                              "name": "indicesByteSize",
                              "nativeSrc": "11529:15:44",
                              "nodeType": "YulIdentifier",
                              "src": "11529:15:44"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nativeSrc": "11473:12:44",
                            "nodeType": "YulIdentifier",
                            "src": "11473:12:44"
                          },
                          "nativeSrc": "11473:72:44",
                          "nodeType": "YulFunctionCall",
                          "src": "11473:72:44"
                        },
                        "nativeSrc": "11473:72:44",
                        "nodeType": "YulExpressionStatement",
                        "src": "11473:72:44"
                      },
                      {
                        "nativeSrc": "11558:52:44",
                        "nodeType": "YulVariableDeclaration",
                        "src": "11558:52:44",
                        "value": {
                          "arguments": [
                            {
                              "name": "startOffset",
                              "nativeSrc": "11581:11:44",
                              "nodeType": "YulIdentifier",
                              "src": "11581:11:44"
                            },
                            {
                              "name": "indicesByteSize",
                              "nativeSrc": "11594:15:44",
                              "nodeType": "YulIdentifier",
                              "src": "11594:15:44"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nativeSrc": "11577:3:44",
                            "nodeType": "YulIdentifier",
                            "src": "11577:3:44"
                          },
                          "nativeSrc": "11577:33:44",
                          "nodeType": "YulFunctionCall",
                          "src": "11577:33:44"
                        },
                        "variables": [
                          {
                            "name": "rootsOffset",
                            "nativeSrc": "11562:11:44",
                            "nodeType": "YulTypedName",
                            "src": "11562:11:44",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "rootsOffset",
                              "nativeSrc": "11630:11:44",
                              "nodeType": "YulIdentifier",
                              "src": "11630:11:44"
                            },
                            {
                              "name": "preRoot",
                              "nativeSrc": "11643:7:44",
                              "nodeType": "YulIdentifier",
                              "src": "11643:7:44"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nativeSrc": "11623:6:44",
                            "nodeType": "YulIdentifier",
                            "src": "11623:6:44"
                          },
                          "nativeSrc": "11623:28:44",
                          "nodeType": "YulFunctionCall",
                          "src": "11623:28:44"
                        },
                        "nativeSrc": "11623:28:44",
                        "nodeType": "YulExpressionStatement",
                        "src": "11623:28:44"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "rootsOffset",
                                  "nativeSrc": "11675:11:44",
                                  "nodeType": "YulIdentifier",
                                  "src": "11675:11:44"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "11688:2:44",
                                  "nodeType": "YulLiteral",
                                  "src": "11688:2:44",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "11671:3:44",
                                "nodeType": "YulIdentifier",
                                "src": "11671:3:44"
                              },
                              "nativeSrc": "11671:20:44",
                              "nodeType": "YulFunctionCall",
                              "src": "11671:20:44"
                            },
                            {
                              "name": "postRoot",
                              "nativeSrc": "11693:8:44",
                              "nodeType": "YulIdentifier",
                              "src": "11693:8:44"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nativeSrc": "11664:6:44",
                            "nodeType": "YulIdentifier",
                            "src": "11664:6:44"
                          },
                          "nativeSrc": "11664:38:44",
                          "nodeType": "YulFunctionCall",
                          "src": "11664:38:44"
                        },
                        "nativeSrc": "11664:38:44",
                        "nodeType": "YulExpressionStatement",
                        "src": "11664:38:44"
                      },
                      {
                        "nativeSrc": "11715:56:44",
                        "nodeType": "YulAssignment",
                        "src": "11715:56:44",
                        "value": {
                          "arguments": [
                            {
                              "name": "startOffset",
                              "nativeSrc": "11733:11:44",
                              "nodeType": "YulIdentifier",
                              "src": "11733:11:44"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "11750:2:44",
                                  "nodeType": "YulLiteral",
                                  "src": "11750:2:44",
                                  "type": "",
                                  "value": "64"
                                },
                                {
                                  "name": "indicesByteSize",
                                  "nativeSrc": "11754:15:44",
                                  "nodeType": "YulIdentifier",
                                  "src": "11754:15:44"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "11746:3:44",
                                "nodeType": "YulIdentifier",
                                "src": "11746:3:44"
                              },
                              "nativeSrc": "11746:24:44",
                              "nodeType": "YulFunctionCall",
                              "src": "11746:24:44"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nativeSrc": "11723:9:44",
                            "nodeType": "YulIdentifier",
                            "src": "11723:9:44"
                          },
                          "nativeSrc": "11723:48:44",
                          "nodeType": "YulFunctionCall",
                          "src": "11723:48:44"
                        },
                        "variableNames": [
                          {
                            "name": "hash",
                            "nativeSrc": "11715:4:44",
                            "nodeType": "YulIdentifier",
                            "src": "11715:4:44"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 35100,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "11447:9:44",
                      "valueSize": 1
                    },
                    {
                      "declaration": 35107,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "11715:4:44",
                      "valueSize": 1
                    },
                    {
                      "declaration": 35094,
                      "isOffset": true,
                      "isSlot": false,
                      "src": "11499:28:44",
                      "suffix": "offset",
                      "valueSize": 1
                    },
                    {
                      "declaration": 35098,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "11693:8:44",
                      "valueSize": 1
                    },
                    {
                      "declaration": 35096,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "11643:7:44",
                      "valueSize": 1
                    }
                  ],
                  "id": 35109,
                  "nodeType": "InlineAssembly",
                  "src": "11354:427:44"
                }
              ]
            },
            "documentation": {
              "id": 35092,
              "nodeType": "StructuredDocumentation",
              "src": "10122:975:44",
              "text": "@notice Calculates the input hash for the identity deletion verifier.\n @dev Implements the computation described below.\n @param packedDeletionIndices The indices of the identities that were deleted from the tree.\n @param preRoot The root value of the tree before these deletions were made.\n @param postRoot The root value of the tree after these deletions were made.\n @param batchSize The number of identities that were deleted in this batch\n @return hash The input hash calculated as described below.\n @dev the deletion indices are packed into bytes calldata where each deletion index is 32 bits\n     wide. The indices are encoded using abi.encodePacked for testing.\n We keccak hash all input to save verification gas. Inputs for the hash are arranged as follows:\n packedDeletionIndices || PreRoot || PostRoot\n   32 bits * batchSize ||   256   ||    256"
            },
            "functionSelector": "31e4e992",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 35103,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 35102,
                  "name": "onlyProxy",
                  "nameLocations": [
                    "11295:9:44"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29855,
                  "src": "11295:9:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "11295:9:44"
              },
              {
                "id": 35105,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 35104,
                  "name": "onlyInitialized",
                  "nameLocations": [
                    "11305:15:44"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48458,
                  "src": "11305:15:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "11305:15:44"
              }
            ],
            "name": "calculateIdentityDeletionInputHash",
            "nameLocation": "11111:34:44",
            "parameters": {
              "id": 35101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35094,
                  "mutability": "mutable",
                  "name": "packedDeletionIndices",
                  "nameLocation": "11170:21:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 35111,
                  "src": "11155:36:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35093,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11155:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35096,
                  "mutability": "mutable",
                  "name": "preRoot",
                  "nameLocation": "11209:7:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 35111,
                  "src": "11201:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11201:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35098,
                  "mutability": "mutable",
                  "name": "postRoot",
                  "nameLocation": "11234:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 35111,
                  "src": "11226:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11226:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35100,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nameLocation": "11259:9:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 35111,
                  "src": "11252:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 35099,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11252:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11145:129:44"
            },
            "returnParameters": {
              "id": 35108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35107,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "11338:4:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 35111,
                  "src": "11330:12:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35106,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11330:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11329:14:44"
            },
            "scope": 35112,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34874,
              "name": "WorldIDIdentityManagerImplV1",
              "nameLocations": [
                "483:28:44"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34869,
              "src": "483:28:44"
            },
            "id": 34875,
            "nodeType": "InheritanceSpecifier",
            "src": "483:28:44"
          }
        ],
        "canonicalName": "WorldIDIdentityManagerImplV2",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 34873,
          "nodeType": "StructuredDocumentation",
          "src": "72:370:44",
          "text": "@title WorldID Identity Manager Implementation Version 2\n @author Worldcoin\n @notice An implementation of a batch-based identity manager for the WorldID protocol.\n @dev The manager is based on the principle of verifying externally-created Zero Knowledge Proofs\n      to perform the deletions.\n @dev This is the implementation delegated to by a proxy."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          35112,
          34869,
          35483,
          35412,
          35167,
          48464,
          29937,
          29622,
          29253,
          29111,
          29243,
          30263,
          29801
        ],
        "name": "WorldIDIdentityManagerImplV2",
        "nameLocation": "451:28:44",
        "scope": 35113,
        "usedErrors": [
          34106,
          34111,
          34116,
          34119,
          34126,
          34129,
          34132,
          34135,
          34140,
          34143,
          34146,
          34149,
          35143,
          35408,
          35411,
          48435
        ],
        "usedEvents": [
          29037,
          29128,
          29287,
          29431,
          29496,
          29647,
          34159,
          34169,
          34174,
          34181,
          34188,
          34195,
          34882
        ]
      }
    ]
  },
  "id": 44
}